"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[737],{9477:function(a,b,c){c.d(b,{"$V":function(){return hD},D1R:function(){return r},DqL:function(){return g3},DvJ:function(){return b$},FM8:function(){return N},ILR:function(){return v},IOt:function(){return A},Ilk:function(){return ab},Kj0:function(){return bY},LgZ:function(){return l},"N$j":function(){return eW},NDo:function(){return o},Ns1:function(){return n},OdW:function(){return e$},Ox3:function(){return hf},Pa4:function(){return am},QmN:function(){return e},Rki:function(){return hL},RsA:function(){return d},SUY:function(){return hk},TUv:function(){return eV},TlE:function(){return bv},Tme:function(){return be},TyD:function(){return q},USm:function(){return a_},Vj0:function(){return ck},Wl3:function(){return g},Xaj:function(){return j},Xcj:function(){return hA},Zp0:function(){return hh},"_AM":function(){return w},"_C8":function(){return gL},"_fP":function(){return al},"a$l":function(){return by},aNw:function(){return g0},b5g:function(){return es},cBI:function(){return hI},cPb:function(){return b4},dUE:function(){return gS},dpR:function(){return g6},ehD:function(){return i},fHI:function(){return fG},fSK:function(){return m},fto:function(){return y},hH6:function(){return g2},iLg:function(){return gU},jyz:function(){return b2},k74:function(){return k},l0P:function(){return z},lLk:function(){return g$},m7l:function(){return gX},nls:function(){return e4},ntZ:function(){return f},pBf:function(){return E},qlB:function(){return bw},rDY:function(){return b1},rpg:function(){return p},u9r:function(){return bG},v3W:function(){return u},vBJ:function(){return bs},vCx:function(){return x},wk1:function(){return s},wuA:function(){return t},x12:function(){return fa},"xo$":function(){return gu},xsS:function(){return ev},y8_:function(){return hN},yC1:function(){return gW},yGw:function(){return aR},yxD:function(){return g5}});let d={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},f=2,g=0,h=1,i=2,j=5,k=204,l=205,m=206,n=0,o=2,p=1e3,q=1003,r=1008,s=1023,t=33776,u=33778,v=33779,w=35840,x=35841,y=36196,z=37492,A=0,B="srgb",C="srgb-linear",D="300 es";class E{addEventListener(a,b){void 0===this._listeners&&(this._listeners={});let c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)}hasEventListener(a,b){if(void 0===this._listeners)return!1;let c=this._listeners;return void 0!==c[a]&& -1!==c[a].indexOf(b)}removeEventListener(a,b){if(void 0===this._listeners)return;let c=this._listeners,d=c[a];if(void 0!==d){let e=d.indexOf(b);-1!==e&&d.splice(e,1)}}dispatchEvent(a){if(void 0===this._listeners)return;let b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;let d=c.slice(0);for(let e=0,f=d.length;e<f;e++)d[e].call(this,a);a.target=null}}}let F=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],G=Math.PI/180,H=180/Math.PI;function I(){let a=4294967295*Math.random()|0,b=4294967295*Math.random()|0,c=4294967295*Math.random()|0,d=4294967295*Math.random()|0,e=F[255&a]+F[a>>8&255]+F[a>>16&255]+F[a>>24&255]+"-"+F[255&b]+F[b>>8&255]+"-"+F[b>>16&15|64]+F[b>>24&255]+"-"+F[63&c|128]+F[c>>8&255]+"-"+F[c>>16&255]+F[c>>24&255]+F[255&d]+F[d>>8&255]+F[d>>16&255]+F[d>>24&255];return e.toLowerCase()}function J(a,b,c){return Math.max(b,Math.min(c,a))}function K(a,b,c){return(1-c)*a+c*b}function L(a){return(a&a-1)==0&&0!==a}function M(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}class N{constructor(a=0,b=0){N.prototype.isVector2=!0,this.x=a,this.y=b}get width(){return this.x}set width(a){this.x=a}get height(){return this.y}set height(a){this.y=a}set(a,b){return this.x=a,this.y=b,this}setScalar(a){return this.x=a,this.y=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y)}copy(a){return this.x=a.x,this.y=a.y,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)}addScalar(a){return this.x+=a,this.y+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)}subScalar(a){return this.x-=a,this.y-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(a){return this.x*=a.x,this.y*=a.y,this}multiplyScalar(a){return this.x*=a,this.y*=a,this}divide(a){return this.x/=a.x,this.y/=a.y,this}divideScalar(a){return this.multiplyScalar(1/a)}applyMatrix3(a){let b=this.x,c=this.y,d=a.elements;return this.x=d[0]*b+d[3]*c+d[6],this.y=d[1]*b+d[4]*c+d[7],this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(a){return this.x*a.x+this.y*a.y}cross(a){return this.x*a.y-this.y*a.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let a=Math.atan2(-this.y,-this.x)+Math.PI;return a}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y;return b*b+c*c}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this}equals(a){return a.x===this.x&&a.y===this.y}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this}rotateAround(a,b){let c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;return this.x=e*c-f*d+a.x,this.y=e*d+f*c+a.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class O{constructor(){O.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i){let j=this.elements;return j[0]=a,j[1]=d,j[2]=g,j[3]=b,j[4]=e,j[5]=h,j[6]=c,j[7]=f,j[8]=i,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],this}extractBasis(a,b,c){return a.setFromMatrix3Column(this,0),b.setFromMatrix3Column(this,1),c.setFromMatrix3Column(this,2),this}setFromMatrix4(a){let b=a.elements;return this.set(b[0],b[4],b[8],b[1],b[5],b[9],b[2],b[6],b[10]),this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[3],h=c[6],i=c[1],j=c[4],k=c[7],l=c[2],m=c[5],n=c[8],o=d[0],p=d[3],q=d[6],r=d[1],s=d[4],t=d[7],u=d[2],v=d[5],w=d[8];return e[0]=f*o+g*r+h*u,e[3]=f*p+g*s+h*v,e[6]=f*q+g*t+h*w,e[1]=i*o+j*r+k*u,e[4]=i*p+j*s+k*v,e[7]=i*q+j*t+k*w,e[2]=l*o+m*r+n*u,e[5]=l*p+m*s+n*v,e[8]=l*q+m*t+n*w,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=j*f-g*i,l=g*h-j*e,m=i*e-f*h,n=b*k+c*l+d*m;if(0===n)return this.set(0,0,0,0,0,0,0,0,0);let o=1/n;return a[0]=k*o,a[1]=(d*i-j*c)*o,a[2]=(g*c-d*f)*o,a[3]=l*o,a[4]=(j*b-d*h)*o,a[5]=(d*e-g*b)*o,a[6]=m*o,a[7]=(c*h-i*b)*o,a[8]=(f*b-c*e)*o,this}transpose(){let a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this}getNormalMatrix(a){return this.setFromMatrix4(a).invert().transpose()}transposeIntoArray(a){let b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}setUvTransform(a,b,c,d,e,f,g){let h=Math.cos(e),i=Math.sin(e);return this.set(c*h,c*i,-c*(h*f+i*g)+f+a,-d*i,d*h,-d*(-i*f+h*g)+g+b,0,0,1),this}scale(a,b){let c=this.elements;return c[0]*=a,c[3]*=a,c[6]*=a,c[1]*=b,c[4]*=b,c[7]*=b,this}rotate(a){let b=Math.cos(a),c=Math.sin(a),d=this.elements,e=d[0],f=d[3],g=d[6],h=d[1],i=d[4],j=d[7];return d[0]=b*e+c*h,d[3]=b*f+c*i,d[6]=b*g+c*j,d[1]=-c*e+b*h,d[4]=-c*f+b*i,d[7]=-c*g+b*j,this}translate(a,b){let c=this.elements;return c[0]+=a*c[2],c[3]+=a*c[5],c[6]+=a*c[8],c[1]+=b*c[2],c[4]+=b*c[5],c[7]+=b*c[8],this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<9;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b=0){for(let c=0;c<9;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a}clone(){return new this.constructor().fromArray(this.elements)}}function P(a){for(let b=a.length-1;b>=0;--b)if(a[b]>65535)return!0;return!1}let Q={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function R(a,b){return new Q[a](b)}function S(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function T(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function U(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}let V={[B]:{[C]:T},[C]:{[B]:U}},W={legacyMode:!0,get workingColorSpace(){return C},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(a,b,c){if(this.legacyMode||b===c||!b||!c)return a;if(V[b]&& void 0!==V[b][c]){let d=V[b][c];return a.r=d(a.r),a.g=d(a.g),a.b=d(a.b),a}throw Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(a,b){return this.convert(a,this.workingColorSpace,b)},toWorkingColorSpace:function(a,b){return this.convert(a,b,this.workingColorSpace)}},X={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Y={r:0,g:0,b:0},Z={h:0,s:0,l:0},$={h:0,s:0,l:0};function _(a,b,c){return(c<0&&(c+=1),c>1&&(c-=1),c<1/6)?a+(b-a)*6*c:c<.5?b:c<2/3?a+(b-a)*6*(2/3-c):a}function aa(a,b){return b.r=a.r,b.g=a.g,b.b=a.b,b}class ab{constructor(a,b,c){if(this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===b&& void 0===c)return this.set(a);return this.setRGB(a,b,c)}set(a){return a&&a.isColor?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this}setScalar(a){return this.r=a,this.g=a,this.b=a,this}setHex(a,b=B){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,W.toWorkingColorSpace(this,b),this}setRGB(a,b,c,d=C){return this.r=a,this.g=b,this.b=c,W.toWorkingColorSpace(this,d),this}setHSL(a,b,c,d=C){var e,f;if(a=(e=a,f=1,(e%f+f)%f),b=J(b,0,1),c=J(c,0,1),0===b)this.r=this.g=this.b=c;else{let g=c<=.5?c*(1+b):c+b-c*b,h=2*c-g;this.r=_(h,g,a+1/3),this.g=_(h,g,a),this.b=_(h,g,a-1/3)}return W.toWorkingColorSpace(this,d),this}setStyle(a,b=B){function c(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}let d;if(d=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(a)){let e,f=d[1],g=d[2];switch(f){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,W.toWorkingColorSpace(this,b),c(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,W.toWorkingColorSpace(this,b),c(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g)){let h=parseFloat(e[1])/360,i=parseInt(e[2],10)/100,j=parseInt(e[3],10)/100;return c(e[4]),this.setHSL(h,i,j,b)}}}else if(d=/^\#([A-Fa-f\d]+)$/.exec(a)){let k=d[1],l=k.length;if(3===l)return this.r=parseInt(k.charAt(0)+k.charAt(0),16)/255,this.g=parseInt(k.charAt(1)+k.charAt(1),16)/255,this.b=parseInt(k.charAt(2)+k.charAt(2),16)/255,W.toWorkingColorSpace(this,b),this;if(6===l)return this.r=parseInt(k.charAt(0)+k.charAt(1),16)/255,this.g=parseInt(k.charAt(2)+k.charAt(3),16)/255,this.b=parseInt(k.charAt(4)+k.charAt(5),16)/255,W.toWorkingColorSpace(this,b),this}return a&&a.length>0?this.setColorName(a,b):this}setColorName(a,b=B){let c=X[a.toLowerCase()];return void 0!==c?this.setHex(c,b):console.warn("THREE.Color: Unknown color "+a),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(a){return this.r=a.r,this.g=a.g,this.b=a.b,this}copySRGBToLinear(a){return this.r=T(a.r),this.g=T(a.g),this.b=T(a.b),this}copyLinearToSRGB(a){return this.r=U(a.r),this.g=U(a.g),this.b=U(a.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(a=B){return W.fromWorkingColorSpace(aa(this,Y),a),J(255*Y.r,0,255)<<16^J(255*Y.g,0,255)<<8^J(255*Y.b,0,255)<<0}getHexString(a=B){return("000000"+this.getHex(a).toString(16)).slice(-6)}getHSL(a,b=C){W.fromWorkingColorSpace(aa(this,Y),b);let c=Y.r,d=Y.g,e=Y.b,f=Math.max(c,d,e),g=Math.min(c,d,e),h,i,j=(g+f)/2;if(g===f)h=0,i=0;else{let k=f-g;switch(i=j<=.5?k/(f+g):k/(2-f-g),f){case c:h=(d-e)/k+(d<e?6:0);break;case d:h=(e-c)/k+2;break;case e:h=(c-d)/k+4}h/=6}return a.h=h,a.s=i,a.l=j,a}getRGB(a,b=C){return W.fromWorkingColorSpace(aa(this,Y),b),a.r=Y.r,a.g=Y.g,a.b=Y.b,a}getStyle(a=B){return(W.fromWorkingColorSpace(aa(this,Y),a),a!==B)?`color(${a} ${Y.r} ${Y.g} ${Y.b})`:`rgb(${255*Y.r|0},${255*Y.g|0},${255*Y.b|0})`}offsetHSL(a,b,c){return this.getHSL(Z),Z.h+=a,Z.s+=b,Z.l+=c,this.setHSL(Z.h,Z.s,Z.l),this}add(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this}addColors(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this}addScalar(a){return this.r+=a,this.g+=a,this.b+=a,this}sub(a){return this.r=Math.max(0,this.r-a.r),this.g=Math.max(0,this.g-a.g),this.b=Math.max(0,this.b-a.b),this}multiply(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this}multiplyScalar(a){return this.r*=a,this.g*=a,this.b*=a,this}lerp(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this}lerpColors(a,b,c){return this.r=a.r+(b.r-a.r)*c,this.g=a.g+(b.g-a.g)*c,this.b=a.b+(b.b-a.b)*c,this}lerpHSL(a,b){this.getHSL(Z),a.getHSL($);let c=K(Z.h,$.h,b),d=K(Z.s,$.s,b),e=K(Z.l,$.l,b);return this.setHSL(c,d,e),this}equals(a){return a.r===this.r&&a.g===this.g&&a.b===this.b}fromArray(a,b=0){return this.r=a[b],this.g=a[b+1],this.b=a[b+2],this}toArray(a=[],b=0){return a[b]=this.r,a[b+1]=this.g,a[b+2]=this.b,a}fromBufferAttribute(a,b){return this.r=a.getX(b),this.g=a.getY(b),this.b=a.getZ(b),!0===a.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}ab.NAMES=X;let ac;class ad{static getDataURL(a){if(/^data:/i.test(a.src)||"undefined"==typeof HTMLCanvasElement)return a.src;let b;if(a instanceof HTMLCanvasElement)b=a;else{void 0===ac&&(ac=S("canvas")),ac.width=a.width,ac.height=a.height;let c=ac.getContext("2d");a instanceof ImageData?c.putImageData(a,0,0):c.drawImage(a,0,0,a.width,a.height),b=ac}return b.width>2048||b.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",a),b.toDataURL("image/jpeg",.6)):b.toDataURL("image/png")}static sRGBToLinear(a){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let b=S("canvas");b.width=a.width,b.height=a.height;let c=b.getContext("2d");c.drawImage(a,0,0,a.width,a.height);let d=c.getImageData(0,0,a.width,a.height),e=d.data;for(let f=0;f<e.length;f++)e[f]=255*T(e[f]/255);return c.putImageData(d,0,0),b}if(!a.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),a;{let g=a.data.slice(0);for(let h=0;h<g.length;h++)g instanceof Uint8Array||g instanceof Uint8ClampedArray?g[h]=Math.floor(255*T(g[h]/255)):g[h]=T(g[h]);return{data:g,width:a.width,height:a.height}}}}class ae{constructor(a=null){this.isSource=!0,this.uuid=I(),this.data=a,this.version=0}set needsUpdate(a){!0===a&&this.version++}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&& void 0!==a.images[this.uuid])return a.images[this.uuid];let c={uuid:this.uuid,url:""},d=this.data;if(null!==d){let e;if(Array.isArray(d)){e=[];for(let f=0,g=d.length;f<g;f++)d[f].isDataTexture?e.push(af(d[f].image)):e.push(af(d[f]))}else e=af(d);c.url=e}return b||(a.images[this.uuid]=c),c}}function af(a){return"undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap?ad.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ag=0;class ah extends E{constructor(a=ah.DEFAULT_IMAGE,b=ah.DEFAULT_MAPPING,c=1001,d=1001,e=1006,f=r,g=s,h=1009,i=1,j=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ag++}),this.uuid=I(),this.name="",this.source=new ae(a),this.mipmaps=[],this.mapping=b,this.wrapS=c,this.wrapT=d,this.magFilter=e,this.minFilter=f,this.anisotropy=i,this.format=g,this.internalFormat=null,this.type=h,this.offset=new N(0,0),this.repeat=new N(1,1),this.center=new N(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new O,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=j,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(a){this.source.data=a}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(a){return this.name=a.name,this.source=a.source,this.mipmaps=a.mipmaps.slice(0),this.mapping=a.mapping,this.wrapS=a.wrapS,this.wrapT=a.wrapT,this.magFilter=a.magFilter,this.minFilter=a.minFilter,this.anisotropy=a.anisotropy,this.format=a.format,this.internalFormat=a.internalFormat,this.type=a.type,this.offset.copy(a.offset),this.repeat.copy(a.repeat),this.center.copy(a.center),this.rotation=a.rotation,this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrix.copy(a.matrix),this.generateMipmaps=a.generateMipmaps,this.premultiplyAlpha=a.premultiplyAlpha,this.flipY=a.flipY,this.unpackAlignment=a.unpackAlignment,this.encoding=a.encoding,this.userData=JSON.parse(JSON.stringify(a.userData)),this.needsUpdate=!0,this}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&& void 0!==a.textures[this.uuid])return a.textures[this.uuid];let c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(a).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),b||(a.textures[this.uuid]=c),c}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(a){if(300!==this.mapping)return a;if(a.applyMatrix3(this.matrix),a.x<0||a.x>1)switch(this.wrapS){case p:a.x=a.x-Math.floor(a.x);break;case 1001:a.x=a.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x=a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case p:a.y=a.y-Math.floor(a.y);break;case 1001:a.y=a.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y=a.y-Math.floor(a.y)}return this.flipY&&(a.y=1-a.y),a}set needsUpdate(a){!0===a&&(this.version++,this.source.needsUpdate=!0)}}ah.DEFAULT_IMAGE=null,ah.DEFAULT_MAPPING=300;class ai{constructor(a=0,b=0,c=0,d=1){ai.prototype.isVector4=!0,this.x=a,this.y=b,this.z=c,this.w=d}get width(){return this.z}set width(a){this.z=a}get height(){return this.w}set height(a){this.w=a}set(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this.w=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setW(a){return this.w=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this.w+=a.w*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this.w*=a.w,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this}divideScalar(a){return this.multiplyScalar(1/a)}setAxisAngleFromQuaternion(a){this.w=2*Math.acos(a.w);let b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this}setAxisAngleFromRotationMatrix(a){let b,c,d,e,f=a.elements,g=f[0],h=f[4],i=f[8],j=f[1],k=f[5],l=f[9],m=f[2],n=f[6],o=f[10];if(.01>Math.abs(h-j)&&.01>Math.abs(i-m)&&.01>Math.abs(l-n)){if(.1>Math.abs(h+j)&&.1>Math.abs(i+m)&&.1>Math.abs(l+n)&&.1>Math.abs(g+k+o-3))return this.set(1,0,0,0),this;b=Math.PI;let p=(g+1)/2,q=(k+1)/2,r=(o+1)/2,s=(h+j)/4,t=(i+m)/4,u=(l+n)/4;return p>q&&p>r?p<.01?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(p),d=s/c,e=t/c):q>r?q<.01?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(q),c=s/d,e=u/d):r<.01?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(r),c=t/e,d=u/e),this.set(c,d,e,b),this}let v=Math.sqrt((n-l)*(n-l)+(i-m)*(i-m)+(j-h)*(j-h));return .001>Math.abs(v)&&(v=1),this.x=(n-l)/v,this.y=(i-m)/v,this.z=(j-h)/v,this.w=Math.acos((g+k+o-1)/2),this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this.w=Math.min(this.w,a.w),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this.w=Math.max(this.w,a.w),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this.w=Math.max(a.w,Math.min(b.w,this.w)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this.w=Math.max(a,Math.min(b,this.w)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this.w=a.w+(b.w-a.w)*c,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this.w=a.getW(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class aj extends E{constructor(a,b,c={}){super(),this.isWebGLRenderTarget=!0,this.width=a,this.height=b,this.depth=1,this.scissor=new ai(0,0,a,b),this.scissorTest=!1,this.viewport=new ai(0,0,a,b),this.texture=new ah({width:a,height:b,depth:1},c.mapping,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==c.generateMipmaps&&c.generateMipmaps,this.texture.internalFormat=void 0!==c.internalFormat?c.internalFormat:null,this.texture.minFilter=void 0!==c.minFilter?c.minFilter:1006,this.depthBuffer=void 0===c.depthBuffer||c.depthBuffer,this.stencilBuffer=void 0!==c.stencilBuffer&&c.stencilBuffer,this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null,this.samples=void 0!==c.samples?c.samples:0}setSize(a,b,c=1){(this.width!==a||this.height!==b||this.depth!==c)&&(this.width=a,this.height=b,this.depth=c,this.texture.image.width=a,this.texture.image.height=b,this.texture.image.depth=c,this.dispose()),this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b)}clone(){return new this.constructor().copy(this)}copy(a){this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.copy(a.viewport),this.texture=a.texture.clone(),this.texture.isRenderTargetTexture=!0;let b=Object.assign({},a.texture.image);return this.texture.source=new ae(b),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,null!==a.depthTexture&&(this.depthTexture=a.depthTexture.clone()),this.samples=a.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ak extends ah{constructor(a=null,b=1,c=1,d=1){super(null),this.isDataArrayTexture=!0,this.image={data:a,width:b,height:c,depth:d},this.magFilter=q,this.minFilter=q,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class al{constructor(a=0,b=0,c=0,d=1){this.isQuaternion=!0,this._x=a,this._y=b,this._z=c,this._w=d}static slerp(a,b,c,d){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),c.slerpQuaternions(a,b,d)}static slerpFlat(a,b,c,d,e,f,g){let h=c[d+0],i=c[d+1],j=c[d+2],k=c[d+3],l=e[f+0],m=e[f+1],n=e[f+2],o=e[f+3];if(0===g){a[b+0]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k;return}if(1===g){a[b+0]=l,a[b+1]=m,a[b+2]=n,a[b+3]=o;return}if(k!==o||h!==l||i!==m||j!==n){let p=1-g,q=h*l+i*m+j*n+k*o,r=q>=0?1:-1,s=1-q*q;if(s>Number.EPSILON){let t=Math.sqrt(s),u=Math.atan2(t,q*r);p=Math.sin(p*u)/t,g=Math.sin(g*u)/t}let v=g*r;if(h=h*p+l*v,i=i*p+m*v,j=j*p+n*v,k=k*p+o*v,p===1-g){let w=1/Math.sqrt(h*h+i*i+j*j+k*k);h*=w,i*=w,j*=w,k*=w}}a[b]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k}static multiplyQuaternionsFlat(a,b,c,d,e,f){let g=c[d],h=c[d+1],i=c[d+2],j=c[d+3],k=e[f],l=e[f+1],m=e[f+2],n=e[f+3];return a[b]=g*n+j*k+h*m-i*l,a[b+1]=h*n+j*l+i*k-g*m,a[b+2]=i*n+j*m+g*l-h*k,a[b+3]=j*n-g*k-h*l-i*m,a}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get w(){return this._w}set w(a){this._w=a,this._onChangeCallback()}set(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this._onChangeCallback(),this}setFromEuler(a,b){if(!(a&&a.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let c=a._x,d=a._y,e=a._z,f=a._order,g=Math.cos,h=Math.sin,i=g(c/2),j=g(d/2),k=g(e/2),l=h(c/2),m=h(d/2),n=h(e/2);switch(f){case"XYZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"YXZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"ZXY":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"ZYX":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"YZX":this._x=l*j*k+i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k-l*m*n;break;case"XZY":this._x=l*j*k-i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k+l*m*n;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+f)}return!1!==b&&this._onChangeCallback(),this}setFromAxisAngle(a,b){let c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._onChangeCallback(),this}setFromRotationMatrix(a){let b=a.elements,c=b[0],d=b[4],e=b[8],f=b[1],g=b[5],h=b[9],i=b[2],j=b[6],k=b[10],l=c+g+k;if(l>0){let m=.5/Math.sqrt(l+1);this._w=.25/m,this._x=(j-h)*m,this._y=(e-i)*m,this._z=(f-d)*m}else if(c>g&&c>k){let n=2*Math.sqrt(1+c-g-k);this._w=(j-h)/n,this._x=.25*n,this._y=(d+f)/n,this._z=(e+i)/n}else if(g>k){let o=2*Math.sqrt(1+g-c-k);this._w=(e-i)/o,this._x=(d+f)/o,this._y=.25*o,this._z=(h+j)/o}else{let p=2*Math.sqrt(1+k-c-g);this._w=(f-d)/p,this._x=(e+i)/p,this._y=(h+j)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(a,b){let c=a.dot(b)+1;return c<Number.EPSILON?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0,this._w=c):(this._x=0,this._y=-a.z,this._z=a.y,this._w=c)):(this._x=a.y*b.z-a.z*b.y,this._y=a.z*b.x-a.x*b.z,this._z=a.x*b.y-a.y*b.x,this._w=c),this.normalize()}angleTo(a){return 2*Math.acos(Math.abs(J(this.dot(a),-1,1)))}rotateTowards(a,b){let c=this.angleTo(a);if(0===c)return this;let d=Math.min(1,b/c);return this.slerp(a,d),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this._onChangeCallback(),this}multiply(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)}premultiply(a){return this.multiplyQuaternions(a,this)}multiplyQuaternions(a,b){let c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._onChangeCallback(),this}slerp(a,b){if(0===b)return this;if(1===b)return this.copy(a);let c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(g<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;let h=1-g*g;if(h<=Number.EPSILON){let i=1-b;return this._w=i*f+b*this._w,this._x=i*c+b*this._x,this._y=i*d+b*this._y,this._z=i*e+b*this._z,this.normalize(),this._onChangeCallback(),this}let j=Math.sqrt(h),k=Math.atan2(j,g),l=Math.sin((1-b)*k)/j,m=Math.sin(b*k)/j;return this._w=f*l+this._w*m,this._x=c*l+this._x*m,this._y=d*l+this._y*m,this._z=e*l+this._z*m,this._onChangeCallback(),this}slerpQuaternions(a,b,c){return this.copy(a).slerp(b,c)}random(){let a=Math.random(),b=Math.sqrt(1-a),c=Math.sqrt(a),d=2*Math.PI*Math.random(),e=2*Math.PI*Math.random();return this.set(b*Math.cos(d),c*Math.sin(e),c*Math.cos(e),b*Math.sin(d))}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w}fromArray(a,b=0){return this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a}fromBufferAttribute(a,b){return this._x=a.getX(b),this._y=a.getY(b),this._z=a.getZ(b),this._w=a.getW(b),this}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class am{constructor(a=0,b=0,c=0){am.prototype.isVector3=!0,this.x=a,this.y=b,this.z=c}set(a,b,c){return void 0===c&&(c=this.z),this.x=a,this.y=b,this.z=c,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(a){return a&&a.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ao.setFromEuler(a))}applyAxisAngle(a,b){return this.applyQuaternion(ao.setFromAxisAngle(a,b))}applyMatrix3(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this}applyNormalMatrix(a){return this.applyMatrix3(a).normalize()}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this}applyQuaternion(a){let b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+ -(l*e)+ -(j*g)- -(k*f),this.y=j*h+ -(l*f)+ -(k*e)- -(i*g),this.z=k*h+ -(l*g)+ -(i*f)- -(j*e),this}project(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)}unproject(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)}transformDirection(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize()}divide(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this}divideScalar(a){return this.multiplyScalar(1/a)}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this}cross(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b)):this.crossVectors(this,a)}crossVectors(a,b){let c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this}projectOnVector(a){let b=a.lengthSq();if(0===b)return this.set(0,0,0);let c=a.dot(this)/b;return this.copy(a).multiplyScalar(c)}projectOnPlane(a){return an.copy(this).projectOnVector(a),this.sub(an)}reflect(a){return this.sub(an.copy(a).multiplyScalar(2*this.dot(a)))}angleTo(a){let b=Math.sqrt(this.lengthSq()*a.lengthSq());if(0===b)return Math.PI/2;let c=this.dot(a)/b;return Math.acos(J(c,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)}setFromSpherical(a){return this.setFromSphericalCoords(a.radius,a.phi,a.theta)}setFromSphericalCoords(a,b,c){let d=Math.sin(b)*a;return this.x=d*Math.sin(c),this.y=Math.cos(b)*a,this.z=d*Math.cos(c),this}setFromCylindrical(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)}setFromCylindricalCoords(a,b,c){return this.x=a*Math.sin(b),this.y=c,this.z=a*Math.cos(b),this}setFromMatrixPosition(a){let b=a.elements;return this.x=b[12],this.y=b[13],this.z=b[14],this}setFromMatrixScale(a){let b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),d=this.setFromMatrixColumn(a,2).length();return this.x=b,this.y=c,this.z=d,this}setFromMatrixColumn(a,b){return this.fromArray(a.elements,4*b)}setFromMatrix3Column(a,b){return this.fromArray(a.elements,3*b)}setFromEuler(a){return this.x=a._x,this.y=a._y,this.z=a._z,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let a=(Math.random()-.5)*2,b=Math.random()*Math.PI*2,c=Math.sqrt(1-a**2);return this.x=c*Math.cos(b),this.y=c*Math.sin(b),this.z=a,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let an=new am,ao=new al;class ap{constructor(a=new am(Infinity,Infinity,Infinity),b=new am(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromArray(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.length;h<i;h+=3){let j=a[h],k=a[h+1],l=a[h+2];j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromBufferAttribute(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.count;h<i;h++){let j=a.getX(h),k=a.getY(h),l=a.getZ(h);j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=ar.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}setFromObject(a,b=!1){return this.makeEmpty(),this.expandByObject(a,b)}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(a){return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}expandByObject(a,b=!1){a.updateWorldMatrix(!1,!1);let c=a.geometry;if(void 0!==c){if(b&& void 0!=c.attributes&& void 0!==c.attributes.position){let d=c.attributes.position;for(let e=0,f=d.count;e<f;e++)ar.fromBufferAttribute(d,e).applyMatrix4(a.matrixWorld),this.expandByPoint(ar)}else null===c.boundingBox&&c.computeBoundingBox(),as.copy(c.boundingBox),as.applyMatrix4(a.matrixWorld),this.union(as)}let g=a.children;for(let h=0,i=g.length;h<i;h++)this.expandByObject(g[h],b);return this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)&&!(a.z<this.min.z)&&!(a.z>this.max.z)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)&&!(a.max.z<this.min.z)&&!(a.min.z>this.max.z)}intersectsSphere(a){return this.clampPoint(a.center,ar),ar.distanceToSquared(a.center)<=a.radius*a.radius}intersectsPlane(a){let b,c;return a.normal.x>0?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x),a.normal.y>0?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),a.normal.z>0?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),b<= -a.constant&&c>= -a.constant}intersectsTriangle(a){if(this.isEmpty())return!1;this.getCenter(az),aA.subVectors(this.max,az),at.subVectors(a.a,az),au.subVectors(a.b,az),av.subVectors(a.c,az),aw.subVectors(au,at),ax.subVectors(av,au),ay.subVectors(at,av);let b=[0,-aw.z,aw.y,0,-ax.z,ax.y,0,-ay.z,ay.y,aw.z,0,-aw.x,ax.z,0,-ax.x,ay.z,0,-ay.x,-aw.y,aw.x,0,-ax.y,ax.x,0,-ay.y,ay.x,0];return!!(aD(b,at,au,av,aA)&&aD(b=[1,0,0,0,1,0,0,0,1],at,au,av,aA))&&(aB.crossVectors(aw,ax),aD(b=[aB.x,aB.y,aB.z],at,au,av,aA))}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=ar.copy(a).clamp(this.min,this.max);return b.sub(a).length()}getBoundingSphere(a){return this.getCenter(a.center),a.radius=.5*this.getSize(ar).length(),a}intersect(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}applyMatrix4(a){return this.isEmpty()||(aq[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),aq[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),aq[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),aq[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),aq[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),aq[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),aq[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),aq[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.setFromPoints(aq)),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}let aq=[new am,new am,new am,new am,new am,new am,new am,new am],ar=new am,as=new ap,at=new am,au=new am,av=new am,aw=new am,ax=new am,ay=new am,az=new am,aA=new am,aB=new am,aC=new am;function aD(a,b,c,d,e){for(let f=0,g=a.length-3;f<=g;f+=3){aC.fromArray(a,f);let h=e.x*Math.abs(aC.x)+e.y*Math.abs(aC.y)+e.z*Math.abs(aC.z),i=b.dot(aC),j=c.dot(aC),k=d.dot(aC);if(Math.max(-Math.max(i,j,k),Math.min(i,j,k))>h)return!1}return!0}let aE=new ap,aF=new am,aG=new am,aH=new am;class aI{constructor(a=new am,b=-1){this.center=a,this.radius=b}set(a,b){return this.center.copy(a),this.radius=b,this}setFromPoints(a,b){let c=this.center;void 0!==b?c.copy(b):aE.setFromPoints(a).getCenter(c);let d=0;for(let e=0,f=a.length;e<f;e++)d=Math.max(d,c.distanceToSquared(a[e]));return this.radius=Math.sqrt(d),this}copy(a){return this.center.copy(a.center),this.radius=a.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(a){return a.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(a){return a.distanceTo(this.center)-this.radius}intersectsSphere(a){let b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b}intersectsBox(a){return a.intersectsSphere(this)}intersectsPlane(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius}clampPoint(a,b){let c=this.center.distanceToSquared(a);return b.copy(a),c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center)),b}getBoundingBox(a){return this.isEmpty()?(a.makeEmpty(),a):(a.set(this.center,this.center),a.expandByScalar(this.radius),a)}applyMatrix4(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this}translate(a){return this.center.add(a),this}expandByPoint(a){aH.subVectors(a,this.center);let b=aH.lengthSq();if(b>this.radius*this.radius){let c=Math.sqrt(b),d=(c-this.radius)*.5;this.center.add(aH.multiplyScalar(d/c)),this.radius+=d}return this}union(a){return!0===this.center.equals(a.center)?aG.set(0,0,1).multiplyScalar(a.radius):aG.subVectors(a.center,this.center).normalize().multiplyScalar(a.radius),this.expandByPoint(aF.copy(a.center).add(aG)),this.expandByPoint(aF.copy(a.center).sub(aG)),this}equals(a){return a.center.equals(this.center)&&a.radius===this.radius}clone(){return new this.constructor().copy(this)}}let aJ=new am,aK=new am,aL=new am,aM=new am,aN=new am,aO=new am,aP=new am;class aQ{constructor(a=new am,b=new am(0,0,-1)){this.origin=a,this.direction=b}set(a,b){return this.origin.copy(a),this.direction.copy(b),this}copy(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this}at(a,b){return b.copy(this.direction).multiplyScalar(a).add(this.origin)}lookAt(a){return this.direction.copy(a).sub(this.origin).normalize(),this}recast(a){return this.origin.copy(this.at(a,aJ)),this}closestPointToPoint(a,b){b.subVectors(a,this.origin);let c=b.dot(this.direction);return c<0?b.copy(this.origin):b.copy(this.direction).multiplyScalar(c).add(this.origin)}distanceToPoint(a){return Math.sqrt(this.distanceSqToPoint(a))}distanceSqToPoint(a){let b=aJ.subVectors(a,this.origin).dot(this.direction);return b<0?this.origin.distanceToSquared(a):(aJ.copy(this.direction).multiplyScalar(b).add(this.origin),aJ.distanceToSquared(a))}distanceSqToSegment(a,b,c,d){aK.copy(a).add(b).multiplyScalar(.5),aL.copy(b).sub(a).normalize(),aM.copy(this.origin).sub(aK);let e=.5*a.distanceTo(b),f=-this.direction.dot(aL),g=aM.dot(this.direction),h=-aM.dot(aL),i=aM.lengthSq(),j=Math.abs(1-f*f),k,l,m,n;if(j>0){if(k=f*h-g,l=f*g-h,n=e*j,k>=0){if(l>= -n){if(l<=n){let o=1/j;k*=o,l*=o,m=k*(k+f*l+2*g)+l*(f*k+l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=e)+g)))*k+l*(l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=-e)+g)))*k+l*(l+2*h)+i}else l<= -n?(l=(k=Math.max(0,-(-f*e+g)))>0?-e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i):l<=n?(k=0,m=(l=Math.min(Math.max(-e,-h),e))*(l+2*h)+i):(l=(k=Math.max(0,-(f*e+g)))>0?e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i)}else l=f>0?-e:e,k=Math.max(0,-(f*l+g)),m=-k*k+l*(l+2*h)+i;return c&&c.copy(this.direction).multiplyScalar(k).add(this.origin),d&&d.copy(aL).multiplyScalar(l).add(aK),m}intersectSphere(a,b){aJ.subVectors(a.center,this.origin);let c=aJ.dot(this.direction),d=aJ.dot(aJ)-c*c,e=a.radius*a.radius;if(d>e)return null;let f=Math.sqrt(e-d),g=c-f,h=c+f;return g<0&&h<0?null:g<0?this.at(h,b):this.at(g,b)}intersectsSphere(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}distanceToPlane(a){let b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;let c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null}intersectPlane(a,b){let c=this.distanceToPlane(a);return null===c?null:this.at(c,b)}intersectsPlane(a){let b=a.distanceToPoint(this.origin);if(0===b)return!0;let c=a.normal.dot(this.direction);return c*b<0}intersectBox(a,b){let c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return(i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d)?null:((e>c||c!=c)&&(c=e),(f<d||d!=d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d)?null:((g>c||c!=c)&&(c=g),(h<d||d!=d)&&(d=h),d<0)?null:this.at(c>=0?c:d,b)}intersectsBox(a){return null!==this.intersectBox(a,aJ)}intersectTriangle(a,b,c,d,e){aN.subVectors(b,a),aO.subVectors(c,a),aP.crossVectors(aN,aO);let f=this.direction.dot(aP),g;if(f>0){if(d)return null;g=1}else{if(!(f<0))return null;g=-1,f=-f}aM.subVectors(this.origin,a);let h=g*this.direction.dot(aO.crossVectors(aM,aO));if(h<0)return null;let i=g*this.direction.dot(aN.cross(aM));if(i<0||h+i>f)return null;let j=-g*aM.dot(aP);return j<0?null:this.at(j/f,e)}applyMatrix4(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this}equals(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class aR{constructor(){aR.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){let q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new aR().fromArray(this.elements)}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],b[9]=c[9],b[10]=c[10],b[11]=c[11],b[12]=c[12],b[13]=c[13],b[14]=c[14],b[15]=c[15],this}copyPosition(a){let b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this}setFromMatrix3(a){let b=a.elements;return this.set(b[0],b[3],b[6],0,b[1],b[4],b[7],0,b[2],b[5],b[8],0,0,0,0,1),this}extractBasis(a,b,c){return a.setFromMatrixColumn(this,0),b.setFromMatrixColumn(this,1),c.setFromMatrixColumn(this,2),this}makeBasis(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this}extractRotation(a){let b=this.elements,c=a.elements,d=1/aS.setFromMatrixColumn(a,0).length(),e=1/aS.setFromMatrixColumn(a,1).length(),f=1/aS.setFromMatrixColumn(a,2).length();return b[0]=c[0]*d,b[1]=c[1]*d,b[2]=c[2]*d,b[3]=0,b[4]=c[4]*e,b[5]=c[5]*e,b[6]=c[6]*e,b[7]=0,b[8]=c[8]*f,b[9]=c[9]*f,b[10]=c[10]*f,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromEuler(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){let l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=m+n*i,b[5]=l-o*i,b[9]=-g*h,b[2]=o-l*i,b[6]=n+m*i,b[10]=f*h}else if("YXZ"===a.order){let p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g,b[4]=r*g-q,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=q*g-r,b[6]=s+p*g,b[10]=f*h}else if("ZXY"===a.order){let t=h*j,u=h*k,v=i*j,w=i*k;b[0]=t-w*g,b[4]=-f*k,b[8]=v+u*g,b[1]=u+v*g,b[5]=f*j,b[9]=w-t*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){let x=f*j,y=f*k,z=g*j,A=g*k;b[0]=h*j,b[4]=z*i-y,b[8]=x*i+A,b[1]=h*k,b[5]=A*i+x,b[9]=y*i-z,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){let B=f*h,C=f*i,D=g*h,E=g*i;b[0]=h*j,b[4]=E-B*k,b[8]=D*k+C,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=C*k+D,b[10]=B-E*k}else if("XZY"===a.order){let F=f*h,G=f*i,H=g*h,I=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=F*k+I,b[5]=f*j,b[9]=G*k-H,b[2]=H*k-G,b[6]=g*j,b[10]=I*k+F}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromQuaternion(a){return this.compose(aU,a,aV)}lookAt(a,b,c){let d=this.elements;return aY.subVectors(a,b),0===aY.lengthSq()&&(aY.z=1),aY.normalize(),aW.crossVectors(c,aY),0===aW.lengthSq()&&(1===Math.abs(c.z)?aY.x+=1e-4:aY.z+=1e-4,aY.normalize(),aW.crossVectors(c,aY)),aW.normalize(),aX.crossVectors(aY,aW),d[0]=aW.x,d[4]=aX.x,d[8]=aY.x,d[1]=aW.y,d[5]=aX.y,d[9]=aY.y,d[2]=aW.z,d[6]=aX.z,d[10]=aY.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)}transpose(){let a=this.elements,b;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this}setPosition(a,b,c){let d=this.elements;return a.isVector3?(d[12]=a.x,d[13]=a.y,d[14]=a.z):(d[12]=a,d[13]=b,d[14]=c),this}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=k*p*i-o*l*i+o*h*m-g*p*m-k*h*q+g*l*q,s=n*l*i-j*p*i-n*h*m+f*p*m+j*h*q-f*l*q,t=j*o*i-n*k*i+n*g*m-f*o*m-j*g*q+f*k*q,u=n*k*h-j*o*h-n*g*l+f*o*l+j*g*p-f*k*p,v=b*r+c*s+d*t+e*u;if(0===v)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/v;return a[0]=r*w,a[1]=(o*l*e-k*p*e-o*d*m+c*p*m+k*d*q-c*l*q)*w,a[2]=(g*p*e-o*h*e+o*d*i-c*p*i-g*d*q+c*h*q)*w,a[3]=(k*h*e-g*l*e-k*d*i+c*l*i+g*d*m-c*h*m)*w,a[4]=s*w,a[5]=(j*p*e-n*l*e+n*d*m-b*p*m-j*d*q+b*l*q)*w,a[6]=(n*h*e-f*p*e-n*d*i+b*p*i+f*d*q-b*h*q)*w,a[7]=(f*l*e-j*h*e+j*d*i-b*l*i-f*d*m+b*h*m)*w,a[8]=t*w,a[9]=(n*k*e-j*o*e-n*c*m+b*o*m+j*c*q-b*k*q)*w,a[10]=(f*o*e-n*g*e+n*c*i-b*o*i-f*c*q+b*g*q)*w,a[11]=(j*g*e-f*k*e-j*c*i+b*k*i+f*c*m-b*g*m)*w,a[12]=u*w,a[13]=(j*o*d-n*k*d+n*c*l-b*o*l-j*c*p+b*k*p)*w,a[14]=(n*g*d-f*o*d-n*c*h+b*o*h+f*c*p-b*g*p)*w,a[15]=(f*k*d-j*g*d+j*c*h-b*k*h-f*c*l+b*g*l)*w,this}scale(a){let b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this}getMaxScaleOnAxis(){let a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,c,d))}makeTranslation(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this}makeRotationX(a){let b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this}makeRotationY(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this}makeRotationZ(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(a,b){let c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this}makeScale(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this}makeShear(a,b,c,d,e,f){return this.set(1,c,e,0,a,1,f,0,b,d,1,0,0,0,0,1),this}compose(a,b,c){let d=this.elements,e=b._x,f=b._y,g=b._z,h=b._w,i=e+e,j=f+f,k=g+g,l=e*i,m=e*j,n=e*k,o=f*j,p=f*k,q=g*k,r=h*i,s=h*j,t=h*k,u=c.x,v=c.y,w=c.z;return d[0]=(1-(o+q))*u,d[1]=(m+t)*u,d[2]=(n-s)*u,d[3]=0,d[4]=(m-t)*v,d[5]=(1-(l+q))*v,d[6]=(p+r)*v,d[7]=0,d[8]=(n+s)*w,d[9]=(p-r)*w,d[10]=(1-(l+o))*w,d[11]=0,d[12]=a.x,d[13]=a.y,d[14]=a.z,d[15]=1,this}decompose(a,b,c){let d=this.elements,e=aS.set(d[0],d[1],d[2]).length(),f=aS.set(d[4],d[5],d[6]).length(),g=aS.set(d[8],d[9],d[10]).length(),h=this.determinant();h<0&&(e=-e),a.x=d[12],a.y=d[13],a.z=d[14],aT.copy(this);let i=1/e,j=1/f,k=1/g;return aT.elements[0]*=i,aT.elements[1]*=i,aT.elements[2]*=i,aT.elements[4]*=j,aT.elements[5]*=j,aT.elements[6]*=j,aT.elements[8]*=k,aT.elements[9]*=k,aT.elements[10]*=k,b.setFromRotationMatrix(aT),c.x=e,c.y=f,c.z=g,this}makePerspective(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let g=this.elements;return g[0]=2*e/(b-a),g[4]=0,g[8]=(b+a)/(b-a),g[12]=0,g[1]=0,g[5]=2*e/(c-d),g[9]=(c+d)/(c-d),g[13]=0,g[2]=0,g[6]=0,g[10]=-(f+e)/(f-e),g[14]=-2*f*e/(f-e),g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this}makeOrthographic(a,b,c,d,e,f){let g=this.elements,h=1/(b-a),i=1/(c-d),j=1/(f-e);return g[0]=2*h,g[4]=0,g[8]=0,g[12]=-((b+a)*h),g[1]=0,g[5]=2*i,g[9]=0,g[13]=-((c+d)*i),g[2]=0,g[6]=0,g[10]=-2*j,g[14]=-((f+e)*j),g[3]=0,g[7]=0,g[11]=0,g[15]=1,this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<16;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b=0){for(let c=0;c<16;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a}}let aS=new am,aT=new aR,aU=new am(0,0,0),aV=new am(1,1,1),aW=new am,aX=new am,aY=new am,aZ=new aR,a$=new al;class a_{constructor(a=0,b=0,c=0,d=a_.DefaultOrder){this.isEuler=!0,this._x=a,this._y=b,this._z=c,this._order=d}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get order(){return this._order}set order(a){this._order=a,this._onChangeCallback()}set(a,b,c,d=this._order){return this._x=a,this._y=b,this._z=c,this._order=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._onChangeCallback(),this}setFromRotationMatrix(a,b=this._order,c=!0){let d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];switch(b){case"XYZ":this._y=Math.asin(J(g,-1,1)),.9999999>Math.abs(g)?(this._x=Math.atan2(-j,m),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0);break;case"YXZ":this._x=Math.asin(-J(j,-1,1)),.9999999>Math.abs(j)?(this._y=Math.atan2(g,m),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0);break;case"ZXY":this._x=Math.asin(J(l,-1,1)),.9999999>Math.abs(l)?(this._y=Math.atan2(-k,m),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e));break;case"ZYX":this._y=Math.asin(-J(k,-1,1)),.9999999>Math.abs(k)?(this._x=Math.atan2(l,m),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i));break;case"YZX":this._z=Math.asin(J(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,m));break;case"XZY":this._z=Math.asin(-J(f,-1,1)),.9999999>Math.abs(f)?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+b)}return this._order=b,!0===c&&this._onChangeCallback(),this}setFromQuaternion(a,b,c){return aZ.makeRotationFromQuaternion(a),this.setFromRotationMatrix(aZ,b,c)}setFromVector3(a,b=this._order){return this.set(a.x,a.y,a.z,b)}reorder(a){return a$.setFromEuler(this),this.setFromQuaternion(a$,a)}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order}fromArray(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._order,a}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}a_.DefaultOrder="XYZ",a_.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class a0{constructor(){this.mask=1}set(a){this.mask=(1<<a|0)>>>0}enable(a){this.mask|=1<<a|0}enableAll(){this.mask=-1}toggle(a){this.mask^=1<<a|0}disable(a){this.mask&=~(1<<a|0)}disableAll(){this.mask=0}test(a){return(this.mask&a.mask)!=0}isEnabled(a){return(this.mask&(1<<a|0))!=0}}let a1=0,a2=new am,a3=new al,a4=new aR,a5=new am,a6=new am,a7=new am,a8=new al,a9=new am(1,0,0),ba=new am(0,1,0),bb=new am(0,0,1),bc={type:"added"},bd={type:"removed"};class be extends E{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:a1++}),this.uuid=I(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=be.DefaultUp.clone();let a=new am,b=new a_,c=new al,d=new am(1,1,1);b._onChange(function(){c.setFromEuler(b,!1)}),c._onChange(function(){b.setFromQuaternion(c,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:a},rotation:{configurable:!0,enumerable:!0,value:b},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:d},modelViewMatrix:{value:new aR},normalMatrix:{value:new O}}),this.matrix=new aR,this.matrixWorld=new aR,this.matrixAutoUpdate=be.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new a0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(a){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(a),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(a){return this.quaternion.premultiply(a),this}setRotationFromAxisAngle(a,b){this.quaternion.setFromAxisAngle(a,b)}setRotationFromEuler(a){this.quaternion.setFromEuler(a,!0)}setRotationFromMatrix(a){this.quaternion.setFromRotationMatrix(a)}setRotationFromQuaternion(a){this.quaternion.copy(a)}rotateOnAxis(a,b){return a3.setFromAxisAngle(a,b),this.quaternion.multiply(a3),this}rotateOnWorldAxis(a,b){return a3.setFromAxisAngle(a,b),this.quaternion.premultiply(a3),this}rotateX(a){return this.rotateOnAxis(a9,a)}rotateY(a){return this.rotateOnAxis(ba,a)}rotateZ(a){return this.rotateOnAxis(bb,a)}translateOnAxis(a,b){return a2.copy(a).applyQuaternion(this.quaternion),this.position.add(a2.multiplyScalar(b)),this}translateX(a){return this.translateOnAxis(a9,a)}translateY(a){return this.translateOnAxis(ba,a)}translateZ(a){return this.translateOnAxis(bb,a)}localToWorld(a){return a.applyMatrix4(this.matrixWorld)}worldToLocal(a){return a.applyMatrix4(a4.copy(this.matrixWorld).invert())}lookAt(a,b,c){a.isVector3?a5.copy(a):a5.set(a,b,c);let d=this.parent;this.updateWorldMatrix(!0,!1),a6.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?a4.lookAt(a6,a5,this.up):a4.lookAt(a5,a6,this.up),this.quaternion.setFromRotationMatrix(a4),d&&(a4.extractRotation(d.matrixWorld),a3.setFromRotationMatrix(a4),this.quaternion.premultiply(a3.invert()))}add(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.add(arguments[b]);return this}return a===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this):(a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(bc)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this)}remove(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.remove(arguments[b]);return this}let c=this.children.indexOf(a);return -1!==c&&(a.parent=null,this.children.splice(c,1),a.dispatchEvent(bd)),this}removeFromParent(){let a=this.parent;return null!==a&&a.remove(this),this}clear(){for(let a=0;a<this.children.length;a++){let b=this.children[a];b.parent=null,b.dispatchEvent(bd)}return this.children.length=0,this}attach(a){return this.updateWorldMatrix(!0,!1),a4.copy(this.matrixWorld).invert(),null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),a4.multiply(a.parent.matrixWorld)),a.applyMatrix4(a4),this.add(a),a.updateWorldMatrix(!1,!0),this}getObjectById(a){return this.getObjectByProperty("id",a)}getObjectByName(a){return this.getObjectByProperty("name",a)}getObjectByProperty(a,b){if(this[a]===b)return this;for(let c=0,d=this.children.length;c<d;c++){let e=this.children[c],f=e.getObjectByProperty(a,b);if(void 0!==f)return f}}getWorldPosition(a){return this.updateWorldMatrix(!0,!1),a.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(a6,a,a7),a}getWorldScale(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(a6,a8,a),a}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(b[8],b[9],b[10]).normalize()}raycast(){}traverse(a){a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverse(a)}traverseVisible(a){if(!1===this.visible)return;a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}traverseAncestors(a){let b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)}updateWorldMatrix(a,b){let c=this.parent;if(!0===a&&null!==c&&c.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===b){let d=this.children;for(let e=0,f=d.length;e<f;e++)d[e].updateWorldMatrix(!1,!0)}}toJSON(a){let b=void 0===a||"string"==typeof a,c={};b&&(a={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},c.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let d={};function e(b,c){return void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a)),c.uuid}if(d.uuid=this.uuid,d.type=this.type,""!==this.name&&(d.name=this.name),!0===this.castShadow&&(d.castShadow=!0),!0===this.receiveShadow&&(d.receiveShadow=!0),!1===this.visible&&(d.visible=!1),!1===this.frustumCulled&&(d.frustumCulled=!1),0!==this.renderOrder&&(d.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(d.userData=this.userData),d.layers=this.layers.mask,d.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(d.matrixAutoUpdate=!1),this.isInstancedMesh&&(d.type="InstancedMesh",d.count=this.count,d.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(d.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?d.background=this.background.toJSON():this.background.isTexture&&(d.background=this.background.toJSON(a).uuid)),this.environment&&this.environment.isTexture&&(d.environment=this.environment.toJSON(a).uuid);else if(this.isMesh||this.isLine||this.isPoints){d.geometry=e(a.geometries,this.geometry);let f=this.geometry.parameters;if(void 0!==f&& void 0!==f.shapes){let g=f.shapes;if(Array.isArray(g))for(let h=0,i=g.length;h<i;h++){let j=g[h];e(a.shapes,j)}else e(a.shapes,g)}}if(this.isSkinnedMesh&&(d.bindMode=this.bindMode,d.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(a.skeletons,this.skeleton),d.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let k=[];for(let l=0,m=this.material.length;l<m;l++)k.push(e(a.materials,this.material[l]));d.material=k}else d.material=e(a.materials,this.material)}if(this.children.length>0){d.children=[];for(let n=0;n<this.children.length;n++)d.children.push(this.children[n].toJSON(a).object)}if(this.animations.length>0){d.animations=[];for(let o=0;o<this.animations.length;o++){let p=this.animations[o];d.animations.push(e(a.animations,p))}}if(b){let q=y(a.geometries),r=y(a.materials),s=y(a.textures),t=y(a.images),u=y(a.shapes),v=y(a.skeletons),w=y(a.animations),x=y(a.nodes);q.length>0&&(c.geometries=q),r.length>0&&(c.materials=r),s.length>0&&(c.textures=s),t.length>0&&(c.images=t),u.length>0&&(c.shapes=u),v.length>0&&(c.skeletons=v),w.length>0&&(c.animations=w),x.length>0&&(c.nodes=x)}return c.object=d,c;function y(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}}clone(a){return new this.constructor().copy(this,a)}copy(a,b=!0){if(this.name=a.name,this.up.copy(a.up),this.position.copy(a.position),this.rotation.order=a.rotation.order,this.quaternion.copy(a.quaternion),this.scale.copy(a.scale),this.matrix.copy(a.matrix),this.matrixWorld.copy(a.matrixWorld),this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,this.layers.mask=a.layers.mask,this.visible=a.visible,this.castShadow=a.castShadow,this.receiveShadow=a.receiveShadow,this.frustumCulled=a.frustumCulled,this.renderOrder=a.renderOrder,this.userData=JSON.parse(JSON.stringify(a.userData)),!0===b)for(let c=0;c<a.children.length;c++){let d=a.children[c];this.add(d.clone())}return this}}be.DefaultUp=new am(0,1,0),be.DefaultMatrixAutoUpdate=!0;let bf=new am,bg=new am,bh=new am,bi=new am,bj=new am,bk=new am,bl=new am,bm=new am,bn=new am,bo=new am;class bp{constructor(a=new am,b=new am,c=new am){this.a=a,this.b=b,this.c=c}static getNormal(a,b,c,d){d.subVectors(c,b),bf.subVectors(a,b),d.cross(bf);let e=d.lengthSq();return e>0?d.multiplyScalar(1/Math.sqrt(e)):d.set(0,0,0)}static getBarycoord(a,b,c,d,e){bf.subVectors(d,b),bg.subVectors(c,b),bh.subVectors(a,b);let f=bf.dot(bf),g=bf.dot(bg),h=bf.dot(bh),i=bg.dot(bg),j=bg.dot(bh),k=f*i-g*g;if(0===k)return e.set(-2,-1,-1);let l=1/k,m=(i*h-g*j)*l,n=(f*j-g*h)*l;return e.set(1-m-n,n,m)}static containsPoint(a,b,c,d){return this.getBarycoord(a,b,c,d,bi),bi.x>=0&&bi.y>=0&&bi.x+bi.y<=1}static getUV(a,b,c,d,e,f,g,h){return this.getBarycoord(a,b,c,d,bi),h.set(0,0),h.addScaledVector(e,bi.x),h.addScaledVector(f,bi.y),h.addScaledVector(g,bi.z),h}static isFrontFacing(a,b,c,d){return bf.subVectors(c,b),bg.subVectors(a,b),0>bf.cross(bg).dot(d)}set(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this}setFromPointsAndIndices(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this}setFromAttributeAndIndices(a,b,c,d){return this.a.fromBufferAttribute(a,b),this.b.fromBufferAttribute(a,c),this.c.fromBufferAttribute(a,d),this}clone(){return new this.constructor().copy(this)}copy(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this}getArea(){return bf.subVectors(this.c,this.b),bg.subVectors(this.a,this.b),.5*bf.cross(bg).length()}getMidpoint(a){return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(a){return bp.getNormal(this.a,this.b,this.c,a)}getPlane(a){return a.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(a,b){return bp.getBarycoord(a,this.a,this.b,this.c,b)}getUV(a,b,c,d,e){return bp.getUV(a,this.a,this.b,this.c,b,c,d,e)}containsPoint(a){return bp.containsPoint(a,this.a,this.b,this.c)}isFrontFacing(a){return bp.isFrontFacing(this.a,this.b,this.c,a)}intersectsBox(a){return a.intersectsTriangle(this)}closestPointToPoint(a,b){let c=this.a,d=this.b,e=this.c,f,g;bj.subVectors(d,c),bk.subVectors(e,c),bm.subVectors(a,c);let h=bj.dot(bm),i=bk.dot(bm);if(h<=0&&i<=0)return b.copy(c);bn.subVectors(a,d);let j=bj.dot(bn),k=bk.dot(bn);if(j>=0&&k<=j)return b.copy(d);let l=h*k-j*i;if(l<=0&&h>=0&&j<=0)return f=h/(h-j),b.copy(c).addScaledVector(bj,f);bo.subVectors(a,e);let m=bj.dot(bo),n=bk.dot(bo);if(n>=0&&m<=n)return b.copy(e);let o=m*i-h*n;if(o<=0&&i>=0&&n<=0)return g=i/(i-n),b.copy(c).addScaledVector(bk,g);let p=j*n-m*k;if(p<=0&&k-j>=0&&m-n>=0)return bl.subVectors(e,d),g=(k-j)/(k-j+(m-n)),b.copy(d).addScaledVector(bl,g);let q=1/(p+o+l);return f=o*q,g=l*q,b.copy(c).addScaledVector(bj,f).addScaledVector(bk,g)}equals(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}}let bq=0;class br extends E{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:bq++}),this.uuid=I(),this.name="",this.type="Material",this.blending=1,this.side=g,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=k,this.blendDst=l,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(a){this._alphaTest>0!=a>0&&this.version++,this._alphaTest=a}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(a){if(void 0!==a)for(let b in a){let c=a[b];if(void 0===c){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}if("shading"===b){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===c;continue}let d=this[b];if(void 0===d){console.warn("THREE."+this.type+": '"+b+"' is not a property of this material.");continue}d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]=c}}toJSON(a){let b=void 0===a||"string"==typeof a;b&&(a={textures:{},images:{}});let c={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function d(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}if(c.uuid=this.uuid,c.type=this.type,""!==this.name&&(c.name=this.name),this.color&&this.color.isColor&&(c.color=this.color.getHex()),void 0!==this.roughness&&(c.roughness=this.roughness),void 0!==this.metalness&&(c.metalness=this.metalness),void 0!==this.sheen&&(c.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(c.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(c.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(c.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(c.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(c.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(c.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(c.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(c.shininess=this.shininess),void 0!==this.clearcoat&&(c.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(c.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(c.clearcoatMap=this.clearcoatMap.toJSON(a).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(c.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(a).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(c.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(a).uuid,c.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(c.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(c.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(c.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(c.iridescenceMap=this.iridescenceMap.toJSON(a).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(c.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(a).uuid),this.map&&this.map.isTexture&&(c.map=this.map.toJSON(a).uuid),this.matcap&&this.matcap.isTexture&&(c.matcap=this.matcap.toJSON(a).uuid),this.alphaMap&&this.alphaMap.isTexture&&(c.alphaMap=this.alphaMap.toJSON(a).uuid),this.lightMap&&this.lightMap.isTexture&&(c.lightMap=this.lightMap.toJSON(a).uuid,c.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(c.aoMap=this.aoMap.toJSON(a).uuid,c.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(c.bumpMap=this.bumpMap.toJSON(a).uuid,c.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(c.normalMap=this.normalMap.toJSON(a).uuid,c.normalMapType=this.normalMapType,c.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(c.displacementMap=this.displacementMap.toJSON(a).uuid,c.displacementScale=this.displacementScale,c.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(c.roughnessMap=this.roughnessMap.toJSON(a).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(c.metalnessMap=this.metalnessMap.toJSON(a).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(c.emissiveMap=this.emissiveMap.toJSON(a).uuid),this.specularMap&&this.specularMap.isTexture&&(c.specularMap=this.specularMap.toJSON(a).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(c.specularIntensityMap=this.specularIntensityMap.toJSON(a).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(c.specularColorMap=this.specularColorMap.toJSON(a).uuid),this.envMap&&this.envMap.isTexture&&(c.envMap=this.envMap.toJSON(a).uuid,void 0!==this.combine&&(c.combine=this.combine)),void 0!==this.envMapIntensity&&(c.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(c.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(c.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(c.gradientMap=this.gradientMap.toJSON(a).uuid),void 0!==this.transmission&&(c.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(c.transmissionMap=this.transmissionMap.toJSON(a).uuid),void 0!==this.thickness&&(c.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(c.thicknessMap=this.thicknessMap.toJSON(a).uuid),void 0!==this.attenuationDistance&&(c.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(c.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(c.size=this.size),null!==this.shadowSide&&(c.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(c.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(c.blending=this.blending),this.side!==g&&(c.side=this.side),this.vertexColors&&(c.vertexColors=!0),this.opacity<1&&(c.opacity=this.opacity),!0===this.transparent&&(c.transparent=this.transparent),c.depthFunc=this.depthFunc,c.depthTest=this.depthTest,c.depthWrite=this.depthWrite,c.colorWrite=this.colorWrite,c.stencilWrite=this.stencilWrite,c.stencilWriteMask=this.stencilWriteMask,c.stencilFunc=this.stencilFunc,c.stencilRef=this.stencilRef,c.stencilFuncMask=this.stencilFuncMask,c.stencilFail=this.stencilFail,c.stencilZFail=this.stencilZFail,c.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(c.rotation=this.rotation),!0===this.polygonOffset&&(c.polygonOffset=!0),0!==this.polygonOffsetFactor&&(c.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(c.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(c.linewidth=this.linewidth),void 0!==this.dashSize&&(c.dashSize=this.dashSize),void 0!==this.gapSize&&(c.gapSize=this.gapSize),void 0!==this.scale&&(c.scale=this.scale),!0===this.dithering&&(c.dithering=!0),this.alphaTest>0&&(c.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(c.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(c.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(c.wireframe=this.wireframe),this.wireframeLinewidth>1&&(c.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(c.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(c.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(c.flatShading=this.flatShading),!1===this.visible&&(c.visible=!1),!1===this.toneMapped&&(c.toneMapped=!1),!1===this.fog&&(c.fog=!1),"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),b){let e=d(a.textures),f=d(a.images);e.length>0&&(c.textures=e),f.length>0&&(c.images=f)}return c}clone(){return new this.constructor().copy(this)}copy(a){this.name=a.name,this.blending=a.blending,this.side=a.side,this.vertexColors=a.vertexColors,this.opacity=a.opacity,this.transparent=a.transparent,this.blendSrc=a.blendSrc,this.blendDst=a.blendDst,this.blendEquation=a.blendEquation,this.blendSrcAlpha=a.blendSrcAlpha,this.blendDstAlpha=a.blendDstAlpha,this.blendEquationAlpha=a.blendEquationAlpha,this.depthFunc=a.depthFunc,this.depthTest=a.depthTest,this.depthWrite=a.depthWrite,this.stencilWriteMask=a.stencilWriteMask,this.stencilFunc=a.stencilFunc,this.stencilRef=a.stencilRef,this.stencilFuncMask=a.stencilFuncMask,this.stencilFail=a.stencilFail,this.stencilZFail=a.stencilZFail,this.stencilZPass=a.stencilZPass,this.stencilWrite=a.stencilWrite;let b=a.clippingPlanes,c=null;if(null!==b){let d=b.length;c=Array(d);for(let e=0;e!==d;++e)c[e]=b[e].clone()}return this.clippingPlanes=c,this.clipIntersection=a.clipIntersection,this.clipShadows=a.clipShadows,this.shadowSide=a.shadowSide,this.colorWrite=a.colorWrite,this.precision=a.precision,this.polygonOffset=a.polygonOffset,this.polygonOffsetFactor=a.polygonOffsetFactor,this.polygonOffsetUnits=a.polygonOffsetUnits,this.dithering=a.dithering,this.alphaTest=a.alphaTest,this.alphaToCoverage=a.alphaToCoverage,this.premultipliedAlpha=a.premultipliedAlpha,this.visible=a.visible,this.toneMapped=a.toneMapped,this.userData=JSON.parse(JSON.stringify(a.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(a){!0===a&&this.version++}}class bs extends br{constructor(a){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ab(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=n,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.fog=a.fog,this}}let bt=new am,bu=new N;class bv{constructor(a,b,c){if(Array.isArray(a))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=a,this.itemSize=b,this.count=void 0!==a?a.length/b:0,this.normalized=!0===c,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.name=a.name,this.array=new a.array.constructor(a.array),this.itemSize=a.itemSize,this.count=a.count,this.normalized=a.normalized,this.usage=a.usage,this}copyAt(a,b,c){a*=this.itemSize,c*=b.itemSize;for(let d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this}copyArray(a){return this.array.set(a),this}copyColorsArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new ab),b[c++]=f.r,b[c++]=f.g,b[c++]=f.b}return this}copyVector2sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new N),b[c++]=f.x,b[c++]=f.y}return this}copyVector3sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new am),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z}return this}copyVector4sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new ai),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z,b[c++]=f.w}return this}applyMatrix3(a){if(2===this.itemSize)for(let b=0,c=this.count;b<c;b++)bu.fromBufferAttribute(this,b),bu.applyMatrix3(a),this.setXY(b,bu.x,bu.y);else if(3===this.itemSize)for(let d=0,e=this.count;d<e;d++)bt.fromBufferAttribute(this,d),bt.applyMatrix3(a),this.setXYZ(d,bt.x,bt.y,bt.z);return this}applyMatrix4(a){for(let b=0,c=this.count;b<c;b++)bt.fromBufferAttribute(this,b),bt.applyMatrix4(a),this.setXYZ(b,bt.x,bt.y,bt.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)bt.fromBufferAttribute(this,b),bt.applyNormalMatrix(a),this.setXYZ(b,bt.x,bt.y,bt.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)bt.fromBufferAttribute(this,b),bt.transformDirection(a),this.setXYZ(b,bt.x,bt.y,bt.z);return this}set(a,b=0){return this.array.set(a,b),this}getX(a){return this.array[a*this.itemSize]}setX(a,b){return this.array[a*this.itemSize]=b,this}getY(a){return this.array[a*this.itemSize+1]}setY(a,b){return this.array[a*this.itemSize+1]=b,this}getZ(a){return this.array[a*this.itemSize+2]}setZ(a,b){return this.array[a*this.itemSize+2]=b,this}getW(a){return this.array[a*this.itemSize+3]}setW(a,b){return this.array[a*this.itemSize+3]=b,this}setXY(a,b,c){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this}setXYZ(a,b,c,d){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this}onUpload(a){return this.onUploadCallback=a,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let a={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(a.name=this.name),35044!==this.usage&&(a.usage=this.usage),(0!==this.updateRange.offset|| -1!==this.updateRange.count)&&(a.updateRange=this.updateRange),a}}class bw extends bv{constructor(a,b,c){super(new Uint16Array(a),b,c)}}class bx extends bv{constructor(a,b,c){super(new Uint32Array(a),b,c)}}class by extends bv{constructor(a,b,c){super(new Float32Array(a),b,c)}}let bz=0,bA=new aR,bB=new be,bC=new am,bD=new ap,bE=new ap,bF=new am;class bG extends E{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:bz++}),this.uuid=I(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(a){return Array.isArray(a)?this.index=new(P(a)?bx:bw)(a,1):this.index=a,this}getAttribute(a){return this.attributes[a]}setAttribute(a,b){return this.attributes[a]=b,this}deleteAttribute(a){return delete this.attributes[a],this}hasAttribute(a){return void 0!==this.attributes[a]}addGroup(a,b,c=0){this.groups.push({start:a,count:b,materialIndex:c})}clearGroups(){this.groups=[]}setDrawRange(a,b){this.drawRange.start=a,this.drawRange.count=b}applyMatrix4(a){let b=this.attributes.position;void 0!==b&&(b.applyMatrix4(a),b.needsUpdate=!0);let c=this.attributes.normal;if(void 0!==c){let d=new O().getNormalMatrix(a);c.applyNormalMatrix(d),c.needsUpdate=!0}let e=this.attributes.tangent;return void 0!==e&&(e.transformDirection(a),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(a){return bA.makeRotationFromQuaternion(a),this.applyMatrix4(bA),this}rotateX(a){return bA.makeRotationX(a),this.applyMatrix4(bA),this}rotateY(a){return bA.makeRotationY(a),this.applyMatrix4(bA),this}rotateZ(a){return bA.makeRotationZ(a),this.applyMatrix4(bA),this}translate(a,b,c){return bA.makeTranslation(a,b,c),this.applyMatrix4(bA),this}scale(a,b,c){return bA.makeScale(a,b,c),this.applyMatrix4(bA),this}lookAt(a){return bB.lookAt(a),bB.updateMatrix(),this.applyMatrix4(bB.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(bC).negate(),this.translate(bC.x,bC.y,bC.z),this}setFromPoints(a){let b=[];for(let c=0,d=a.length;c<d;c++){let e=a[c];b.push(e.x,e.y,e.z||0)}return this.setAttribute("position",new by(b,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ap);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new am(-1/0,-1/0,-1/0),new am(Infinity,Infinity,Infinity));return}if(void 0!==a){if(this.boundingBox.setFromBufferAttribute(a),b)for(let c=0,d=b.length;c<d;c++){let e=b[c];bD.setFromBufferAttribute(e),this.morphTargetsRelative?(bF.addVectors(this.boundingBox.min,bD.min),this.boundingBox.expandByPoint(bF),bF.addVectors(this.boundingBox.max,bD.max),this.boundingBox.expandByPoint(bF)):(this.boundingBox.expandByPoint(bD.min),this.boundingBox.expandByPoint(bD.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new aI);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new am,1/0);return}if(a){let c=this.boundingSphere.center;if(bD.setFromBufferAttribute(a),b)for(let d=0,e=b.length;d<e;d++){let f=b[d];bE.setFromBufferAttribute(f),this.morphTargetsRelative?(bF.addVectors(bD.min,bE.min),bD.expandByPoint(bF),bF.addVectors(bD.max,bE.max),bD.expandByPoint(bF)):(bD.expandByPoint(bE.min),bD.expandByPoint(bE.max))}bD.getCenter(c);let g=0;for(let h=0,i=a.count;h<i;h++)bF.fromBufferAttribute(a,h),g=Math.max(g,c.distanceToSquared(bF));if(b)for(let j=0,k=b.length;j<k;j++){let l=b[j],m=this.morphTargetsRelative;for(let n=0,o=l.count;n<o;n++)bF.fromBufferAttribute(l,n),m&&(bC.fromBufferAttribute(a,n),bF.add(bC)),g=Math.max(g,c.distanceToSquared(bF))}this.boundingSphere.radius=Math.sqrt(g),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let a=this.index,b=this.attributes;if(null===a|| void 0===b.position|| void 0===b.normal|| void 0===b.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let c=a.array,d=b.position.array,e=b.normal.array,f=b.uv.array,g=d.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new bv(new Float32Array(4*g),4));let h=this.getAttribute("tangent").array,i=[],j=[];for(let k=0;k<g;k++)i[k]=new am,j[k]=new am;let l=new am,m=new am,n=new am,o=new N,p=new N,q=new N,r=new am,s=new am;function t(a,b,c){l.fromArray(d,3*a),m.fromArray(d,3*b),n.fromArray(d,3*c),o.fromArray(f,2*a),p.fromArray(f,2*b),q.fromArray(f,2*c),m.sub(l),n.sub(l),p.sub(o),q.sub(o);let e=1/(p.x*q.y-q.x*p.y);isFinite(e)&&(r.copy(m).multiplyScalar(q.y).addScaledVector(n,-p.y).multiplyScalar(e),s.copy(n).multiplyScalar(p.x).addScaledVector(m,-q.x).multiplyScalar(e),i[a].add(r),i[b].add(r),i[c].add(r),j[a].add(s),j[b].add(s),j[c].add(s))}let u=this.groups;0===u.length&&(u=[{start:0,count:c.length}]);for(let v=0,w=u.length;v<w;++v){let x=u[v],y=x.start,z=x.count;for(let A=y,B=y+z;A<B;A+=3)t(c[A+0],c[A+1],c[A+2])}let C=new am,D=new am,E=new am,F=new am;function G(a){E.fromArray(e,3*a),F.copy(E);let b=i[a];C.copy(b),C.sub(E.multiplyScalar(E.dot(b))).normalize(),D.crossVectors(F,b);let c=D.dot(j[a]);h[4*a]=C.x,h[4*a+1]=C.y,h[4*a+2]=C.z,h[4*a+3]=c<0?-1:1}for(let H=0,I=u.length;H<I;++H){let J=u[H],K=J.start,L=J.count;for(let M=K,O=K+L;M<O;M+=3)G(c[M+0]),G(c[M+1]),G(c[M+2])}}computeVertexNormals(){let a=this.index,b=this.getAttribute("position");if(void 0!==b){let c=this.getAttribute("normal");if(void 0===c)c=new bv(new Float32Array(3*b.count),3),this.setAttribute("normal",c);else for(let d=0,e=c.count;d<e;d++)c.setXYZ(d,0,0,0);let f=new am,g=new am,h=new am,i=new am,j=new am,k=new am,l=new am,m=new am;if(a)for(let n=0,o=a.count;n<o;n+=3){let p=a.getX(n+0),q=a.getX(n+1),r=a.getX(n+2);f.fromBufferAttribute(b,p),g.fromBufferAttribute(b,q),h.fromBufferAttribute(b,r),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),i.fromBufferAttribute(c,p),j.fromBufferAttribute(c,q),k.fromBufferAttribute(c,r),i.add(l),j.add(l),k.add(l),c.setXYZ(p,i.x,i.y,i.z),c.setXYZ(q,j.x,j.y,j.z),c.setXYZ(r,k.x,k.y,k.z)}else for(let s=0,t=b.count;s<t;s+=3)f.fromBufferAttribute(b,s+0),g.fromBufferAttribute(b,s+1),h.fromBufferAttribute(b,s+2),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),c.setXYZ(s+0,l.x,l.y,l.z),c.setXYZ(s+1,l.x,l.y,l.z),c.setXYZ(s+2,l.x,l.y,l.z);this.normalizeNormals(),c.needsUpdate=!0}}merge(a,b){if(!(a&&a.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);return}void 0===b&&(b=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let c=this.attributes;for(let d in c){if(void 0===a.attributes[d])continue;let e=c[d],f=e.array,g=a.attributes[d],h=g.array,i=g.itemSize*b,j=Math.min(h.length,f.length-i);for(let k=0,l=i;k<j;k++,l++)f[l]=h[k]}return this}normalizeNormals(){let a=this.attributes.normal;for(let b=0,c=a.count;b<c;b++)bF.fromBufferAttribute(a,b),bF.normalize(),a.setXYZ(b,bF.x,bF.y,bF.z)}toNonIndexed(){function a(a,b){let c=a.array,d=a.itemSize,e=a.normalized,f=new c.constructor(b.length*d),g=0,h=0;for(let i=0,j=b.length;i<j;i++){g=a.isInterleavedBufferAttribute?b[i]*a.data.stride+a.offset:b[i]*d;for(let k=0;k<d;k++)f[h++]=c[g++]}return new bv(f,d,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let b=new bG,c=this.index.array,d=this.attributes;for(let e in d){let f=d[e],g=a(f,c);b.setAttribute(e,g)}let h=this.morphAttributes;for(let i in h){let j=[],k=h[i];for(let l=0,m=k.length;l<m;l++){let n=k[l],o=a(n,c);j.push(o)}b.morphAttributes[i]=j}b.morphTargetsRelative=this.morphTargetsRelative;let p=this.groups;for(let q=0,r=p.length;q<r;q++){let s=p[q];b.addGroup(s.start,s.count,s.materialIndex)}return b}toJSON(){let a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),Object.keys(this.userData).length>0&&(a.userData=this.userData),void 0!==this.parameters){let b=this.parameters;for(let c in b)void 0!==b[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};let d=this.index;null!==d&&(a.data.index={type:d.array.constructor.name,array:Array.prototype.slice.call(d.array)});let e=this.attributes;for(let f in e){let g=e[f];a.data.attributes[f]=g.toJSON(a.data)}let h={},i=!1;for(let j in this.morphAttributes){let k=this.morphAttributes[j],l=[];for(let m=0,n=k.length;m<n;m++){let o=k[m];l.push(o.toJSON(a.data))}l.length>0&&(h[j]=l,i=!0)}i&&(a.data.morphAttributes=h,a.data.morphTargetsRelative=this.morphTargetsRelative);let p=this.groups;p.length>0&&(a.data.groups=JSON.parse(JSON.stringify(p)));let q=this.boundingSphere;return null!==q&&(a.data.boundingSphere={center:q.center.toArray(),radius:q.radius}),a}clone(){return new this.constructor().copy(this)}copy(a){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let b={};this.name=a.name;let c=a.index;null!==c&&this.setIndex(c.clone(b));let d=a.attributes;for(let e in d){let f=d[e];this.setAttribute(e,f.clone(b))}let g=a.morphAttributes;for(let h in g){let i=[],j=g[h];for(let k=0,l=j.length;k<l;k++)i.push(j[k].clone(b));this.morphAttributes[h]=i}this.morphTargetsRelative=a.morphTargetsRelative;let m=a.groups;for(let n=0,o=m.length;n<o;n++){let p=m[n];this.addGroup(p.start,p.count,p.materialIndex)}let q=a.boundingBox;null!==q&&(this.boundingBox=q.clone());let r=a.boundingSphere;return null!==r&&(this.boundingSphere=r.clone()),this.drawRange.start=a.drawRange.start,this.drawRange.count=a.drawRange.count,this.userData=a.userData,void 0!==a.parameters&&(this.parameters=Object.assign({},a.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}let bH=new aR,bI=new aQ,bJ=new aI,bK=new am,bL=new am,bM=new am,bN=new am,bO=new am,bP=new am,bQ=new am,bR=new am,bS=new am,bT=new N,bU=new N,bV=new N,bW=new am,bX=new am;class bY extends be{constructor(a=new bG,b=new bs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a,b){return super.copy(a,b),void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice()),void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary)),this.material=a.material,this.geometry=a.geometry,this}updateMorphTargets(){let a=this.geometry,b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}raycast(a,b){let c=this.geometry,d=this.material,e=this.matrixWorld;if(void 0===d||(null===c.boundingSphere&&c.computeBoundingSphere(),bJ.copy(c.boundingSphere),bJ.applyMatrix4(e),!1===a.ray.intersectsSphere(bJ))||(bH.copy(e).invert(),bI.copy(a.ray).applyMatrix4(bH),null!==c.boundingBox&& !1===bI.intersectsBox(c.boundingBox)))return;let f,g=c.index,h=c.attributes.position,i=c.morphAttributes.position,j=c.morphTargetsRelative,k=c.attributes.uv,l=c.attributes.uv2,m=c.groups,n=c.drawRange;if(null!==g){if(Array.isArray(d))for(let o=0,p=m.length;o<p;o++){let q=m[o],r=d[q.materialIndex],s=Math.max(q.start,n.start),t=Math.min(g.count,Math.min(q.start+q.count,n.start+n.count));for(let u=s,v=t;u<v;u+=3){let w=g.getX(u),x=g.getX(u+1),y=g.getX(u+2);(f=bZ(this,r,a,bI,h,i,j,k,l,w,x,y))&&(f.faceIndex=Math.floor(u/3),f.face.materialIndex=q.materialIndex,b.push(f))}}else{let z=Math.max(0,n.start),A=Math.min(g.count,n.start+n.count);for(let B=z,C=A;B<C;B+=3){let D=g.getX(B),E=g.getX(B+1),F=g.getX(B+2);(f=bZ(this,d,a,bI,h,i,j,k,l,D,E,F))&&(f.faceIndex=Math.floor(B/3),b.push(f))}}}else if(void 0!==h){if(Array.isArray(d))for(let G=0,H=m.length;G<H;G++){let I=m[G],J=d[I.materialIndex],K=Math.max(I.start,n.start),L=Math.min(h.count,Math.min(I.start+I.count,n.start+n.count));for(let M=K,N=L;M<N;M+=3){let O=M,P=M+1,Q=M+2;(f=bZ(this,J,a,bI,h,i,j,k,l,O,P,Q))&&(f.faceIndex=Math.floor(M/3),f.face.materialIndex=I.materialIndex,b.push(f))}}else{let R=Math.max(0,n.start),S=Math.min(h.count,n.start+n.count);for(let T=R,U=S;T<U;T+=3){let V=T,W=T+1,X=T+2;(f=bZ(this,d,a,bI,h,i,j,k,l,V,W,X))&&(f.faceIndex=Math.floor(T/3),b.push(f))}}}}}function bZ(a,b,c,d,e,f,g,j,k,l,m,n){bK.fromBufferAttribute(e,l),bL.fromBufferAttribute(e,m),bM.fromBufferAttribute(e,n);let o=a.morphTargetInfluences;if(f&&o){bQ.set(0,0,0),bR.set(0,0,0),bS.set(0,0,0);for(let p=0,q=f.length;p<q;p++){let r=o[p],s=f[p];0!==r&&(bN.fromBufferAttribute(s,l),bO.fromBufferAttribute(s,m),bP.fromBufferAttribute(s,n),g?(bQ.addScaledVector(bN,r),bR.addScaledVector(bO,r),bS.addScaledVector(bP,r)):(bQ.addScaledVector(bN.sub(bK),r),bR.addScaledVector(bO.sub(bL),r),bS.addScaledVector(bP.sub(bM),r)))}bK.add(bQ),bL.add(bR),bM.add(bS)}a.isSkinnedMesh&&(a.boneTransform(l,bK),a.boneTransform(m,bL),a.boneTransform(n,bM));let t=function(a,b,c,d,e,f,g,j){let k;if(null===(b.side===h?d.intersectTriangle(g,f,e,!0,j):d.intersectTriangle(e,f,g,b.side!==i,j)))return null;bX.copy(j),bX.applyMatrix4(a.matrixWorld);let l=c.ray.origin.distanceTo(bX);return l<c.near||l>c.far?null:{distance:l,point:bX.clone(),object:a}}(a,b,c,d,bK,bL,bM,bW);if(t){j&&(bT.fromBufferAttribute(j,l),bU.fromBufferAttribute(j,m),bV.fromBufferAttribute(j,n),t.uv=bp.getUV(bW,bK,bL,bM,bT,bU,bV,new N)),k&&(bT.fromBufferAttribute(k,l),bU.fromBufferAttribute(k,m),bV.fromBufferAttribute(k,n),t.uv2=bp.getUV(bW,bK,bL,bM,bT,bU,bV,new N));let u={a:l,b:m,c:n,normal:new am,materialIndex:0};bp.getNormal(bK,bL,bM,u.normal),t.face=u}return t}class b$ extends bG{constructor(a=1,b=1,c=1,d=1,e=1,f=1){super(),this.type="BoxGeometry",this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};let g=this;d=Math.floor(d),e=Math.floor(e),f=Math.floor(f);let h=[],i=[],j=[],k=[],l=0,m=0;function n(a,b,c,d,e,f,n,o,p,q,r){let s=f/p,t=n/q,u=f/2,v=n/2,w=o/2,x=p+1,y=q+1,z=0,A=0,B=new am;for(let C=0;C<y;C++){let D=C*t-v;for(let E=0;E<x;E++){let F=E*s-u;B[a]=F*d,B[b]=D*e,B[c]=w,i.push(B.x,B.y,B.z),B[a]=0,B[b]=0,B[c]=o>0?1:-1,j.push(B.x,B.y,B.z),k.push(E/p),k.push(1-C/q),z+=1}}for(let G=0;G<q;G++)for(let H=0;H<p;H++){let I=l+H+x*G,J=l+H+x*(G+1),K=l+(H+1)+x*(G+1),L=l+(H+1)+x*G;h.push(I,J,L),h.push(J,K,L),A+=6}g.addGroup(m,A,r),m+=A,l+=z}n("z","y","x",-1,-1,c,b,a,f,e,0),n("z","y","x",1,-1,c,b,-a,f,e,1),n("x","z","y",1,1,a,c,b,d,f,2),n("x","z","y",1,-1,a,c,-b,d,f,3),n("x","y","z",1,-1,a,b,c,d,e,4),n("x","y","z",-1,-1,a,b,-c,d,e,5),this.setIndex(h),this.setAttribute("position",new by(i,3)),this.setAttribute("normal",new by(j,3)),this.setAttribute("uv",new by(k,2))}static fromJSON(a){return new b$(a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments)}}function b_(a){let b={};for(let c in a)for(let d in b[c]={},a[c]){let e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture||e.isQuaternion)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}return b}function b0(a){let b={};for(let c=0;c<a.length;c++){let d=b_(a[c]);for(let e in d)b[e]=d[e]}return b}let b1={clone:b_,merge:b0};class b2 extends br{constructor(a){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}copy(a){return super.copy(a),this.fragmentShader=a.fragmentShader,this.vertexShader=a.vertexShader,this.uniforms=b_(a.uniforms),this.defines=Object.assign({},a.defines),this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.fog=a.fog,this.lights=a.lights,this.clipping=a.clipping,this.extensions=Object.assign({},a.extensions),this.glslVersion=a.glslVersion,this}toJSON(a){let b=super.toJSON(a);for(let c in b.glslVersion=this.glslVersion,b.uniforms={},this.uniforms){let d=this.uniforms[c],e=d.value;e&&e.isTexture?b.uniforms[c]={type:"t",value:e.toJSON(a).uuid}:e&&e.isColor?b.uniforms[c]={type:"c",value:e.getHex()}:e&&e.isVector2?b.uniforms[c]={type:"v2",value:e.toArray()}:e&&e.isVector3?b.uniforms[c]={type:"v3",value:e.toArray()}:e&&e.isVector4?b.uniforms[c]={type:"v4",value:e.toArray()}:e&&e.isMatrix3?b.uniforms[c]={type:"m3",value:e.toArray()}:e&&e.isMatrix4?b.uniforms[c]={type:"m4",value:e.toArray()}:b.uniforms[c]={value:e}}Object.keys(this.defines).length>0&&(b.defines=this.defines),b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader;let f={};for(let g in this.extensions)!0===this.extensions[g]&&(f[g]=!0);return Object.keys(f).length>0&&(b.extensions=f),b}}class b3 extends be{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new aR,this.projectionMatrix=new aR,this.projectionMatrixInverse=new aR}copy(a,b){return super.copy(a,b),this.matrixWorldInverse.copy(a.matrixWorldInverse),this.projectionMatrix.copy(a.projectionMatrix),this.projectionMatrixInverse.copy(a.projectionMatrixInverse),this}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(-b[8],-b[9],-b[10]).normalize()}updateMatrixWorld(a){super.updateMatrixWorld(a),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(a,b){super.updateWorldMatrix(a,b),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class b4 extends b3{constructor(a=50,b=1,c=.1,d=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=a,this.zoom=1,this.near=c,this.far=d,this.focus=10,this.aspect=b,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.fov=a.fov,this.zoom=a.zoom,this.near=a.near,this.far=a.far,this.focus=a.focus,this.aspect=a.aspect,this.view=null===a.view?null:Object.assign({},a.view),this.filmGauge=a.filmGauge,this.filmOffset=a.filmOffset,this}setFocalLength(a){let b=.5*this.getFilmHeight()/a;this.fov=2*H*Math.atan(b),this.updateProjectionMatrix()}getFocalLength(){let a=Math.tan(.5*G*this.fov);return .5*this.getFilmHeight()/a}getEffectiveFOV(){return 2*H*Math.atan(Math.tan(.5*G*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(a,b,c,d,e,f){this.aspect=a/b,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=this.near,b=a*Math.tan(.5*G*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-0.5*d,f=this.view;if(null!==this.view&&this.view.enabled){let g=f.fullWidth,h=f.fullHeight;e+=f.offsetX*d/g,b-=f.offsetY*c/h,d*=f.width/g,c*=f.height/h}let i=this.filmOffset;0!==i&&(e+=a*i/this.getFilmWidth()),this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.fov=this.fov,b.object.zoom=this.zoom,b.object.near=this.near,b.object.far=this.far,b.object.focus=this.focus,b.object.aspect=this.aspect,null!==this.view&&(b.object.view=Object.assign({},this.view)),b.object.filmGauge=this.filmGauge,b.object.filmOffset=this.filmOffset,b}}class b5 extends be{constructor(a,b,c){if(super(),this.type="CubeCamera",!0!==c.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=c;let d=new b4(90,1,a,b);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new am(1,0,0)),this.add(d);let e=new b4(90,1,a,b);e.layers=this.layers,e.up.set(0,-1,0),e.lookAt(new am(-1,0,0)),this.add(e);let f=new b4(90,1,a,b);f.layers=this.layers,f.up.set(0,0,1),f.lookAt(new am(0,1,0)),this.add(f);let g=new b4(90,1,a,b);g.layers=this.layers,g.up.set(0,0,-1),g.lookAt(new am(0,-1,0)),this.add(g);let h=new b4(90,1,a,b);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new am(0,0,1)),this.add(h);let i=new b4(90,1,a,b);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new am(0,0,-1)),this.add(i)}update(a,b){null===this.parent&&this.updateMatrixWorld();let c=this.renderTarget,[d,e,f,g,h,i]=this.children,j=a.getRenderTarget(),k=a.toneMapping,l=a.xr.enabled;a.toneMapping=0,a.xr.enabled=!1;let m=c.texture.generateMipmaps;c.texture.generateMipmaps=!1,a.setRenderTarget(c,0),a.render(b,d),a.setRenderTarget(c,1),a.render(b,e),a.setRenderTarget(c,2),a.render(b,f),a.setRenderTarget(c,3),a.render(b,g),a.setRenderTarget(c,4),a.render(b,h),c.texture.generateMipmaps=m,a.setRenderTarget(c,5),a.render(b,i),a.setRenderTarget(j),a.toneMapping=k,a.xr.enabled=l,c.texture.needsPMREMUpdate=!0}}class b6 extends ah{constructor(a,b,c,d,e,f,g,h,i,j){super(a=void 0!==a?a:[],b=void 0!==b?b:301,c,d,e,f,g,h,i,j),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(a){this.image=a}}class b7 extends aj{constructor(a,b={}){super(a,a,b),this.isWebGLCubeRenderTarget=!0;let c={width:a,height:a,depth:1};this.texture=new b6([c,c,c,c,c,c],b.mapping,b.wrapS,b.wrapT,b.magFilter,b.minFilter,b.format,b.type,b.anisotropy,b.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==b.generateMipmaps&&b.generateMipmaps,this.texture.minFilter=void 0!==b.minFilter?b.minFilter:1006}fromEquirectangularTexture(a,b){this.texture.type=b.type,this.texture.encoding=b.encoding,this.texture.generateMipmaps=b.generateMipmaps,this.texture.minFilter=b.minFilter,this.texture.magFilter=b.magFilter;let c={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},d=new b$(5,5,5),e=new b2({name:"CubemapFromEquirect",uniforms:b_(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,side:h,blending:0});e.uniforms.tEquirect.value=b;let f=new bY(d,e),g=b.minFilter;b.minFilter===r&&(b.minFilter=1006);let i=new b5(1,10,this);return i.update(a,f),b.minFilter=g,f.geometry.dispose(),f.material.dispose(),this}clear(a,b,c,d){let e=a.getRenderTarget();for(let f=0;f<6;f++)a.setRenderTarget(this,f),a.clear(b,c,d);a.setRenderTarget(e)}}let b8=new am,b9=new am,ca=new O;class cb{constructor(a=new am(1,0,0),b=0){this.isPlane=!0,this.normal=a,this.constant=b}set(a,b){return this.normal.copy(a),this.constant=b,this}setComponents(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this}setFromNormalAndCoplanarPoint(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this}setFromCoplanarPoints(a,b,c){let d=b8.subVectors(c,b).cross(b9.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(d,a),this}copy(a){return this.normal.copy(a.normal),this.constant=a.constant,this}normalize(){let a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(a){return this.normal.dot(a)+this.constant}distanceToSphere(a){return this.distanceToPoint(a.center)-a.radius}projectPoint(a,b){return b.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)}intersectLine(a,b){let c=a.delta(b8),d=this.normal.dot(c);if(0===d)return 0===this.distanceToPoint(a.start)?b.copy(a.start):null;let e=-(a.start.dot(this.normal)+this.constant)/d;return e<0||e>1?null:b.copy(c).multiplyScalar(e).add(a.start)}intersectsLine(a){let b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0}intersectsBox(a){return a.intersectsPlane(this)}intersectsSphere(a){return a.intersectsPlane(this)}coplanarPoint(a){return a.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(a,b){let c=b||ca.getNormalMatrix(a),d=this.coplanarPoint(b8).applyMatrix4(a),e=this.normal.applyMatrix3(c).normalize();return this.constant=-d.dot(e),this}translate(a){return this.constant-=a.dot(this.normal),this}equals(a){return a.normal.equals(this.normal)&&a.constant===this.constant}clone(){return new this.constructor().copy(this)}}let cc=new aI,cd=new am;class ce{constructor(a=new cb,b=new cb,c=new cb,d=new cb,e=new cb,f=new cb){this.planes=[a,b,c,d,e,f]}set(a,b,c,d,e,f){let g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this}copy(a){let b=this.planes;for(let c=0;c<6;c++)b[c].copy(a.planes[c]);return this}setFromProjectionMatrix(a){let b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this}intersectsObject(a){let b=a.geometry;return null===b.boundingSphere&&b.computeBoundingSphere(),cc.copy(b.boundingSphere).applyMatrix4(a.matrixWorld),this.intersectsSphere(cc)}intersectsSprite(a){return cc.center.set(0,0,0),cc.radius=.7071067811865476,cc.applyMatrix4(a.matrixWorld),this.intersectsSphere(cc)}intersectsSphere(a){let b=this.planes,c=a.center,d=-a.radius;for(let e=0;e<6;e++){let f=b[e].distanceToPoint(c);if(f<d)return!1}return!0}intersectsBox(a){let b=this.planes;for(let c=0;c<6;c++){let d=b[c];if(cd.x=d.normal.x>0?a.max.x:a.min.x,cd.y=d.normal.y>0?a.max.y:a.min.y,cd.z=d.normal.z>0?a.max.z:a.min.z,0>d.distanceToPoint(cd))return!1}return!0}containsPoint(a){let b=this.planes;for(let c=0;c<6;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}clone(){return new this.constructor().copy(this)}}function cf(){let a=null,b=!1,c=null,d=null;function e(b,f){c(b,f),d=a.requestAnimationFrame(e)}return{start:function(){!0!==b&&null!==c&&(d=a.requestAnimationFrame(e),b=!0)},stop:function(){a.cancelAnimationFrame(d),b=!1},setAnimationLoop:function(a){c=a},setContext:function(b){a=b}}}function cg(a,b){let c=b.isWebGL2,d=new WeakMap;return{get:function(a){return a.isInterleavedBufferAttribute&&(a=a.data),d.get(a)},remove:function(b){b.isInterleavedBufferAttribute&&(b=b.data);let c=d.get(b);c&&(a.deleteBuffer(c.buffer),d.delete(b))},update:function(b,e){if(b.isGLBufferAttribute){let f=d.get(b);(!f||f.version<b.version)&&d.set(b,{buffer:b.buffer,type:b.type,bytesPerElement:b.elementSize,version:b.version});return}b.isInterleavedBufferAttribute&&(b=b.data);let g=d.get(b);void 0===g?d.set(b,function(b,d){let e=b.array,f=b.usage,g=a.createBuffer();a.bindBuffer(d,g),a.bufferData(d,e,f),b.onUploadCallback();let h;if(e instanceof Float32Array)h=5126;else if(e instanceof Uint16Array){if(b.isFloat16BufferAttribute){if(c)h=5131;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else h=5123}else if(e instanceof Int16Array)h=5122;else if(e instanceof Uint32Array)h=5125;else if(e instanceof Int32Array)h=5124;else if(e instanceof Int8Array)h=5120;else if(e instanceof Uint8Array)h=5121;else if(e instanceof Uint8ClampedArray)h=5121;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+e);return{buffer:g,type:h,bytesPerElement:e.BYTES_PER_ELEMENT,version:b.version}}(b,e)):g.version<b.version&&(!function(b,d,e){let f=d.array,g=d.updateRange;a.bindBuffer(e,b),-1===g.count?a.bufferSubData(e,0,f):(c?a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f,g.offset,g.count):a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f.subarray(g.offset,g.offset+g.count)),g.count=-1)}(g.buffer,b,e),g.version=b.version)}}}class ch extends bG{constructor(a=1,b=1,c=1,d=1){super(),this.type="PlaneGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};let e=a/2,f=b/2,g=Math.floor(c),h=Math.floor(d),i=g+1,j=h+1,k=a/g,l=b/h,m=[],n=[],o=[],p=[];for(let q=0;q<j;q++){let r=q*l-f;for(let s=0;s<i;s++){let t=s*k-e;n.push(t,-r,0),o.push(0,0,1),p.push(s/g),p.push(1-q/h)}}for(let u=0;u<h;u++)for(let v=0;v<g;v++){let w=v+i*u,x=v+i*(u+1),y=v+1+i*(u+1),z=v+1+i*u;m.push(w,x,z),m.push(x,y,z)}this.setIndex(m),this.setAttribute("position",new by(n,3)),this.setAttribute("normal",new by(o,3)),this.setAttribute("uv",new by(p,2))}static fromJSON(a){return new ch(a.width,a.height,a.widthSegments,a.heightSegments)}}let ci={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\nconst mat3 XYZ_TO_REC709 = mat3(\n    3.2404542, -0.9692660,  0.0556434,\n   -1.5371385,  1.8760108, -0.2040259,\n   -0.4985314,  0.0415560,  1.0572252\n);\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n   vec3 sqrtF0 = sqrt( fresnel0 );\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n}\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n}\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n}\nvec3 evalSensitivity( float OPD, vec3 shift ) {\n   float phase = 2.0 * PI * OPD * 1.0e-9;\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\n   xyz /= 1.0685e-7;\n   vec3 srgb = XYZ_TO_REC709 * xyz;\n   return srgb;\n}\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n   vec3 I;\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\n   if ( cosTheta2Sq < 0.0 ) {\n       return vec3( 1.0 );\n   }\n   float cosTheta2 = sqrt( cosTheta2Sq );\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n   float R21 = R12;\n   float T121 = 1.0 - R12;\n   float phi12 = 0.0;\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n   float phi21 = PI - phi12;\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n   vec3 phi23 = vec3( 0.0 );\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n   vec3 phi = vec3( phi21 ) + phi23;\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n   vec3 r123 = sqrt( R123 );\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n   vec3 C0 = R12 + Rs;\n   I = C0;\n   vec3 Cm = Rs - T121;\n   for ( int m = 1; m <= 2; ++m ) {\n       Cm *= r123;\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n       I += Cm * Sm;\n   }\n   return max( I, vec3( 0.0 ) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	#ifdef USE_IRIDESCENCE\n		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n	#else\n		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\nif ( material.iridescenceThickness == 0.0 ) {\n	material.iridescence = 0.0;\n} else {\n	material.iridescence = saturate( material.iridescence );\n}\nif ( material.iridescence > 0.0 ) {\n	material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n	material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationColor, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef texture2DLodEXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	gl_FragColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n	#endif\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},cj={common:{diffuse:{value:new ab(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new O},uv2Transform:{value:new O},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new N(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ab(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ab(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new O}},sprite:{diffuse:{value:new ab(16777215)},opacity:{value:1},center:{value:new N(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new O}}},ck={basic:{uniforms:b0([cj.common,cj.specularmap,cj.envmap,cj.aomap,cj.lightmap,cj.fog]),vertexShader:ci.meshbasic_vert,fragmentShader:ci.meshbasic_frag},lambert:{uniforms:b0([cj.common,cj.specularmap,cj.envmap,cj.aomap,cj.lightmap,cj.emissivemap,cj.fog,cj.lights,{emissive:{value:new ab(0)}}]),vertexShader:ci.meshlambert_vert,fragmentShader:ci.meshlambert_frag},phong:{uniforms:b0([cj.common,cj.specularmap,cj.envmap,cj.aomap,cj.lightmap,cj.emissivemap,cj.bumpmap,cj.normalmap,cj.displacementmap,cj.fog,cj.lights,{emissive:{value:new ab(0)},specular:{value:new ab(1118481)},shininess:{value:30}}]),vertexShader:ci.meshphong_vert,fragmentShader:ci.meshphong_frag},standard:{uniforms:b0([cj.common,cj.envmap,cj.aomap,cj.lightmap,cj.emissivemap,cj.bumpmap,cj.normalmap,cj.displacementmap,cj.roughnessmap,cj.metalnessmap,cj.fog,cj.lights,{emissive:{value:new ab(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ci.meshphysical_vert,fragmentShader:ci.meshphysical_frag},toon:{uniforms:b0([cj.common,cj.aomap,cj.lightmap,cj.emissivemap,cj.bumpmap,cj.normalmap,cj.displacementmap,cj.gradientmap,cj.fog,cj.lights,{emissive:{value:new ab(0)}}]),vertexShader:ci.meshtoon_vert,fragmentShader:ci.meshtoon_frag},matcap:{uniforms:b0([cj.common,cj.bumpmap,cj.normalmap,cj.displacementmap,cj.fog,{matcap:{value:null}}]),vertexShader:ci.meshmatcap_vert,fragmentShader:ci.meshmatcap_frag},points:{uniforms:b0([cj.points,cj.fog]),vertexShader:ci.points_vert,fragmentShader:ci.points_frag},dashed:{uniforms:b0([cj.common,cj.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ci.linedashed_vert,fragmentShader:ci.linedashed_frag},depth:{uniforms:b0([cj.common,cj.displacementmap]),vertexShader:ci.depth_vert,fragmentShader:ci.depth_frag},normal:{uniforms:b0([cj.common,cj.bumpmap,cj.normalmap,cj.displacementmap,{opacity:{value:1}}]),vertexShader:ci.meshnormal_vert,fragmentShader:ci.meshnormal_frag},sprite:{uniforms:b0([cj.sprite,cj.fog]),vertexShader:ci.sprite_vert,fragmentShader:ci.sprite_frag},background:{uniforms:{uvTransform:{value:new O},t2D:{value:null}},vertexShader:ci.background_vert,fragmentShader:ci.background_frag},cube:{uniforms:b0([cj.envmap,{opacity:{value:1}}]),vertexShader:ci.cube_vert,fragmentShader:ci.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ci.equirect_vert,fragmentShader:ci.equirect_frag},distanceRGBA:{uniforms:b0([cj.common,cj.displacementmap,{referencePosition:{value:new am},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ci.distanceRGBA_vert,fragmentShader:ci.distanceRGBA_frag},shadow:{uniforms:b0([cj.lights,cj.fog,{color:{value:new ab(0)},opacity:{value:1}},]),vertexShader:ci.shadow_vert,fragmentShader:ci.shadow_frag}};function cl(a,b,c,d,e,f){let i=new ab(0),j=!0===e?0:1,k,l,m=null,n=0,o=null;function p(a,b){c.buffers.color.setClear(a.r,a.g,a.b,b,f)}return{getClearColor:function(){return i},setClearColor:function(a,b=1){i.set(a),p(i,j=b)},getClearAlpha:function(){return j},setClearAlpha:function(a){p(i,j=a)},render:function(c,e){let f=!1,q=!0===e.isScene?e.background:null;q&&q.isTexture&&(q=b.get(q));let r=a.xr,s=r.getSession&&r.getSession();s&&"additive"===s.environmentBlendMode&&(q=null),null===q?p(i,j):q&&q.isColor&&(p(q,1),f=!0),(a.autoClear||f)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),q&&(q.isCubeTexture||306===q.mapping)?(void 0===l&&((l=new bY(new b$(1,1,1),new b2({name:"BackgroundCubeMaterial",uniforms:b_(ck.cube.uniforms),vertexShader:ck.cube.vertexShader,fragmentShader:ck.cube.fragmentShader,side:h,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),d.update(l)),l.material.uniforms.envMap.value=q,l.material.uniforms.flipEnvMap.value=q.isCubeTexture&& !1===q.isRenderTargetTexture?-1:1,(m!==q||n!==q.version||o!==a.toneMapping)&&(l.material.needsUpdate=!0,m=q,n=q.version,o=a.toneMapping),l.layers.enableAll(),c.unshift(l,l.geometry,l.material,0,0,null)):q&&q.isTexture&&(void 0===k&&((k=new bY(new ch(2,2),new b2({name:"BackgroundMaterial",uniforms:b_(ck.background.uniforms),vertexShader:ck.background.vertexShader,fragmentShader:ck.background.fragmentShader,side:g,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(k.material,"map",{get:function(){return this.uniforms.t2D.value}}),d.update(k)),k.material.uniforms.t2D.value=q,!0===q.matrixAutoUpdate&&q.updateMatrix(),k.material.uniforms.uvTransform.value.copy(q.matrix),(m!==q||n!==q.version||o!==a.toneMapping)&&(k.material.needsUpdate=!0,m=q,n=q.version,o=a.toneMapping),k.layers.enableAll(),c.unshift(k,k.geometry,k.material,0,0,null))}}}function cm(a,b,c,d){let e=a.getParameter(34921),f=d.isWebGL2?null:b.get("OES_vertex_array_object"),g=d.isWebGL2||null!==f,h={},i=n(null),j=i,k=!1;function l(b){return d.isWebGL2?a.bindVertexArray(b):f.bindVertexArrayOES(b)}function m(b){return d.isWebGL2?a.deleteVertexArray(b):f.deleteVertexArrayOES(b)}function n(a){let b=[],c=[],d=[];for(let f=0;f<e;f++)b[f]=0,c[f]=0,d[f]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:c,attributeDivisors:d,object:a,attributes:{},index:null}}function o(){let a=j.newAttributes;for(let b=0,c=a.length;b<c;b++)a[b]=0}function p(a){q(a,0)}function q(c,e){let f=j.newAttributes,g=j.enabledAttributes,h=j.attributeDivisors;if(f[c]=1,0===g[c]&&(a.enableVertexAttribArray(c),g[c]=1),h[c]!==e){let i=d.isWebGL2?a:b.get("ANGLE_instanced_arrays");i[d.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](c,e),h[c]=e}}function r(){let b=j.newAttributes,c=j.enabledAttributes;for(let d=0,e=c.length;d<e;d++)c[d]!==b[d]&&(a.disableVertexAttribArray(d),c[d]=0)}function s(b,c,e,f,g,h){!0===d.isWebGL2&&(5124===e||5125===e)?a.vertexAttribIPointer(b,c,e,g,h):a.vertexAttribPointer(b,c,e,f,g,h)}function t(){u(),k=!0,j!==i&&l((j=i).object)}function u(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:function(e,i,m,t,u){let v=!1;if(g){let w=function b(c,e,g){let i=!0===g.wireframe,j=h[c.id];void 0===j&&(j={},h[c.id]=j);let k=j[e.id];void 0===k&&(k={},j[e.id]=k);let l=k[i];return void 0===l&&(l=n(d.isWebGL2?a.createVertexArray():f.createVertexArrayOES()),k[i]=l),l}(t,m,i);j!==w&&l((j=w).object),(v=function a(b,c,d,e){let f=j.attributes,g=c.attributes,h=0,i=d.getAttributes();for(let k in i){let l=i[k];if(l.location>=0){let m=f[k],n=g[k];if(void 0===n&&("instanceMatrix"===k&&b.instanceMatrix&&(n=b.instanceMatrix),"instanceColor"===k&&b.instanceColor&&(n=b.instanceColor)),void 0===m||m.attribute!==n||n&&m.data!==n.data)return!0;h++}}return j.attributesNum!==h||j.index!==e}(e,t,m,u))&&function a(b,c,d,e){let f={},g=c.attributes,h=0,i=d.getAttributes();for(let k in i){let l=i[k];if(l.location>=0){let m=g[k];void 0===m&&("instanceMatrix"===k&&b.instanceMatrix&&(m=b.instanceMatrix),"instanceColor"===k&&b.instanceColor&&(m=b.instanceColor));let n={};n.attribute=m,m&&m.data&&(n.data=m.data),f[k]=n,h++}}j.attributes=f,j.attributesNum=h,j.index=e}(e,t,m,u)}else{let x=!0===i.wireframe;(j.geometry!==t.id||j.program!==m.id||j.wireframe!==x)&&(j.geometry=t.id,j.program=m.id,j.wireframe=x,v=!0)}null!==u&&c.update(u,34963),(v||k)&&(k=!1,function e(f,g,h,i){if(!1===d.isWebGL2&&(f.isInstancedMesh||i.isInstancedBufferGeometry)&&null===b.get("ANGLE_instanced_arrays"))return;o();let j=i.attributes,k=h.getAttributes(),l=g.defaultAttributeValues;for(let m in k){let n=k[m];if(n.location>=0){let t=j[m];if(void 0===t&&("instanceMatrix"===m&&f.instanceMatrix&&(t=f.instanceMatrix),"instanceColor"===m&&f.instanceColor&&(t=f.instanceColor)),void 0!==t){let u=t.normalized,v=t.itemSize,w=c.get(t);if(void 0===w)continue;let x=w.buffer,y=w.type,z=w.bytesPerElement;if(t.isInterleavedBufferAttribute){let A=t.data,B=A.stride,C=t.offset;if(A.isInstancedInterleavedBuffer){for(let D=0;D<n.locationSize;D++)q(n.location+D,A.meshPerAttribute);!0!==f.isInstancedMesh&& void 0===i._maxInstanceCount&&(i._maxInstanceCount=A.meshPerAttribute*A.count)}else for(let E=0;E<n.locationSize;E++)p(n.location+E);a.bindBuffer(34962,x);for(let F=0;F<n.locationSize;F++)s(n.location+F,v/n.locationSize,y,u,B*z,(C+v/n.locationSize*F)*z)}else{if(t.isInstancedBufferAttribute){for(let G=0;G<n.locationSize;G++)q(n.location+G,t.meshPerAttribute);!0!==f.isInstancedMesh&& void 0===i._maxInstanceCount&&(i._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let H=0;H<n.locationSize;H++)p(n.location+H);a.bindBuffer(34962,x);for(let I=0;I<n.locationSize;I++)s(n.location+I,v/n.locationSize,y,u,v*z,v/n.locationSize*I*z)}}else if(void 0!==l){let J=l[m];if(void 0!==J)switch(J.length){case 2:a.vertexAttrib2fv(n.location,J);break;case 3:a.vertexAttrib3fv(n.location,J);break;case 4:a.vertexAttrib4fv(n.location,J);break;default:a.vertexAttrib1fv(n.location,J)}}}}r()}(e,i,m,t),null!==u&&a.bindBuffer(34963,c.get(u).buffer))},reset:t,resetDefaultState:u,dispose:function(){for(let a in t(),h){let b=h[a];for(let c in b){let d=b[c];for(let e in d)m(d[e].object),delete d[e];delete b[c]}delete h[a]}},releaseStatesOfGeometry:function(a){if(void 0===h[a.id])return;let b=h[a.id];for(let c in b){let d=b[c];for(let e in d)m(d[e].object),delete d[e];delete b[c]}delete h[a.id]},releaseStatesOfProgram:function(a){for(let b in h){let c=h[b];if(void 0===c[a.id])continue;let d=c[a.id];for(let e in d)m(d[e].object),delete d[e];delete c[a.id]}},initAttributes:o,enableAttribute:p,disableUnusedAttributes:r}}function cn(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}this.setMode=g,this.render=function(b,d){a.drawArrays(f,b,d),c.update(d,f,1)},this.renderInstances=function(d,g,h){if(0===h)return;let i,j;if(e)i=a,j="drawArraysInstanced";else if(i=b.get("ANGLE_instanced_arrays"),j="drawArraysInstancedANGLE",null===i){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}i[j](f,d,g,h),c.update(g,f,h)}}function co(a,b,c){let d;function e(b){if("highp"===b){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return"mediump"===b&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let f="undefined"!=typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&a instanceof WebGL2ComputeRenderingContext,g=void 0!==c.precision?c.precision:"highp",h=e(g);h!==g&&(console.warn("THREE.WebGLRenderer:",g,"not supported, using",h,"instead."),g=h);let i=f||b.has("WEBGL_draw_buffers"),j=!0===c.logarithmicDepthBuffer,k=a.getParameter(34930),l=a.getParameter(35660),m=a.getParameter(3379),n=a.getParameter(34076),o=a.getParameter(34921),p=a.getParameter(36347),q=a.getParameter(36348),r=a.getParameter(36349),s=l>0,t=f||b.has("OES_texture_float"),u=f?a.getParameter(36183):0;return{isWebGL2:f,drawBuffers:i,getMaxAnisotropy:function(){if(void 0!==d)return d;if(!0===b.has("EXT_texture_filter_anisotropic")){let c=b.get("EXT_texture_filter_anisotropic");d=a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else d=0;return d},getMaxPrecision:e,precision:g,logarithmicDepthBuffer:j,maxTextures:k,maxVertexTextures:l,maxTextureSize:m,maxCubemapSize:n,maxAttributes:o,maxVertexUniforms:p,maxVaryings:q,maxFragmentUniforms:r,vertexTextures:s,floatFragmentTextures:t,floatVertexTextures:s&&t,maxSamples:u}}function cp(a){let b=this,c=null,d=0,e=!1,f=!1,g=new cb,h=new O,i={value:null,needsUpdate:!1};function j(){i.value!==c&&(i.value=c,i.needsUpdate=d>0),b.numPlanes=d,b.numIntersection=0}function k(a,c,d,e){let f=null!==a?a.length:0,j=null;if(0!==f){if(j=i.value,!0!==e||null===j){let k=d+4*f,l=c.matrixWorldInverse;h.getNormalMatrix(l),(null===j||j.length<k)&&(j=new Float32Array(k));for(let m=0,n=d;m!==f;++m,n+=4)g.copy(a[m]).applyMatrix4(l,h),g.normal.toArray(j,n),j[n+3]=g.constant}i.value=j,i.needsUpdate=!0}return b.numPlanes=f,b.numIntersection=0,j}this.uniform=i,this.numPlanes=0,this.numIntersection=0,this.init=function(a,b,f){let g=0!==a.length||b||0!==d||e;return e=b,c=k(a,f,0),d=a.length,g},this.beginShadows=function(){f=!0,k(null)},this.endShadows=function(){f=!1,j()},this.setState=function(b,g,h){let l=b.clippingPlanes,m=b.clipIntersection,n=b.clipShadows,o=a.get(b);if(e&&null!==l&&0!==l.length&&(!f||n)){let p=f?0:d,q=4*p,r=o.clippingState||null;i.value=r,r=k(l,g,q,h);for(let s=0;s!==q;++s)r[s]=c[s];o.clippingState=r,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=p}else f?k(null):j()}}function cq(a){let b=new WeakMap;function c(a,b){return 303===b?a.mapping=301:304===b&&(a.mapping=302),a}function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture&& !1===e.isRenderTargetTexture){let f=e.mapping;if(303===f||304===f){if(b.has(e)){let g=b.get(e).texture;return c(g,e.mapping)}{let h=e.image;if(!h||!(h.height>0))return null;{let i=new b7(h.height/2);return i.fromEquirectangularTexture(a,e),b.set(e,i),e.addEventListener("dispose",d),c(i.texture,e.mapping)}}}}return e},dispose:function(){b=new WeakMap}}}ck.physical={uniforms:b0([ck.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new N(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new ab(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new N},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ab(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ab(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ci.meshphysical_vert,fragmentShader:ci.meshphysical_frag};class cr extends b3{constructor(a=-1,b=1,c=1,d=-1,e=.1,f=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=e,this.far=f,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.left=a.left,this.right=a.right,this.top=a.top,this.bottom=a.bottom,this.near=a.near,this.far=a.far,this.zoom=a.zoom,this.view=null===a.view?null:Object.assign({},a.view),this}setViewOffset(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,f=c+a,g=d+b,h=d-b;if(null!==this.view&&this.view.enabled){let i=(this.right-this.left)/this.view.fullWidth/this.zoom,j=(this.top-this.bottom)/this.view.fullHeight/this.zoom;e+=i*this.view.offsetX,f=e+i*this.view.width,g-=j*this.view.offsetY,h=g-j*this.view.height}this.projectionMatrix.makeOrthographic(e,f,g,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.zoom=this.zoom,b.object.left=this.left,b.object.right=this.right,b.object.top=this.top,b.object.bottom=this.bottom,b.object.near=this.near,b.object.far=this.far,null!==this.view&&(b.object.view=Object.assign({},this.view)),b}}let cs=[.125,.215,.35,.446,.526,.582],ct=new cr,cu=new ab,cv=null,cw=(1+Math.sqrt(5))/2,cx=1/cw,cy=[new am(1,1,1),new am(-1,1,1),new am(1,1,-1),new am(-1,1,-1),new am(0,cw,cx),new am(0,cw,-cx),new am(cx,0,cw),new am(-cx,0,cw),new am(cw,cx,0),new am(-cw,cx,0)];class cz{constructor(a){this._renderer=a,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(a,b=0,c=.1,d=100){cv=this._renderer.getRenderTarget(),this._setSize(256);let e=this._allocateTargets();return e.depthBuffer=!0,this._sceneToCubeUV(a,c,d,e),b>0&&this._blur(e,0,0,b),this._applyPMREM(e),this._cleanup(e),e}fromEquirectangular(a,b=null){return this._fromTexture(a,b)}fromCubemap(a,b=null){return this._fromTexture(a,b)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=cF(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=cE(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(a){this._lodMax=Math.floor(Math.log2(a)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let a=0;a<this._lodPlanes.length;a++)this._lodPlanes[a].dispose()}_cleanup(a){this._renderer.setRenderTarget(cv),a.scissorTest=!1,cC(a,0,0,a.width,a.height)}_fromTexture(a,b){301===a.mapping||302===a.mapping?this._setSize(0===a.image.length?16:a.image[0].width||a.image[0].image.width):this._setSize(a.image.width/4),cv=this._renderer.getRenderTarget();let c=b||this._allocateTargets();return this._textureToCubeUV(a,c),this._applyPMREM(c),this._cleanup(c),c}_allocateTargets(){let a=3*Math.max(this._cubeSize,112),b=4*this._cubeSize,c={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:s,encoding:3e3,depthBuffer:!1},d=cB(a,b,c);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==a){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=cB(a,b,c);let{_lodMax:e}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=cA(e)),this._blurMaterial=cD(e,a,b)}return d}_compileMaterial(a){let b=new bY(this._lodPlanes[0],a);this._renderer.compile(b,ct)}_sceneToCubeUV(a,b,c,d){let e=new b4(90,1,b,c),f=[1,-1,1,1,1,1],g=[1,1,1,-1,-1,-1],i=this._renderer,j=i.autoClear,k=i.toneMapping;i.getClearColor(cu),i.toneMapping=0,i.autoClear=!1;let l=new bs({name:"PMREM.Background",side:h,depthWrite:!1,depthTest:!1}),m=new bY(new b$,l),n=!1,o=a.background;o?o.isColor&&(l.color.copy(o),a.background=null,n=!0):(l.color.copy(cu),n=!0);for(let p=0;p<6;p++){let q=p%3;0===q?(e.up.set(0,f[p],0),e.lookAt(g[p],0,0)):1===q?(e.up.set(0,0,f[p]),e.lookAt(0,g[p],0)):(e.up.set(0,f[p],0),e.lookAt(0,0,g[p]));let r=this._cubeSize;cC(d,q*r,p>2?r:0,r,r),i.setRenderTarget(d),n&&i.render(m,e),i.render(a,e)}m.geometry.dispose(),m.material.dispose(),i.toneMapping=k,i.autoClear=j,a.background=o}_textureToCubeUV(a,b){let c=this._renderer,d=301===a.mapping||302===a.mapping;d?(null===this._cubemapMaterial&&(this._cubemapMaterial=cF()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===a.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=cE());let e=d?this._cubemapMaterial:this._equirectMaterial,f=new bY(this._lodPlanes[0],e),g=e.uniforms;g.envMap.value=a;let h=this._cubeSize;cC(b,0,0,3*h,2*h),c.setRenderTarget(b),c.render(f,ct)}_applyPMREM(a){let b=this._renderer,c=b.autoClear;b.autoClear=!1;for(let d=1;d<this._lodPlanes.length;d++){let e=Math.sqrt(this._sigmas[d]*this._sigmas[d]-this._sigmas[d-1]*this._sigmas[d-1]),f=cy[(d-1)%cy.length];this._blur(a,d-1,d,e,f)}b.autoClear=c}_blur(a,b,c,d,e){let f=this._pingPongRenderTarget;this._halfBlur(a,f,b,c,d,"latitudinal",e),this._halfBlur(f,a,c,c,d,"longitudinal",e)}_halfBlur(a,b,c,d,e,f,g){let h=this._renderer,i=this._blurMaterial;"latitudinal"!==f&&"longitudinal"!==f&&console.error("blur direction must be either latitudinal or longitudinal!");let j=new bY(this._lodPlanes[d],i),k=i.uniforms,l=this._sizeLods[c]-1,m=isFinite(e)?Math.PI/(2*l):2*Math.PI/39,n=e/m,o=isFinite(e)?1+Math.floor(3*n):20;o>20&&console.warn(`sigmaRadians, ${e}, is too large and will clip, as it requested ${o} samples when the maximum is set to 20`);let p=[],q=0;for(let r=0;r<20;++r){let s=r/n,t=Math.exp(-s*s/2);p.push(t),0===r?q+=t:r<o&&(q+=2*t)}for(let u=0;u<p.length;u++)p[u]=p[u]/q;k.envMap.value=a.texture,k.samples.value=o,k.weights.value=p,k.latitudinal.value="latitudinal"===f,g&&(k.poleAxis.value=g);let{_lodMax:v}=this;k.dTheta.value=m,k.mipInt.value=v-c;let w=this._sizeLods[d],x=4*(this._cubeSize-w);cC(b,3*w*(d>v-4?d-v+4:0),x,3*w,2*w),h.setRenderTarget(b),h.render(j,ct)}}function cA(a){let b=[],c=[],d=[],e=a,f=a-4+1+cs.length;for(let g=0;g<f;g++){let h=Math.pow(2,e);c.push(h);let i=1/h;g>a-4?i=cs[g-a+4-1]:0===g&&(i=0),d.push(i);let j=1/(h-2),k=-j,l=1+j,m=[k,k,l,k,l,l,k,k,l,l,k,l],n=6,o=6,p=3,q=2,r=1,s=new Float32Array(p*o*n),t=new Float32Array(q*o*n),u=new Float32Array(r*o*n);for(let v=0;v<n;v++){let w=v%3*2/3-1,x=v>2?0:-1,y=[w,x,0,w+2/3,x,0,w+2/3,x+1,0,w,x,0,w+2/3,x+1,0,w,x+1,0];s.set(y,p*o*v),t.set(m,q*o*v);let z=[v,v,v,v,v,v];u.set(z,r*o*v)}let A=new bG;A.setAttribute("position",new bv(s,p)),A.setAttribute("uv",new bv(t,q)),A.setAttribute("faceIndex",new bv(u,r)),b.push(A),e>4&&e--}return{lodPlanes:b,sizeLods:c,sigmas:d}}function cB(a,b,c){let d=new aj(a,b,c);return d.texture.mapping=306,d.texture.name="PMREM.cubeUv",d.scissorTest=!0,d}function cC(a,b,c,d,e){a.viewport.set(b,c,d,e),a.scissor.set(b,c,d,e)}function cD(a,b,c){let d=new Float32Array(20),e=new am(0,1,0),f=new b2({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/b,CUBEUV_TEXEL_HEIGHT:1/c,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:d},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e}},vertexShader:cG(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1});return f}function cE(){return new b2({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:cG(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function cF(){return new b2({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:cG(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function cG(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function cH(a){let b=new WeakMap,c=null;function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture){let f=e.mapping,g=303===f||304===f,h=301===f||302===f;if(g||h){if(e.isRenderTargetTexture&& !0===e.needsPMREMUpdate){e.needsPMREMUpdate=!1;let i=b.get(e);return null===c&&(c=new cz(a)),i=g?c.fromEquirectangular(e,i):c.fromCubemap(e,i),b.set(e,i),i.texture}if(b.has(e))return b.get(e).texture;{let j=e.image;if(!(g&&j&&j.height>0||h&&j&&function a(b){let c=0;for(let d=0;d<6;d++)void 0!==b[d]&&c++;return 6===c}(j)))return null;{null===c&&(c=new cz(a));let k=g?c.fromEquirectangular(e):c.fromCubemap(e);return b.set(e,k),e.addEventListener("dispose",d),k.texture}}}}return e},dispose:function(){b=new WeakMap,null!==c&&(c.dispose(),c=null)}}}function cI(a){let b={};function c(c){if(void 0!==b[c])return b[c];let d;switch(c){case"WEBGL_depth_texture":d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}return b[c]=d,d}return{has:function(a){return null!==c(a)},init:function(a){a.isWebGL2?c("EXT_color_buffer_float"):(c("WEBGL_depth_texture"),c("OES_texture_float"),c("OES_texture_half_float"),c("OES_texture_half_float_linear"),c("OES_standard_derivatives"),c("OES_element_index_uint"),c("OES_vertex_array_object"),c("ANGLE_instanced_arrays")),c("OES_texture_float_linear"),c("EXT_color_buffer_half_float"),c("WEBGL_multisampled_render_to_texture")},get:function(a){let b=c(a);return null===b&&console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),b}}}function cJ(a,b,c,d){let e={},f=new WeakMap;function g(a){let h=a.target;for(let i in null!==h.index&&b.remove(h.index),h.attributes)b.remove(h.attributes[i]);h.removeEventListener("dispose",g),delete e[h.id];let j=f.get(h);j&&(b.remove(j),f.delete(h)),d.releaseStatesOfGeometry(h),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,c.memory.geometries--}function h(a){let c=[],d=a.index,e=a.attributes.position,g=0;if(null!==d){let h=d.array;g=d.version;for(let i=0,j=h.length;i<j;i+=3){let k=h[i+0],l=h[i+1],m=h[i+2];c.push(k,l,l,m,m,k)}}else{let n=e.array;g=e.version;for(let o=0,p=n.length/3-1;o<p;o+=3){let q=o+0,r=o+1,s=o+2;c.push(q,r,r,s,s,q)}}let t=new(P(c)?bx:bw)(c,1);t.version=g;let u=f.get(a);u&&b.remove(u),f.set(a,t)}return{get:function(a,b){return!0===e[b.id]||(b.addEventListener("dispose",g),e[b.id]=!0,c.memory.geometries++),b},update:function(a){let c=a.attributes;for(let d in c)b.update(c[d],34962);let e=a.morphAttributes;for(let f in e){let g=e[f];for(let h=0,i=g.length;h<i;h++)b.update(g[h],34962)}},getWireframeAttribute:function(a){let b=f.get(a);if(b){let c=a.index;null!==c&&b.version<c.version&&h(a)}else h(a);return f.get(a)}}}function cK(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}let h,i;this.setMode=g,this.setIndex=function(a){h=a.type,i=a.bytesPerElement},this.render=function(b,d){a.drawElements(f,d,h,b*i),c.update(d,f,1)},this.renderInstances=function(d,g,j){if(0===j)return;let k,l;if(e)k=a,l="drawElementsInstanced";else if(k=b.get("ANGLE_instanced_arrays"),l="drawElementsInstancedANGLE",null===k){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}k[l](f,g,h,d*i,j),c.update(g,f,j)}}function cL(a){let b={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:b,programs:null,autoReset:!0,reset:function(){b.frame++,b.calls=0,b.triangles=0,b.points=0,b.lines=0},update:function(a,c,d){switch(b.calls++,c){case 4:b.triangles+=d*(a/3);break;case 1:b.lines+=d*(a/2);break;case 3:b.lines+=d*(a-1);break;case 2:b.lines+=d*a;break;case 0:b.points+=d*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",c)}}}}function cM(a,b){return a[0]-b[0]}function cN(a,b){return Math.abs(b[1])-Math.abs(a[1])}function cO(a,b){let c=1,d=b.isInterleavedBufferAttribute?b.data.array:b.array;d instanceof Int8Array?c=127:d instanceof Uint8Array?c=255:d instanceof Uint16Array?c=65535:d instanceof Int16Array?c=32767:d instanceof Int32Array?c=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",d),a.divideScalar(c)}function cP(a,b,c){let d={},e=new Float32Array(8),f=new WeakMap,g=new ai,h=[];for(let i=0;i<8;i++)h[i]=[i,0];return{update:function(i,j,k,l){let m=i.morphTargetInfluences;if(!0===b.isWebGL2){let n=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,o=void 0!==n?n.length:0,p=f.get(j);if(void 0===p||p.count!==o){void 0!==p&&p.texture.dispose();let q=void 0!==j.morphAttributes.position,r=void 0!==j.morphAttributes.normal,s=void 0!==j.morphAttributes.color,t=j.morphAttributes.position||[],u=j.morphAttributes.normal||[],v=j.morphAttributes.color||[],w=0;!0===q&&(w=1),!0===r&&(w=2),!0===s&&(w=3);let x=j.attributes.position.count*w,y=1;x>b.maxTextureSize&&(y=Math.ceil(x/b.maxTextureSize),x=b.maxTextureSize);let z=new Float32Array(x*y*4*o),A=new ak(z,x,y,o);A.type=1015,A.needsUpdate=!0;let B=4*w;for(let C=0;C<o;C++){let D=t[C],E=u[C],F=v[C],G=x*y*4*C;for(let H=0;H<D.count;H++){let I=H*B;!0===q&&(g.fromBufferAttribute(D,H),!0===D.normalized&&cO(g,D),z[G+I+0]=g.x,z[G+I+1]=g.y,z[G+I+2]=g.z,z[G+I+3]=0),!0===r&&(g.fromBufferAttribute(E,H),!0===E.normalized&&cO(g,E),z[G+I+4]=g.x,z[G+I+5]=g.y,z[G+I+6]=g.z,z[G+I+7]=0),!0===s&&(g.fromBufferAttribute(F,H),!0===F.normalized&&cO(g,F),z[G+I+8]=g.x,z[G+I+9]=g.y,z[G+I+10]=g.z,z[G+I+11]=4===F.itemSize?g.w:1)}}function J(){A.dispose(),f.delete(j),j.removeEventListener("dispose",J)}p={count:o,texture:A,size:new N(x,y)},f.set(j,p),j.addEventListener("dispose",J)}let K=0;for(let L=0;L<m.length;L++)K+=m[L];let M=j.morphTargetsRelative?1:1-K;l.getUniforms().setValue(a,"morphTargetBaseInfluence",M),l.getUniforms().setValue(a,"morphTargetInfluences",m),l.getUniforms().setValue(a,"morphTargetsTexture",p.texture,c),l.getUniforms().setValue(a,"morphTargetsTextureSize",p.size)}else{let O=void 0===m?0:m.length,P=d[j.id];if(void 0===P||P.length!==O){P=[];for(let Q=0;Q<O;Q++)P[Q]=[Q,0];d[j.id]=P}for(let R=0;R<O;R++){let S=P[R];S[0]=R,S[1]=m[R]}P.sort(cN);for(let T=0;T<8;T++)T<O&&P[T][1]?(h[T][0]=P[T][0],h[T][1]=P[T][1]):(h[T][0]=Number.MAX_SAFE_INTEGER,h[T][1]=0);h.sort(cM);let U=j.morphAttributes.position,V=j.morphAttributes.normal,W=0;for(let X=0;X<8;X++){let Y=h[X],Z=Y[0],$=Y[1];Z!==Number.MAX_SAFE_INTEGER&&$?(U&&j.getAttribute("morphTarget"+X)!==U[Z]&&j.setAttribute("morphTarget"+X,U[Z]),V&&j.getAttribute("morphNormal"+X)!==V[Z]&&j.setAttribute("morphNormal"+X,V[Z]),e[X]=$,W+=$):(U&& !0===j.hasAttribute("morphTarget"+X)&&j.deleteAttribute("morphTarget"+X),V&& !0===j.hasAttribute("morphNormal"+X)&&j.deleteAttribute("morphNormal"+X),e[X]=0)}let _=j.morphTargetsRelative?1:1-W;l.getUniforms().setValue(a,"morphTargetBaseInfluence",_),l.getUniforms().setValue(a,"morphTargetInfluences",e)}}}}function cQ(a,b,c,d){let e=new WeakMap;function f(a){let b=a.target;b.removeEventListener("dispose",f),c.remove(b.instanceMatrix),null!==b.instanceColor&&c.remove(b.instanceColor)}return{update:function(a){let g=d.render.frame,h=a.geometry,i=b.get(a,h);return e.get(i)!==g&&(b.update(i),e.set(i,g)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",f)&&a.addEventListener("dispose",f),c.update(a.instanceMatrix,34962),null!==a.instanceColor&&c.update(a.instanceColor,34962)),i},dispose:function(){e=new WeakMap}}}let cR=new ah,cS=new ak,cT=new class a extends ah{constructor(a=null,b=1,c=1,d=1){super(null),this.isData3DTexture=!0,this.image={data:a,width:b,height:c,depth:d},this.magFilter=q,this.minFilter=q,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},cU=new b6,cV=[],cW=[],cX=new Float32Array(16),cY=new Float32Array(9),cZ=new Float32Array(4);function c$(a,b,c){let d=a[0];if(d<=0||d>0)return a;let e=b*c,f=cV[e];if(void 0===f&&(f=new Float32Array(e),cV[e]=f),0!==b){d.toArray(f,0);for(let g=1,h=0;g!==b;++g)h+=c,a[g].toArray(f,h)}return f}function c_(a,b){if(a.length!==b.length)return!1;for(let c=0,d=a.length;c<d;c++)if(a[c]!==b[c])return!1;return!0}function c0(a,b){for(let c=0,d=b.length;c<d;c++)a[c]=b[c]}function c1(a,b){let c=cW[b];void 0===c&&(c=new Int32Array(b),cW[b]=c);for(let d=0;d!==b;++d)c[d]=a.allocateTextureUnit();return c}function c2(a,b){let c=this.cache;c[0]!==b&&(a.uniform1f(this.addr,b),c[0]=b)}function c3(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y)&&(a.uniform2f(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y);else{if(c_(c,b))return;a.uniform2fv(this.addr,b),c0(c,b)}}function c4(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)&&(a.uniform3f(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z);else if(void 0!==b.r)(c[0]!==b.r||c[1]!==b.g||c[2]!==b.b)&&(a.uniform3f(this.addr,b.r,b.g,b.b),c[0]=b.r,c[1]=b.g,c[2]=b.b);else{if(c_(c,b))return;a.uniform3fv(this.addr,b),c0(c,b)}}function c5(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)&&(a.uniform4f(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w);else{if(c_(c,b))return;a.uniform4fv(this.addr,b),c0(c,b)}}function c6(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(c_(c,b))return;a.uniformMatrix2fv(this.addr,!1,b),c0(c,b)}else{if(c_(c,d))return;cZ.set(d),a.uniformMatrix2fv(this.addr,!1,cZ),c0(c,d)}}function c7(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(c_(c,b))return;a.uniformMatrix3fv(this.addr,!1,b),c0(c,b)}else{if(c_(c,d))return;cY.set(d),a.uniformMatrix3fv(this.addr,!1,cY),c0(c,d)}}function c8(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(c_(c,b))return;a.uniformMatrix4fv(this.addr,!1,b),c0(c,b)}else{if(c_(c,d))return;cX.set(d),a.uniformMatrix4fv(this.addr,!1,cX),c0(c,d)}}function c9(a,b){let c=this.cache;c[0]!==b&&(a.uniform1i(this.addr,b),c[0]=b)}function da(a,b){let c=this.cache;c_(c,b)||(a.uniform2iv(this.addr,b),c0(c,b))}function db(a,b){let c=this.cache;c_(c,b)||(a.uniform3iv(this.addr,b),c0(c,b))}function dc(a,b){let c=this.cache;c_(c,b)||(a.uniform4iv(this.addr,b),c0(c,b))}function dd(a,b){let c=this.cache;c[0]!==b&&(a.uniform1ui(this.addr,b),c[0]=b)}function de(a,b){let c=this.cache;c_(c,b)||(a.uniform2uiv(this.addr,b),c0(c,b))}function df(a,b){let c=this.cache;c_(c,b)||(a.uniform3uiv(this.addr,b),c0(c,b))}function dg(a,b){let c=this.cache;c_(c,b)||(a.uniform4uiv(this.addr,b),c0(c,b))}function dh(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2D(b||cR,e)}function di(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture3D(b||cT,e)}function dj(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTextureCube(b||cU,e)}function dk(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2DArray(b||cS,e)}function dl(a,b){a.uniform1fv(this.addr,b)}function dm(a,b){let c=c$(b,this.size,2);a.uniform2fv(this.addr,c)}function dn(a,b){let c=c$(b,this.size,3);a.uniform3fv(this.addr,c)}function dp(a,b){let c=c$(b,this.size,4);a.uniform4fv(this.addr,c)}function dq(a,b){let c=c$(b,this.size,4);a.uniformMatrix2fv(this.addr,!1,c)}function dr(a,b){let c=c$(b,this.size,9);a.uniformMatrix3fv(this.addr,!1,c)}function ds(a,b){let c=c$(b,this.size,16);a.uniformMatrix4fv(this.addr,!1,c)}function dt(a,b){a.uniform1iv(this.addr,b)}function du(a,b){a.uniform2iv(this.addr,b)}function dv(a,b){a.uniform3iv(this.addr,b)}function dw(a,b){a.uniform4iv(this.addr,b)}function dx(a,b){a.uniform1uiv(this.addr,b)}function dy(a,b){a.uniform2uiv(this.addr,b)}function dz(a,b){a.uniform3uiv(this.addr,b)}function dA(a,b){a.uniform4uiv(this.addr,b)}function dB(a,b,c){let d=b.length,e=c1(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture2D(b[f]||cR,e[f])}function dC(a,b,c){let d=b.length,e=c1(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture3D(b[f]||cT,e[f])}function dD(a,b,c){let d=b.length,e=c1(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTextureCube(b[f]||cU,e[f])}function dE(a,b,c){let d=b.length,e=c1(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture2DArray(b[f]||cS,e[f])}class dF{constructor(a,b,c){this.id=a,this.addr=c,this.cache=[],this.setValue=function(a){switch(a){case 5126:return c2;case 35664:return c3;case 35665:return c4;case 35666:return c5;case 35674:return c6;case 35675:return c7;case 35676:return c8;case 5124:case 35670:return c9;case 35667:case 35671:return da;case 35668:case 35672:return db;case 35669:case 35673:return dc;case 5125:return dd;case 36294:return de;case 36295:return df;case 36296:return dg;case 35678:case 36198:case 36298:case 36306:case 35682:return dh;case 35679:case 36299:case 36307:return di;case 35680:case 36300:case 36308:case 36293:return dj;case 36289:case 36303:case 36311:case 36292:return dk}}(b.type)}}class dG{constructor(a,b,c){this.id=a,this.addr=c,this.cache=[],this.size=b.size,this.setValue=function(a){switch(a){case 5126:return dl;case 35664:return dm;case 35665:return dn;case 35666:return dp;case 35674:return dq;case 35675:return dr;case 35676:return ds;case 5124:case 35670:return dt;case 35667:case 35671:return du;case 35668:case 35672:return dv;case 35669:case 35673:return dw;case 5125:return dx;case 36294:return dy;case 36295:return dz;case 36296:return dA;case 35678:case 36198:case 36298:case 36306:case 35682:return dB;case 35679:case 36299:case 36307:return dC;case 35680:case 36300:case 36308:case 36293:return dD;case 36289:case 36303:case 36311:case 36292:return dE}}(b.type)}}class dH{constructor(a){this.id=a,this.seq=[],this.map={}}setValue(a,b,c){let d=this.seq;for(let e=0,f=d.length;e!==f;++e){let g=d[e];g.setValue(a,b[g.id],c)}}}let dI=/(\w+)(\])?(\[|\.)?/g;function dJ(a,b){a.seq.push(b),a.map[b.id]=b}function dK(a,b,c){let d=a.name,e=d.length;for(dI.lastIndex=0;;){let f=dI.exec(d),g=dI.lastIndex,h=f[1],i="]"===f[2],j=f[3];if(i&&(h|=0),void 0===j||"["===j&&g+2===e){dJ(c,void 0===j?new dF(h,a,b):new dG(h,a,b));break}{let k=c.map,l=k[h];void 0===l&&(l=new dH(h),dJ(c,l)),c=l}}}class dL{constructor(a,b){this.seq=[],this.map={};let c=a.getProgramParameter(b,35718);for(let d=0;d<c;++d){let e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name);dK(e,f,this)}}setValue(a,b,c,d){let e=this.map[b];void 0!==e&&e.setValue(a,c,d)}setOptional(a,b,c){let d=b[c];void 0!==d&&this.setValue(a,c,d)}static upload(a,b,c,d){for(let e=0,f=b.length;e!==f;++e){let g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}}static seqWithValue(a,b){let c=[];for(let d=0,e=a.length;d!==e;++d){let f=a[d];f.id in b&&c.push(f)}return c}}function dM(a,b,c){let d=a.createShader(b);return a.shaderSource(d,c),a.compileShader(d),d}let dN=0;function dO(a,b,c){let d=a.getShaderParameter(b,35713),e=a.getShaderInfoLog(b).trim();if(d&&""===e)return"";let f=/ERROR: 0:(\d+)/.exec(e);if(!f)return e;{let g=parseInt(f[1]);return c.toUpperCase()+"\n\n"+e+"\n\n"+function(a,b){let c=a.split("\n"),d=[],e=Math.max(b-6,0),f=Math.min(b+6,c.length);for(let g=e;g<f;g++){let h=g+1;d.push(`${h===b?">":" "} ${h}: ${c[g]}`)}return d.join("\n")}(a.getShaderSource(b),g)}}function dP(a){return""!==a}function dQ(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,b.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,b.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,b.numPointLightShadows)}function dR(a,b){return a.replace(/NUM_CLIPPING_PLANES/g,b.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,b.numClippingPlanes-b.numClipIntersection)}let dS=/^[ \t]*#include +<([\w\d./]+)>/gm;function dT(a){return a.replace(dS,dU)}function dU(a,b){let c=ci[b];if(void 0===c)throw Error("Can not resolve #include <"+b+">");return dT(c)}let dV=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,dW=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function dX(a){return a.replace(dW,dZ).replace(dV,dY)}function dY(a,b,c,d){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),dZ(a,b,c,d)}function dZ(a,b,c,d){let e="";for(let f=parseInt(b);f<parseInt(c);f++)e+=d.replace(/\[\s*i\s*\]/g,"[ "+f+" ]").replace(/UNROLLED_LOOP_INDEX/g,f);return e}function d$(a){let b="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?b+="\n#define HIGH_PRECISION":"mediump"===a.precision?b+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(b+="\n#define LOW_PRECISION"),b}function d_(a,b,c,d){var e,g;let h=a.getContext(),i=c.defines,j=c.vertexShader,k=c.fragmentShader,l,m=(l="SHADOWMAP_TYPE_BASIC",1===(e=c).shadowMapType?l="SHADOWMAP_TYPE_PCF":e.shadowMapType===f?l="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(l="SHADOWMAP_TYPE_VSM"),l),p=function(a){let b="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case 301:case 302:b="ENVMAP_TYPE_CUBE";break;case 306:b="ENVMAP_TYPE_CUBE_UV"}return b}(c),q,r=(q="ENVMAP_MODE_REFLECTION",(g=c).envMap&&302===g.envMapMode&&(q="ENVMAP_MODE_REFRACTION"),q),s=function(a){let b="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case n:b="ENVMAP_BLENDING_MULTIPLY";break;case 1:b="ENVMAP_BLENDING_MIX";break;case o:b="ENVMAP_BLENDING_ADD"}return b}(c),t=function(a){let b=a.envMapCubeUVHeight;if(null===b)return null;let c=Math.log2(b)-2,d=1/b,e=1/(3*Math.max(Math.pow(2,c),112));return{texelWidth:e,texelHeight:d,maxMip:c}}(c),u=c.isWebGL2?"":function(a){let b=[a.extensionDerivatives||a.envMapCubeUVHeight||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return b.filter(dP).join("\n")}(c),v=function(a){let b=[];for(let c in a){let d=a[c];!1!==d&&b.push("#define "+c+" "+d)}return b.join("\n")}(i),w=h.createProgram(),x,y,z=c.glslVersion?"#version "+c.glslVersion+"\n":"";c.isRawShaderMaterial?((x=[v].filter(dP).join("\n")).length>0&&(x+="\n"),(y=[u,v].filter(dP).join("\n")).length>0&&(y+="\n")):(x=[d$(c),"#define SHADER_NAME "+c.shaderName,v,c.instancing?"#define USE_INSTANCING":"",c.instancingColor?"#define USE_INSTANCING_COLOR":"",c.supportsVertexTextures?"#define VERTEX_TEXTURES":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+r:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",c.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",c.displacementMap&&c.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",c.specularColorMap?"#define USE_SPECULARCOLORMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.sheenColorMap?"#define USE_SHEENCOLORMAP":"",c.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.flatShading?"#define FLAT_SHADED":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals&& !1===c.flatShading?"#define USE_MORPHNORMALS":"",c.morphColors&&c.isWebGL2?"#define USE_MORPHCOLORS":"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+c.morphTextureStride:"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_COUNT "+c.morphTargetsCount:"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+m:"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(dP).join("\n"),y=[u,d$(c),"#define SHADER_NAME "+c.shaderName,v,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.matcap?"#define USE_MATCAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+p:"",c.envMap?"#define "+r:"",c.envMap?"#define "+s:"",t?"#define CUBEUV_TEXEL_WIDTH "+t.texelWidth:"",t?"#define CUBEUV_TEXEL_HEIGHT "+t.texelHeight:"",t?"#define CUBEUV_MAX_MIP "+t.maxMip+".0":"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoat?"#define USE_CLEARCOAT":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.iridescence?"#define USE_IRIDESCENCE":"",c.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",c.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",c.specularColorMap?"#define USE_SPECULARCOLORMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.alphaTest?"#define USE_ALPHATEST":"",c.sheen?"#define USE_SHEEN":"",c.sheenColorMap?"#define USE_SHEENCOLORMAP":"",c.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors||c.instancingColor?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.gradientMap?"#define USE_GRADIENTMAP":"",c.flatShading?"#define FLAT_SHADED":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+m:"",c.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",c.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==c.toneMapping?"#define TONE_MAPPING":"",0!==c.toneMapping?ci.tonemapping_pars_fragment:"",0!==c.toneMapping?function(a,b){let c;switch(b){case 1:c="Linear";break;case 2:c="Reinhard";break;case 3:c="OptimizedCineon";break;case 4:c="ACESFilmic";break;case 5:c="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",b),c="Linear"}return"vec3 "+a+"( vec3 color ) { return "+c+"ToneMapping( color ); }"}("toneMapping",c.toneMapping):"",c.dithering?"#define DITHERING":"",c.opaque?"#define OPAQUE":"",ci.encodings_pars_fragment,function(a,b){let c=function(a){switch(a){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}(b);return"vec4 "+a+"( vec4 value ) { return LinearTo"+c[0]+c[1]+"; }"}("linearToOutputTexel",c.outputEncoding),c.useDepthPacking?"#define DEPTH_PACKING "+c.depthPacking:"","\n"].filter(dP).join("\n")),j=dT(j),j=dQ(j,c),j=dR(j,c),k=dT(k),k=dQ(k,c),k=dR(k,c),j=dX(j),k=dX(k),c.isWebGL2&& !0!==c.isRawShaderMaterial&&(z="#version 300 es\n",x="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+x,y=["#define varying in",c.glslVersion===D?"":"layout(location = 0) out highp vec4 pc_fragColor;",c.glslVersion===D?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);let A=z+x+j,B=z+y+k,C=dM(h,35633,A),E=dM(h,35632,B);if(h.attachShader(w,C),h.attachShader(w,E),void 0!==c.index0AttributeName?h.bindAttribLocation(w,0,c.index0AttributeName):!0===c.morphTargets&&h.bindAttribLocation(w,0,"position"),h.linkProgram(w),a.debug.checkShaderErrors){let F=h.getProgramInfoLog(w).trim(),G=h.getShaderInfoLog(C).trim(),H=h.getShaderInfoLog(E).trim(),I=!0,J=!0;if(!1===h.getProgramParameter(w,35714)){I=!1;let K=dO(h,C,"vertex"),L=dO(h,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+h.getError()+" - VALIDATE_STATUS "+h.getProgramParameter(w,35715)+"\n\nProgram Info Log: "+F+"\n"+K+"\n"+L)}else""!==F?console.warn("THREE.WebGLProgram: Program Info Log:",F):(""===G||""===H)&&(J=!1);J&&(this.diagnostics={runnable:I,programLog:F,vertexShader:{log:G,prefix:x},fragmentShader:{log:H,prefix:y}})}h.deleteShader(C),h.deleteShader(E);let M;this.getUniforms=function(){return void 0===M&&(M=new dL(h,w)),M};let N;return this.getAttributes=function(){return void 0===N&&(N=function(a,b){let c={},d=a.getProgramParameter(b,35721);for(let e=0;e<d;e++){let f=a.getActiveAttrib(b,e),g=f.name,h=1;35674===f.type&&(h=2),35675===f.type&&(h=3),35676===f.type&&(h=4),c[g]={type:f.type,location:a.getAttribLocation(b,g),locationSize:h}}return c}(h,w)),N},this.destroy=function(){d.releaseStatesOfProgram(this),h.deleteProgram(w),this.program=void 0},this.name=c.shaderName,this.id=dN++,this.cacheKey=b,this.usedTimes=1,this.program=w,this.vertexShader=C,this.fragmentShader=E,this}let d0=0;class d1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(a){let b=a.vertexShader,c=a.fragmentShader,d=this._getShaderStage(b),e=this._getShaderStage(c),f=this._getShaderCacheForMaterial(a);return!1===f.has(d)&&(f.add(d),d.usedTimes++),!1===f.has(e)&&(f.add(e),e.usedTimes++),this}remove(a){let b=this.materialCache.get(a);for(let c of b)c.usedTimes--,0===c.usedTimes&&this.shaderCache.delete(c.code);return this.materialCache.delete(a),this}getVertexShaderID(a){return this._getShaderStage(a.vertexShader).id}getFragmentShaderID(a){return this._getShaderStage(a.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(a){let b=this.materialCache;return!1===b.has(a)&&b.set(a,new Set),b.get(a)}_getShaderStage(a){let b=this.shaderCache;if(!1===b.has(a)){let c=new d2(a);b.set(a,c)}return b.get(a)}}class d2{constructor(a){this.id=d0++,this.code=a,this.usedTimes=0}}function d3(a,b,c,d,e,f,g){let j=new a0,k=new d1,l=[],m=e.isWebGL2,n=e.logarithmicDepthBuffer,o=e.vertexTextures,p=e.precision,q={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(f,j,l,r,s){let t=r.fog,u=s.geometry,v=f.isMeshStandardMaterial?r.environment:null,w=(f.isMeshStandardMaterial?c:b).get(f.envMap||v),x=w&&306===w.mapping?w.image.height:null,y=q[f.type];null!==f.precision&&(p=e.getMaxPrecision(f.precision))!==f.precision&&console.warn("THREE.WebGLProgram.getParameters:",f.precision,"not supported, using",p,"instead.");let z=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,B=void 0!==z?z.length:0,C=0;void 0!==u.morphAttributes.position&&(C=1),void 0!==u.morphAttributes.normal&&(C=2),void 0!==u.morphAttributes.color&&(C=3);let D,E,F,G;if(y){let H=ck[y];D=H.vertexShader,E=H.fragmentShader}else D=f.vertexShader,E=f.fragmentShader,k.update(f),F=k.getVertexShaderID(f),G=k.getFragmentShaderID(f);let I=a.getRenderTarget(),J=f.alphaTest>0,K=f.clearcoat>0,L=f.iridescence>0,M={isWebGL2:m,shaderID:y,shaderName:f.type,vertexShader:D,fragmentShader:E,defines:f.defines,customVertexShaderID:F,customFragmentShaderID:G,isRawShaderMaterial:!0===f.isRawShaderMaterial,glslVersion:f.glslVersion,precision:p,instancing:!0===s.isInstancedMesh,instancingColor:!0===s.isInstancedMesh&&null!==s.instanceColor,supportsVertexTextures:o,outputEncoding:null===I?a.outputEncoding:!0===I.isXRRenderTarget?I.texture.encoding:3e3,map:!!f.map,matcap:!!f.matcap,envMap:!!w,envMapMode:w&&w.mapping,envMapCubeUVHeight:x,lightMap:!!f.lightMap,aoMap:!!f.aoMap,emissiveMap:!!f.emissiveMap,bumpMap:!!f.bumpMap,normalMap:!!f.normalMap,objectSpaceNormalMap:1===f.normalMapType,tangentSpaceNormalMap:f.normalMapType===A,decodeVideoTexture:!!f.map&& !0===f.map.isVideoTexture&&3001===f.map.encoding,clearcoat:K,clearcoatMap:K&&!!f.clearcoatMap,clearcoatRoughnessMap:K&&!!f.clearcoatRoughnessMap,clearcoatNormalMap:K&&!!f.clearcoatNormalMap,iridescence:L,iridescenceMap:L&&!!f.iridescenceMap,iridescenceThicknessMap:L&&!!f.iridescenceThicknessMap,displacementMap:!!f.displacementMap,roughnessMap:!!f.roughnessMap,metalnessMap:!!f.metalnessMap,specularMap:!!f.specularMap,specularIntensityMap:!!f.specularIntensityMap,specularColorMap:!!f.specularColorMap,opaque:!1===f.transparent&&1===f.blending,alphaMap:!!f.alphaMap,alphaTest:J,gradientMap:!!f.gradientMap,sheen:f.sheen>0,sheenColorMap:!!f.sheenColorMap,sheenRoughnessMap:!!f.sheenRoughnessMap,transmission:f.transmission>0,transmissionMap:!!f.transmissionMap,thicknessMap:!!f.thicknessMap,combine:f.combine,vertexTangents:!!f.normalMap&&!!u.attributes.tangent,vertexColors:f.vertexColors,vertexAlphas:!0===f.vertexColors&&!!u.attributes.color&&4===u.attributes.color.itemSize,vertexUvs:!!f.map||!!f.bumpMap||!!f.normalMap||!!f.specularMap||!!f.alphaMap||!!f.emissiveMap||!!f.roughnessMap||!!f.metalnessMap||!!f.clearcoatMap||!!f.clearcoatRoughnessMap||!!f.clearcoatNormalMap||!!f.iridescenceMap||!!f.iridescenceThicknessMap||!!f.displacementMap||!!f.transmissionMap||!!f.thicknessMap||!!f.specularIntensityMap||!!f.specularColorMap||!!f.sheenColorMap||!!f.sheenRoughnessMap,uvsVertexOnly:!(f.map||f.bumpMap||f.normalMap||f.specularMap||f.alphaMap||f.emissiveMap||f.roughnessMap||f.metalnessMap||f.clearcoatNormalMap||f.iridescenceMap||f.iridescenceThicknessMap||f.transmission>0||f.transmissionMap||f.thicknessMap||f.specularIntensityMap||f.specularColorMap||f.sheen>0||f.sheenColorMap||f.sheenRoughnessMap)&&!!f.displacementMap,fog:!!t,useFog:!0===f.fog,fogExp2:t&&t.isFogExp2,flatShading:!!f.flatShading,sizeAttenuation:f.sizeAttenuation,logarithmicDepthBuffer:n,skinning:!0===s.isSkinnedMesh,morphTargets:void 0!==u.morphAttributes.position,morphNormals:void 0!==u.morphAttributes.normal,morphColors:void 0!==u.morphAttributes.color,morphTargetsCount:B,morphTextureStride:C,numDirLights:j.directional.length,numPointLights:j.point.length,numSpotLights:j.spot.length,numRectAreaLights:j.rectArea.length,numHemiLights:j.hemi.length,numDirLightShadows:j.directionalShadowMap.length,numPointLightShadows:j.pointShadowMap.length,numSpotLightShadows:j.spotShadowMap.length,numClippingPlanes:g.numPlanes,numClipIntersection:g.numIntersection,dithering:f.dithering,shadowMapEnabled:a.shadowMap.enabled&&l.length>0,shadowMapType:a.shadowMap.type,toneMapping:f.toneMapped?a.toneMapping:0,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:f.premultipliedAlpha,doubleSided:f.side===i,flipSided:f.side===h,useDepthPacking:!!f.depthPacking,depthPacking:f.depthPacking||0,index0AttributeName:f.index0AttributeName,extensionDerivatives:f.extensions&&f.extensions.derivatives,extensionFragDepth:f.extensions&&f.extensions.fragDepth,extensionDrawBuffers:f.extensions&&f.extensions.drawBuffers,extensionShaderTextureLOD:f.extensions&&f.extensions.shaderTextureLOD,rendererExtensionFragDepth:m||d.has("EXT_frag_depth"),rendererExtensionDrawBuffers:m||d.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:m||d.has("EXT_shader_texture_lod"),customProgramCacheKey:f.customProgramCacheKey()};return M},getProgramCacheKey:function(b){var c,d,e,f;let g=[];if(b.shaderID?g.push(b.shaderID):(g.push(b.customVertexShaderID),g.push(b.customFragmentShaderID)),void 0!==b.defines)for(let h in b.defines)g.push(h),g.push(b.defines[h]);return!1===b.isRawShaderMaterial&&(c=g,d=b,c.push(d.precision),c.push(d.outputEncoding),c.push(d.envMapMode),c.push(d.envMapCubeUVHeight),c.push(d.combine),c.push(d.vertexUvs),c.push(d.fogExp2),c.push(d.sizeAttenuation),c.push(d.morphTargetsCount),c.push(d.morphAttributeCount),c.push(d.numDirLights),c.push(d.numPointLights),c.push(d.numSpotLights),c.push(d.numHemiLights),c.push(d.numRectAreaLights),c.push(d.numDirLightShadows),c.push(d.numPointLightShadows),c.push(d.numSpotLightShadows),c.push(d.shadowMapType),c.push(d.toneMapping),c.push(d.numClippingPlanes),c.push(d.numClipIntersection),c.push(d.depthPacking),e=g,f=b,j.disableAll(),f.isWebGL2&&j.enable(0),f.supportsVertexTextures&&j.enable(1),f.instancing&&j.enable(2),f.instancingColor&&j.enable(3),f.map&&j.enable(4),f.matcap&&j.enable(5),f.envMap&&j.enable(6),f.lightMap&&j.enable(7),f.aoMap&&j.enable(8),f.emissiveMap&&j.enable(9),f.bumpMap&&j.enable(10),f.normalMap&&j.enable(11),f.objectSpaceNormalMap&&j.enable(12),f.tangentSpaceNormalMap&&j.enable(13),f.clearcoat&&j.enable(14),f.clearcoatMap&&j.enable(15),f.clearcoatRoughnessMap&&j.enable(16),f.clearcoatNormalMap&&j.enable(17),f.iridescence&&j.enable(18),f.iridescenceMap&&j.enable(19),f.iridescenceThicknessMap&&j.enable(20),f.displacementMap&&j.enable(21),f.specularMap&&j.enable(22),f.roughnessMap&&j.enable(23),f.metalnessMap&&j.enable(24),f.gradientMap&&j.enable(25),f.alphaMap&&j.enable(26),f.alphaTest&&j.enable(27),f.vertexColors&&j.enable(28),f.vertexAlphas&&j.enable(29),f.vertexUvs&&j.enable(30),f.vertexTangents&&j.enable(31),f.uvsVertexOnly&&j.enable(32),f.fog&&j.enable(33),e.push(j.mask),j.disableAll(),f.useFog&&j.enable(0),f.flatShading&&j.enable(1),f.logarithmicDepthBuffer&&j.enable(2),f.skinning&&j.enable(3),f.morphTargets&&j.enable(4),f.morphNormals&&j.enable(5),f.morphColors&&j.enable(6),f.premultipliedAlpha&&j.enable(7),f.shadowMapEnabled&&j.enable(8),f.physicallyCorrectLights&&j.enable(9),f.doubleSided&&j.enable(10),f.flipSided&&j.enable(11),f.useDepthPacking&&j.enable(12),f.dithering&&j.enable(13),f.specularIntensityMap&&j.enable(14),f.specularColorMap&&j.enable(15),f.transmission&&j.enable(16),f.transmissionMap&&j.enable(17),f.thicknessMap&&j.enable(18),f.sheen&&j.enable(19),f.sheenColorMap&&j.enable(20),f.sheenRoughnessMap&&j.enable(21),f.decodeVideoTexture&&j.enable(22),f.opaque&&j.enable(23),e.push(j.mask),g.push(a.outputEncoding)),g.push(b.customProgramCacheKey),g.join()},getUniforms:function(a){let b=q[a.type],c;if(b){let d=ck[b];c=b1.clone(d.uniforms)}else c=a.uniforms;return c},acquireProgram:function(b,c){let d;for(let e=0,g=l.length;e<g;e++){let h=l[e];if(h.cacheKey===c){d=h,++d.usedTimes;break}}return void 0===d&&(d=new d_(a,c,b,f),l.push(d)),d},releaseProgram:function(a){if(0== --a.usedTimes){let b=l.indexOf(a);l[b]=l[l.length-1],l.pop(),a.destroy()}},releaseShaderCache:function(a){k.remove(a)},programs:l,dispose:function(){k.dispose()}}}function d4(){let a=new WeakMap;return{get:function(b){let c=a.get(b);return void 0===c&&(c={},a.set(b,c)),c},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}function d5(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function d6(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function d7(){let a=[],b=0,c=[],d=[],e=[];function f(c,d,e,f,g,h){let i=a[b];return void 0===i?(i={id:c.id,object:c,geometry:d,material:e,groupOrder:f,renderOrder:c.renderOrder,z:g,group:h},a[b]=i):(i.id=c.id,i.object=c,i.geometry=d,i.material=e,i.groupOrder=f,i.renderOrder=c.renderOrder,i.z=g,i.group=h),b++,i}return{opaque:c,transmissive:d,transparent:e,init:function(){b=0,c.length=0,d.length=0,e.length=0},push:function(a,b,g,h,i,j){let k=f(a,b,g,h,i,j);g.transmission>0?d.push(k):!0===g.transparent?e.push(k):c.push(k)},unshift:function(a,b,g,h,i,j){let k=f(a,b,g,h,i,j);g.transmission>0?d.unshift(k):!0===g.transparent?e.unshift(k):c.unshift(k)},finish:function(){for(let c=b,d=a.length;c<d;c++){let e=a[c];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(a,b){c.length>1&&c.sort(a||d5),d.length>1&&d.sort(b||d6),e.length>1&&e.sort(b||d6)}}}function d8(){let a=new WeakMap;return{get:function(b,c){let d;return!1===a.has(b)?(d=new d7,a.set(b,[d])):c>=a.get(b).length?(d=new d7,a.get(b).push(d)):d=a.get(b)[c],d},dispose:function(){a=new WeakMap}}}function d9(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":c={direction:new am,color:new ab};break;case"SpotLight":c={position:new am,direction:new am,color:new ab,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":c={position:new am,color:new ab,distance:0,decay:0};break;case"HemisphereLight":c={direction:new am,skyColor:new ab,groundColor:new ab};break;case"RectAreaLight":c={color:new ab,position:new am,halfWidth:new am,halfHeight:new am}}return a[b.id]=c,c}}}let ea=0;function eb(a,b){return(b.castShadow?1:0)-(a.castShadow?1:0)}function ec(a,b){let c=new d9,d=function(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":case"SpotLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new N};break;case"PointLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new N,shadowCameraNear:1,shadowCameraFar:1e3}}return a[b.id]=c,c}}}(),e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let f=0;f<9;f++)e.probe.push(new am);let g=new am,h=new aR,i=new aR;return{setup:function(f,g){let h=0,i=0,j=0;for(let k=0;k<9;k++)e.probe[k].set(0,0,0);let l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f.sort(eb);let t=!0!==g?Math.PI:1;for(let u=0,v=f.length;u<v;u++){let w=f[u],x=w.color,y=w.intensity,z=w.distance,A=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)h+=x.r*y*t,i+=x.g*y*t,j+=x.b*y*t;else if(w.isLightProbe)for(let B=0;B<9;B++)e.probe[B].addScaledVector(w.sh.coefficients[B],y);else if(w.isDirectionalLight){let C=c.get(w);if(C.color.copy(w.color).multiplyScalar(w.intensity*t),w.castShadow){let D=w.shadow,E=d.get(w);E.shadowBias=D.bias,E.shadowNormalBias=D.normalBias,E.shadowRadius=D.radius,E.shadowMapSize=D.mapSize,e.directionalShadow[l]=E,e.directionalShadowMap[l]=A,e.directionalShadowMatrix[l]=w.shadow.matrix,q++}e.directional[l]=C,l++}else if(w.isSpotLight){let F=c.get(w);if(F.position.setFromMatrixPosition(w.matrixWorld),F.color.copy(x).multiplyScalar(y*t),F.distance=z,F.coneCos=Math.cos(w.angle),F.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),F.decay=w.decay,w.castShadow){let G=w.shadow,H=d.get(w);H.shadowBias=G.bias,H.shadowNormalBias=G.normalBias,H.shadowRadius=G.radius,H.shadowMapSize=G.mapSize,e.spotShadow[n]=H,e.spotShadowMap[n]=A,e.spotShadowMatrix[n]=w.shadow.matrix,s++}e.spot[n]=F,n++}else if(w.isRectAreaLight){let I=c.get(w);I.color.copy(x).multiplyScalar(y),I.halfWidth.set(.5*w.width,0,0),I.halfHeight.set(0,.5*w.height,0),e.rectArea[o]=I,o++}else if(w.isPointLight){let J=c.get(w);if(J.color.copy(w.color).multiplyScalar(w.intensity*t),J.distance=w.distance,J.decay=w.decay,w.castShadow){let K=w.shadow,L=d.get(w);L.shadowBias=K.bias,L.shadowNormalBias=K.normalBias,L.shadowRadius=K.radius,L.shadowMapSize=K.mapSize,L.shadowCameraNear=K.camera.near,L.shadowCameraFar=K.camera.far,e.pointShadow[m]=L,e.pointShadowMap[m]=A,e.pointShadowMatrix[m]=w.shadow.matrix,r++}e.point[m]=J,m++}else if(w.isHemisphereLight){let M=c.get(w);M.skyColor.copy(w.color).multiplyScalar(y*t),M.groundColor.copy(w.groundColor).multiplyScalar(y*t),e.hemi[p]=M,p++}}o>0&&(b.isWebGL2?(e.rectAreaLTC1=cj.LTC_FLOAT_1,e.rectAreaLTC2=cj.LTC_FLOAT_2):!0===a.has("OES_texture_float_linear")?(e.rectAreaLTC1=cj.LTC_FLOAT_1,e.rectAreaLTC2=cj.LTC_FLOAT_2):!0===a.has("OES_texture_half_float_linear")?(e.rectAreaLTC1=cj.LTC_HALF_1,e.rectAreaLTC2=cj.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),e.ambient[0]=h,e.ambient[1]=i,e.ambient[2]=j;let N=e.hash;(N.directionalLength!==l||N.pointLength!==m||N.spotLength!==n||N.rectAreaLength!==o||N.hemiLength!==p||N.numDirectionalShadows!==q||N.numPointShadows!==r||N.numSpotShadows!==s)&&(e.directional.length=l,e.spot.length=n,e.rectArea.length=o,e.point.length=m,e.hemi.length=p,e.directionalShadow.length=q,e.directionalShadowMap.length=q,e.pointShadow.length=r,e.pointShadowMap.length=r,e.spotShadow.length=s,e.spotShadowMap.length=s,e.directionalShadowMatrix.length=q,e.pointShadowMatrix.length=r,e.spotShadowMatrix.length=s,N.directionalLength=l,N.pointLength=m,N.spotLength=n,N.rectAreaLength=o,N.hemiLength=p,N.numDirectionalShadows=q,N.numPointShadows=r,N.numSpotShadows=s,e.version=ea++)},setupView:function(a,b){let c=0,d=0,f=0,j=0,k=0,l=b.matrixWorldInverse;for(let m=0,n=a.length;m<n;m++){let o=a[m];if(o.isDirectionalLight){let p=e.directional[c];p.direction.setFromMatrixPosition(o.matrixWorld),g.setFromMatrixPosition(o.target.matrixWorld),p.direction.sub(g),p.direction.transformDirection(l),c++}else if(o.isSpotLight){let q=e.spot[f];q.position.setFromMatrixPosition(o.matrixWorld),q.position.applyMatrix4(l),q.direction.setFromMatrixPosition(o.matrixWorld),g.setFromMatrixPosition(o.target.matrixWorld),q.direction.sub(g),q.direction.transformDirection(l),f++}else if(o.isRectAreaLight){let r=e.rectArea[j];r.position.setFromMatrixPosition(o.matrixWorld),r.position.applyMatrix4(l),i.identity(),h.copy(o.matrixWorld),h.premultiply(l),i.extractRotation(h),r.halfWidth.set(.5*o.width,0,0),r.halfHeight.set(0,.5*o.height,0),r.halfWidth.applyMatrix4(i),r.halfHeight.applyMatrix4(i),j++}else if(o.isPointLight){let s=e.point[d];s.position.setFromMatrixPosition(o.matrixWorld),s.position.applyMatrix4(l),d++}else if(o.isHemisphereLight){let t=e.hemi[k];t.direction.setFromMatrixPosition(o.matrixWorld),t.direction.transformDirection(l),k++}}},state:e}}function ed(a,b){let c=new ec(a,b),d=[],e=[];return{init:function(){d.length=0,e.length=0},state:{lightsArray:d,shadowsArray:e,lights:c},setupLights:function(a){c.setup(d,a)},setupLightsView:function(a){c.setupView(d,a)},pushLight:function(a){d.push(a)},pushShadow:function(a){e.push(a)}}}function ee(a,b){let c=new WeakMap;return{get:function(d,e=0){let f;return!1===c.has(d)?(f=new ed(a,b),c.set(d,[f])):e>=c.get(d).length?(f=new ed(a,b),c.get(d).push(f)):f=c.get(d)[e],f},dispose:function(){c=new WeakMap}}}class ef extends br{constructor(a){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(a)}copy(a){return super.copy(a),this.depthPacking=a.depthPacking,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this}}class eg extends br{constructor(a){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new am,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(a)}copy(a){return super.copy(a),this.referencePosition.copy(a.referencePosition),this.nearDistance=a.nearDistance,this.farDistance=a.farDistance,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this}}function eh(a,b,c){let d=new ce,e=new N,f=new N,j=new ai,k=new ef({depthPacking:3201}),l=new eg,m={},n=c.maxTextureSize,o={0:h,1:g,2:i},p=new b2({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new N},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),r=p.clone();r.defines.HORIZONTAL_PASS=1;let s=new bG;s.setAttribute("position",new bv(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let t=new bY(s,p),u=this;function v(c,d){let f=b.update(t);p.defines.VSM_SAMPLES!==c.blurSamples&&(p.defines.VSM_SAMPLES=c.blurSamples,r.defines.VSM_SAMPLES=c.blurSamples,p.needsUpdate=!0,r.needsUpdate=!0),null===c.mapPass&&(c.mapPass=new aj(e.x,e.y)),p.uniforms.shadow_pass.value=c.map.texture,p.uniforms.resolution.value=c.mapSize,p.uniforms.radius.value=c.radius,a.setRenderTarget(c.mapPass),a.clear(),a.renderBufferDirect(d,null,f,p,t,null),r.uniforms.shadow_pass.value=c.mapPass.texture,r.uniforms.resolution.value=c.mapSize,r.uniforms.radius.value=c.radius,a.setRenderTarget(c.map),a.clear(),a.renderBufferDirect(d,null,f,r,t,null)}function w(b,c,d,e,f,g){let h=null,i=!0===d.isPointLight?b.customDistanceMaterial:b.customDepthMaterial;if(h=void 0!==i?i:!0===d.isPointLight?l:k,a.localClippingEnabled&& !0===c.clipShadows&&Array.isArray(c.clippingPlanes)&&0!==c.clippingPlanes.length||c.displacementMap&&0!==c.displacementScale||c.alphaMap&&c.alphaTest>0){let j=h.uuid,n=c.uuid,p=m[j];void 0===p&&(p={},m[j]=p);let q=p[n];void 0===q&&(q=h.clone(),p[n]=q),h=q}return h.visible=c.visible,h.wireframe=c.wireframe,3===g?h.side=null!==c.shadowSide?c.shadowSide:c.side:h.side=null!==c.shadowSide?c.shadowSide:o[c.side],h.alphaMap=c.alphaMap,h.alphaTest=c.alphaTest,h.clipShadows=c.clipShadows,h.clippingPlanes=c.clippingPlanes,h.clipIntersection=c.clipIntersection,h.displacementMap=c.displacementMap,h.displacementScale=c.displacementScale,h.displacementBias=c.displacementBias,h.wireframeLinewidth=c.wireframeLinewidth,h.linewidth=c.linewidth,!0===d.isPointLight&& !0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(d.matrixWorld),h.nearDistance=e,h.farDistance=f),h}function x(c,e,f,g,h){if(!1===c.visible)return;let i=c.layers.test(e.layers);if(i&&(c.isMesh||c.isLine||c.isPoints)&&(c.castShadow||c.receiveShadow&&3===h)&&(!c.frustumCulled||d.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,c.matrixWorld);let j=b.update(c),k=c.material;if(Array.isArray(k)){let l=j.groups;for(let m=0,n=l.length;m<n;m++){let o=l[m],p=k[o.materialIndex];if(p&&p.visible){let q=w(c,p,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,q,c,o)}}}else if(k.visible){let r=w(c,k,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,r,c,null)}}let s=c.children;for(let t=0,u=s.length;t<u;t++)x(s[t],e,f,g,h)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(b,c,g){if(!1===u.enabled|| !1===u.autoUpdate&& !1===u.needsUpdate||0===b.length)return;let h=a.getRenderTarget(),i=a.getActiveCubeFace(),k=a.getActiveMipmapLevel(),l=a.state;l.setBlending(0),l.buffers.color.setClear(1,1,1,1),l.buffers.depth.setTest(!0),l.setScissorTest(!1);for(let m=0,o=b.length;m<o;m++){let p=b[m],r=p.shadow;if(void 0===r){console.warn("THREE.WebGLShadowMap:",p,"has no shadow.");continue}if(!1===r.autoUpdate&& !1===r.needsUpdate)continue;e.copy(r.mapSize);let s=r.getFrameExtents();if(e.multiply(s),f.copy(r.mapSize),(e.x>n||e.y>n)&&(e.x>n&&(f.x=Math.floor(n/s.x),e.x=f.x*s.x,r.mapSize.x=f.x),e.y>n&&(f.y=Math.floor(n/s.y),e.y=f.y*s.y,r.mapSize.y=f.y)),null===r.map){let t=3!==this.type?{minFilter:q,magFilter:q}:{};r.map=new aj(e.x,e.y,t),r.map.texture.name=p.name+".shadowMap",r.camera.updateProjectionMatrix()}a.setRenderTarget(r.map),a.clear();let w=r.getViewportCount();for(let y=0;y<w;y++){let z=r.getViewport(y);j.set(f.x*z.x,f.y*z.y,f.x*z.z,f.y*z.w),l.viewport(j),r.updateMatrices(p,y),d=r.getFrustum(),x(c,g,r.camera,p,this.type)}!0!==r.isPointLightShadow&&3===this.type&&v(r,g),r.needsUpdate=!1}u.needsUpdate=!1,a.setRenderTarget(h,i,k)}}function ei(a,b,c){let d=c.isWebGL2,e=new function(){let b=!1,c=new ai,d=null,e=new ai(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g),c.set(b,d,f,g),!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1,d=null,e.set(-1,0,0,0)}}},f=new function(){let b=!1,c=null,d=null,e=null;return{setTest:function(a){a?S(2929):T(2929)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){if(b)switch(b){case 0:a.depthFunc(512);break;case 1:a.depthFunc(519);break;case 2:a.depthFunc(513);break;case 3:default:a.depthFunc(515);break;case 4:a.depthFunc(514);break;case 5:a.depthFunc(518);break;case 6:a.depthFunc(516);break;case 7:a.depthFunc(517)}else a.depthFunc(515);d=b}},setLocked:function(a){b=a},setClear:function(b){e!==b&&(a.clearDepth(b),e=b)},reset:function(){b=!1,c=null,d=null,e=null}}},g=new function(){let b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null;return{setTest:function(a){b||(a?S(2960):T(2960))},setMask:function(d){c===d||b||(a.stencilMask(d),c=d)},setFunc:function(b,c,g){(d!==b||e!==c||f!==g)&&(a.stencilFunc(b,c,g),d=b,e=c,f=g)},setOp:function(b,c,d){(g!==b||h!==c||i!==d)&&(a.stencilOp(b,c,d),g=b,h=c,i=d)},setLocked:function(a){b=a},setClear:function(b){j!==b&&(a.clearStencil(b),j=b)},reset:function(){b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null}}},n={},o={},p=new WeakMap,q=[],r=null,s=!1,t=null,u=null,v=null,w=null,x=null,y=null,z=null,A=!1,B=null,C=null,D=null,E=null,F=null,G=a.getParameter(35661),H=!1,I=0,J=a.getParameter(7938);-1!==J.indexOf("WebGL")?H=parseFloat(/^WebGL (\d)/.exec(J)[1])>=1:-1!==J.indexOf("OpenGL ES")&&(H=parseFloat(/^OpenGL ES (\d)/.exec(J)[1])>=2);let K=null,L={},M=a.getParameter(3088),N=a.getParameter(2978),O=new ai().fromArray(M),P=new ai().fromArray(N);function Q(b,c,d){let e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f),a.texParameteri(b,10241,9728),a.texParameteri(b,10240,9728);for(let g=0;g<d;g++)a.texImage2D(c+g,0,6408,1,1,0,6408,5121,e);return f}let R={};function S(b){!0!==n[b]&&(a.enable(b),n[b]=!0)}function T(b){!1!==n[b]&&(a.disable(b),n[b]=!1)}R[3553]=Q(3553,3553,1),R[34067]=Q(34067,34069,6),e.setClear(0,0,0,1),f.setClear(1),g.setClear(0),S(2929),f.setFunc(3),Y(!1),Z(1),S(2884),X(0);let U={100:32774,101:32778,102:32779};if(d)U[103]=32775,U[104]=32776;else{let V=b.get("EXT_blend_minmax");null!==V&&(U[103]=V.MIN_EXT,U[104]=V.MAX_EXT)}let W={200:0,201:1,202:768,[k]:770,210:776,208:774,[m]:772,203:769,[l]:771,209:775,207:773};function X(b,c,d,e,f,g,h,i){if(0===b){!0===s&&(T(3042),s=!1);return}if(!1===s&&(S(3042),s=!0),b!==j){if(b!==t||i!==A){if((100!==u||100!==x)&&(a.blendEquation(32774),u=100,x=100),i)switch(b){case 1:a.blendFuncSeparate(1,771,1,771);break;case 2:a.blendFunc(1,1);break;case 3:a.blendFuncSeparate(0,769,0,1);break;case 4:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}else switch(b){case 1:a.blendFuncSeparate(770,771,1,771);break;case 2:a.blendFunc(770,1);break;case 3:a.blendFuncSeparate(0,769,0,1);break;case 4:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}v=null,w=null,y=null,z=null,t=b,A=i}return}f=f||c,g=g||d,h=h||e,(c!==u||f!==x)&&(a.blendEquationSeparate(U[c],U[f]),u=c,x=f),(d!==v||e!==w||g!==y||h!==z)&&(a.blendFuncSeparate(W[d],W[e],W[g],W[h]),v=d,w=e,y=g,z=h),t=b,A=null}function Y(b){B!==b&&(b?a.frontFace(2304):a.frontFace(2305),B=b)}function Z(b){0!==b?(S(2884),b!==C&&(1===b?a.cullFace(1029):2===b?a.cullFace(1028):a.cullFace(1032))):T(2884),C=b}function $(b,c,d){b?(S(32823),(E!==c||F!==d)&&(a.polygonOffset(c,d),E=c,F=d)):T(32823)}function _(b){void 0===b&&(b=33984+G-1),K!==b&&(a.activeTexture(b),K=b)}return{buffers:{color:e,depth:f,stencil:g},enable:S,disable:T,bindFramebuffer:function(b,c){return o[b]!==c&&(a.bindFramebuffer(b,c),o[b]=c,d&&(36009===b&&(o[36160]=c),36160===b&&(o[36009]=c)),!0)},drawBuffers:function(d,e){let f=q,g=!1;if(d){if(void 0===(f=p.get(e))&&(f=[],p.set(e,f)),d.isWebGLMultipleRenderTargets){let h=d.texture;if(f.length!==h.length||36064!==f[0]){for(let i=0,j=h.length;i<j;i++)f[i]=36064+i;f.length=h.length,g=!0}}else 36064!==f[0]&&(f[0]=36064,g=!0)}else 1029!==f[0]&&(f[0]=1029,g=!0);g&&(c.isWebGL2?a.drawBuffers(f):b.get("WEBGL_draw_buffers").drawBuffersWEBGL(f))},useProgram:function(b){return r!==b&&(a.useProgram(b),r=b,!0)},setBlending:X,setMaterial:function(a,b){a.side===i?T(2884):S(2884);let c=a.side===h;b&&(c=!c),Y(c),1===a.blending&& !1===a.transparent?X(0):X(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha),f.setFunc(a.depthFunc),f.setTest(a.depthTest),f.setMask(a.depthWrite),e.setMask(a.colorWrite);let d=a.stencilWrite;g.setTest(d),d&&(g.setMask(a.stencilWriteMask),g.setFunc(a.stencilFunc,a.stencilRef,a.stencilFuncMask),g.setOp(a.stencilFail,a.stencilZFail,a.stencilZPass)),$(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits),!0===a.alphaToCoverage?S(32926):T(32926)},setFlipSided:Y,setCullFace:Z,setLineWidth:function(b){b!==D&&(H&&a.lineWidth(b),D=b)},setPolygonOffset:$,setScissorTest:function(a){a?S(3089):T(3089)},activeTexture:_,bindTexture:function(b,c){null===K&&_();let d=L[K];void 0===d&&(d={type:void 0,texture:void 0},L[K]=d),(d.type!==b||d.texture!==c)&&(a.bindTexture(b,c||R[b]),d.type=b,d.texture=c)},unbindTexture:function(){let b=L[K];void 0!==b&& void 0!==b.type&&(a.bindTexture(b.type,null),b.type=void 0,b.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texStorage2D:function(){try{a.texStorage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texStorage3D:function(){try{a.texStorage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texSubImage2D:function(){try{a.texSubImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texSubImage3D:function(){try{a.texSubImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},compressedTexSubImage2D:function(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},scissor:function(b){!1===O.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),O.copy(b))},viewport:function(b){!1===P.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),P.copy(b))},reset:function(){a.disable(3042),a.disable(2884),a.disable(2929),a.disable(32823),a.disable(3089),a.disable(2960),a.disable(32926),a.blendEquation(32774),a.blendFunc(1,0),a.blendFuncSeparate(1,0,1,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(513),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(519,0,4294967295),a.stencilOp(7680,7680,7680),a.clearStencil(0),a.cullFace(1029),a.frontFace(2305),a.polygonOffset(0,0),a.activeTexture(33984),a.bindFramebuffer(36160,null),!0===d&&(a.bindFramebuffer(36009,null),a.bindFramebuffer(36008,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),n={},K=null,L={},o={},p=new WeakMap,q=[],r=null,s=!1,t=null,u=null,v=null,w=null,x=null,y=null,z=null,A=!1,B=null,C=null,D=null,E=null,F=null,O.set(0,0,a.canvas.width,a.canvas.height),P.set(0,0,a.canvas.width,a.canvas.height),e.reset(),f.reset(),g.reset()}}}function ej(a,b,c,d,e,f,g){let h=e.isWebGL2,i=e.maxTextures,j=e.maxCubemapSize,k=e.maxTextureSize,l=e.maxSamples,m=b.has("WEBGL_multisampled_render_to_texture")?b.get("WEBGL_multisampled_render_to_texture"):null,n=/OculusBrowser/g.test(navigator.userAgent),o=new WeakMap,t,u=new WeakMap,v=!1;try{v="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(w){}function x(a,b){return v?new OffscreenCanvas(a,b):S("canvas")}function y(a,b,c,d){let e=1;if((a.width>d||a.height>d)&&(e=d/Math.max(a.width,a.height)),e<1|| !0===b){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let f=b?M:Math.floor,g=f(e*a.width),h=f(e*a.height);void 0===t&&(t=x(g,h));let i=c?x(g,h):t;i.width=g,i.height=h;let j=i.getContext("2d");return j.drawImage(a,0,0,g,h),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+g+"x"+h+")."),i}"data"in a&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+").")}return a}function z(a){return L(a.width)&&L(a.height)}function A(a,b){return a.generateMipmaps&&b&&a.minFilter!==q&&1006!==a.minFilter}function B(b){a.generateMipmap(b)}function C(c,d,e,f,g=!1){if(!1===h)return d;if(null!==c){if(void 0!==a[c])return a[c];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+c+"'")}let i=d;return 6403===d&&(5126===e&&(i=33326),5131===e&&(i=33325),5121===e&&(i=33321)),33319===d&&(5126===e&&(i=33328),5131===e&&(i=33327),5121===e&&(i=33323)),6408===d&&(5126===e&&(i=34836),5131===e&&(i=34842),5121===e&&(i=3001===f&& !1===g?35907:32856),32819===e&&(i=32854),32820===e&&(i=32855)),(33325===i||33326===i||33327===i||33328===i||34842===i||34836===i)&&b.get("EXT_color_buffer_float"),i}function D(a,b,c){return!0===A(a,c)||a.isFramebufferTexture&&a.minFilter!==q&&1006!==a.minFilter?Math.log2(Math.max(b.width,b.height))+1:void 0!==a.mipmaps&&a.mipmaps.length>0?a.mipmaps.length:a.isCompressedTexture&&Array.isArray(a.image)?b.mipmaps.length:1}function E(a){return a===q||1004===a||1005===a?9728:9729}function F(a){let b=a.target;b.removeEventListener("dispose",F),H(b),b.isVideoTexture&&o.delete(b)}function G(a){let b=a.target;b.removeEventListener("dispose",G),J(b)}function H(a){let b=d.get(a);if(void 0===b.__webglInit)return;let c=a.source,e=u.get(c);if(e){let f=e[b.__cacheKey];f.usedTimes--,0===f.usedTimes&&I(a),0===Object.keys(e).length&&u.delete(c)}d.remove(a)}function I(b){let c=d.get(b);a.deleteTexture(c.__webglTexture);let e=b.source,f=u.get(e);delete f[c.__cacheKey],g.memory.textures--}function J(b){let c=b.texture,e=d.get(b),f=d.get(c);if(void 0!==f.__webglTexture&&(a.deleteTexture(f.__webglTexture),g.memory.textures--),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let h=0;h<6;h++)a.deleteFramebuffer(e.__webglFramebuffer[h]),e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer[h]);else{if(a.deleteFramebuffer(e.__webglFramebuffer),e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer),e.__webglMultisampledFramebuffer&&a.deleteFramebuffer(e.__webglMultisampledFramebuffer),e.__webglColorRenderbuffer)for(let i=0;i<e.__webglColorRenderbuffer.length;i++)e.__webglColorRenderbuffer[i]&&a.deleteRenderbuffer(e.__webglColorRenderbuffer[i]);e.__webglDepthRenderbuffer&&a.deleteRenderbuffer(e.__webglDepthRenderbuffer)}if(b.isWebGLMultipleRenderTargets)for(let j=0,k=c.length;j<k;j++){let l=d.get(c[j]);l.__webglTexture&&(a.deleteTexture(l.__webglTexture),g.memory.textures--),d.remove(c[j])}d.remove(c),d.remove(b)}let K=0;function N(a,b){let e=d.get(a);if(a.isVideoTexture&&Z(a),!1===a.isRenderTargetTexture&&a.version>0&&e.__version!==a.version){let f=a.image;if(null===f)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===f.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{T(e,a,b);return}}c.activeTexture(33984+b),c.bindTexture(3553,e.__webglTexture)}let O={[p]:10497,1001:33071,1002:33648},P={[q]:9728,1004:9984,1005:9986,1006:9729,1007:9985,[r]:9987};function Q(c,f,g){if(g?(a.texParameteri(c,10242,O[f.wrapS]),a.texParameteri(c,10243,O[f.wrapT]),(32879===c||35866===c)&&a.texParameteri(c,32882,O[f.wrapR]),a.texParameteri(c,10240,P[f.magFilter]),a.texParameteri(c,10241,P[f.minFilter])):(a.texParameteri(c,10242,33071),a.texParameteri(c,10243,33071),(32879===c||35866===c)&&a.texParameteri(c,32882,33071),(1001!==f.wrapS||1001!==f.wrapT)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(c,10240,E(f.magFilter)),a.texParameteri(c,10241,E(f.minFilter)),f.minFilter!==q&&1006!==f.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===b.has("EXT_texture_filter_anisotropic")){let i=b.get("EXT_texture_filter_anisotropic");(1015!==f.type|| !1!==b.has("OES_texture_float_linear"))&&(!1!==h||1016!==f.type|| !1!==b.has("OES_texture_half_float_linear"))&&(f.anisotropy>1||d.get(f).__currentAnisotropy)&&(a.texParameterf(c,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(f.anisotropy,e.getMaxAnisotropy())),d.get(f).__currentAnisotropy=f.anisotropy)}}function R(b,c){let d=!1;void 0===b.__webglInit&&(b.__webglInit=!0,c.addEventListener("dispose",F));let e=c.source,f=u.get(e);void 0===f&&(f={},u.set(e,f));let h=function(a){let b=[];return b.push(a.wrapS),b.push(a.wrapT),b.push(a.magFilter),b.push(a.minFilter),b.push(a.anisotropy),b.push(a.internalFormat),b.push(a.format),b.push(a.type),b.push(a.generateMipmaps),b.push(a.premultiplyAlpha),b.push(a.flipY),b.push(a.unpackAlignment),b.push(a.encoding),b.join()}(c);if(h!==b.__cacheKey){void 0===f[h]&&(f[h]={texture:a.createTexture(),usedTimes:0},g.memory.textures++,d=!0),f[h].usedTimes++;let i=f[b.__cacheKey];void 0!==i&&(f[b.__cacheKey].usedTimes--,0===i.usedTimes&&I(c)),b.__cacheKey=h,b.__webglTexture=f[h].texture}return d}function T(b,d,e){let g=3553;d.isDataArrayTexture&&(g=35866),d.isData3DTexture&&(g=32879);let i=R(b,d),j=d.source;if(c.activeTexture(33984+e),c.bindTexture(g,b.__webglTexture),j.version!==j.__currentVersion|| !0===i){var l;a.pixelStorei(37440,d.flipY),a.pixelStorei(37441,d.premultiplyAlpha),a.pixelStorei(3317,d.unpackAlignment),a.pixelStorei(37443,0);let m=(l=d,!h&&(1001!==l.wrapS||1001!==l.wrapT||l.minFilter!==q&&1006!==l.minFilter)&& !1===z(d.image)),n=y(d.image,m,!1,k);n=$(d,n);let o=z(n)||h,p=f.convert(d.format,d.encoding),r=f.convert(d.type),t=C(d.internalFormat,p,r,d.encoding,d.isVideoTexture);Q(g,d,o);let u,v=d.mipmaps,w=h&& !0!==d.isVideoTexture,x=void 0===j.__currentVersion|| !0===i,E=D(d,n,o);if(d.isDepthTexture)t=6402,h?t=1015===d.type?36012:1014===d.type?33190:1020===d.type?35056:33189:1015===d.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===d.format&&6402===t&&1012!==d.type&&1014!==d.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),d.type=1014,r=f.convert(d.type)),1027===d.format&&6402===t&&(t=34041,1020!==d.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),d.type=1020,r=f.convert(d.type))),x&&(w?c.texStorage2D(3553,1,t,n.width,n.height):c.texImage2D(3553,0,t,n.width,n.height,0,p,r,null));else if(d.isDataTexture){if(v.length>0&&o){w&&x&&c.texStorage2D(3553,E,t,v[0].width,v[0].height);for(let F=0,G=v.length;F<G;F++)u=v[F],w?c.texSubImage2D(3553,F,0,0,u.width,u.height,p,r,u.data):c.texImage2D(3553,F,t,u.width,u.height,0,p,r,u.data);d.generateMipmaps=!1}else w?(x&&c.texStorage2D(3553,E,t,n.width,n.height),c.texSubImage2D(3553,0,0,0,n.width,n.height,p,r,n.data)):c.texImage2D(3553,0,t,n.width,n.height,0,p,r,n.data)}else if(d.isCompressedTexture){w&&x&&c.texStorage2D(3553,E,t,v[0].width,v[0].height);for(let H=0,I=v.length;H<I;H++)u=v[H],d.format!==s?null!==p?w?c.compressedTexSubImage2D(3553,H,0,0,u.width,u.height,p,u.data):c.compressedTexImage2D(3553,H,t,u.width,u.height,0,u.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):w?c.texSubImage2D(3553,H,0,0,u.width,u.height,p,r,u.data):c.texImage2D(3553,H,t,u.width,u.height,0,p,r,u.data)}else if(d.isDataArrayTexture)w?(x&&c.texStorage3D(35866,E,t,n.width,n.height,n.depth),c.texSubImage3D(35866,0,0,0,0,n.width,n.height,n.depth,p,r,n.data)):c.texImage3D(35866,0,t,n.width,n.height,n.depth,0,p,r,n.data);else if(d.isData3DTexture)w?(x&&c.texStorage3D(32879,E,t,n.width,n.height,n.depth),c.texSubImage3D(32879,0,0,0,0,n.width,n.height,n.depth,p,r,n.data)):c.texImage3D(32879,0,t,n.width,n.height,n.depth,0,p,r,n.data);else if(d.isFramebufferTexture){if(x){if(w)c.texStorage2D(3553,E,t,n.width,n.height);else{let J=n.width,K=n.height;for(let L=0;L<E;L++)c.texImage2D(3553,L,t,J,K,0,p,r,null),J>>=1,K>>=1}}}else if(v.length>0&&o){w&&x&&c.texStorage2D(3553,E,t,v[0].width,v[0].height);for(let M=0,N=v.length;M<N;M++)u=v[M],w?c.texSubImage2D(3553,M,0,0,p,r,u):c.texImage2D(3553,M,t,p,r,u);d.generateMipmaps=!1}else w?(x&&c.texStorage2D(3553,E,t,n.width,n.height),c.texSubImage2D(3553,0,0,0,p,r,n)):c.texImage2D(3553,0,t,p,r,n);A(d,o)&&B(g),j.__currentVersion=j.version,d.onUpdate&&d.onUpdate(d)}b.__version=d.version}function U(b,e,g,h,i){let j=f.convert(g.format,g.encoding),k=f.convert(g.type),l=C(g.internalFormat,j,k,g.encoding),n=d.get(e);n.__hasExternalTextures||(32879===i||35866===i?c.texImage3D(i,0,l,e.width,e.height,e.depth,0,j,k,null):c.texImage2D(i,0,l,e.width,e.height,0,j,k,null)),c.bindFramebuffer(36160,b),Y(e)?m.framebufferTexture2DMultisampleEXT(36160,h,i,d.get(g).__webglTexture,0,X(e)):a.framebufferTexture2D(36160,h,i,d.get(g).__webglTexture,0),c.bindFramebuffer(36160,null)}function V(b,c,d){if(a.bindRenderbuffer(36161,b),c.depthBuffer&&!c.stencilBuffer){let e=33189;if(d||Y(c)){let g=c.depthTexture;g&&g.isDepthTexture&&(1015===g.type?e=36012:1014===g.type&&(e=33190));let h=X(c);Y(c)?m.renderbufferStorageMultisampleEXT(36161,h,e,c.width,c.height):a.renderbufferStorageMultisample(36161,h,e,c.width,c.height)}else a.renderbufferStorage(36161,e,c.width,c.height);a.framebufferRenderbuffer(36160,36096,36161,b)}else if(c.depthBuffer&&c.stencilBuffer){let i=X(c);d&& !1===Y(c)?a.renderbufferStorageMultisample(36161,i,35056,c.width,c.height):Y(c)?m.renderbufferStorageMultisampleEXT(36161,i,35056,c.width,c.height):a.renderbufferStorage(36161,34041,c.width,c.height),a.framebufferRenderbuffer(36160,33306,36161,b)}else{let j=!0===c.isWebGLMultipleRenderTargets?c.texture:[c.texture];for(let k=0;k<j.length;k++){let l=j[k],n=f.convert(l.format,l.encoding),o=f.convert(l.type),p=C(l.internalFormat,n,o,l.encoding),q=X(c);d&& !1===Y(c)?a.renderbufferStorageMultisample(36161,q,p,c.width,c.height):Y(c)?m.renderbufferStorageMultisampleEXT(36161,q,p,c.width,c.height):a.renderbufferStorage(36161,p,c.width,c.height)}}a.bindRenderbuffer(36161,null)}function W(b){let e=d.get(b),f=!0===b.isWebGLCubeRenderTarget;if(b.depthTexture&&!e.__autoAllocateDepthBuffer){if(f)throw Error("target.depthTexture not supported in Cube render targets");!function(b,e){let f=e&&e.isWebGLCubeRenderTarget;if(f)throw Error("Depth Texture with cube render targets is not supported");if(c.bindFramebuffer(36160,b),!(e.depthTexture&&e.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");d.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),N(e.depthTexture,0);let g=d.get(e.depthTexture).__webglTexture,h=X(e);if(1026===e.depthTexture.format)Y(e)?m.framebufferTexture2DMultisampleEXT(36160,36096,3553,g,0,h):a.framebufferTexture2D(36160,36096,3553,g,0);else if(1027===e.depthTexture.format)Y(e)?m.framebufferTexture2DMultisampleEXT(36160,33306,3553,g,0,h):a.framebufferTexture2D(36160,33306,3553,g,0);else throw Error("Unknown depthTexture format")}(e.__webglFramebuffer,b)}else if(f){e.__webglDepthbuffer=[];for(let g=0;g<6;g++)c.bindFramebuffer(36160,e.__webglFramebuffer[g]),e.__webglDepthbuffer[g]=a.createRenderbuffer(),V(e.__webglDepthbuffer[g],b,!1)}else c.bindFramebuffer(36160,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),V(e.__webglDepthbuffer,b,!1);c.bindFramebuffer(36160,null)}function X(a){return Math.min(l,a.samples)}function Y(a){let c=d.get(a);return h&&a.samples>0&& !0===b.has("WEBGL_multisampled_render_to_texture")&& !1!==c.__useRenderToTexture}function Z(a){let b=g.render.frame;o.get(a)!==b&&(o.set(a,b),a.update())}function $(a,c){let d=a.encoding,e=a.format,f=a.type;return!0===a.isCompressedTexture|| !0===a.isVideoTexture||1035===a.format||3e3!==d&&(3001===d?!1===h?!0===b.has("EXT_sRGB")&&e===s?(a.format=1035,a.minFilter=1006,a.generateMipmaps=!1):c=ad.sRGBToLinear(c):(e!==s||1009!==f)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",d)),c}this.allocateTextureUnit=function(){let a=K;return a>=i&&console.warn("THREE.WebGLTextures: Trying to use "+a+" texture units while this GPU supports only "+i),K+=1,a},this.resetTextureUnits=function(){K=0},this.setTexture2D=N,this.setTexture2DArray=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){T(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(35866,e.__webglTexture)},this.setTexture3D=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){T(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(32879,e.__webglTexture)},this.setTextureCube=function(b,e){let g=d.get(b);if(b.version>0&&g.__version!==b.version){(function b(d,e,g){if(6!==e.image.length)return;let i=R(d,e),k=e.source;if(c.activeTexture(33984+g),c.bindTexture(34067,d.__webglTexture),k.version!==k.__currentVersion|| !0===i){a.pixelStorei(37440,e.flipY),a.pixelStorei(37441,e.premultiplyAlpha),a.pixelStorei(3317,e.unpackAlignment),a.pixelStorei(37443,0);let l=e.isCompressedTexture||e.image[0].isCompressedTexture,m=e.image[0]&&e.image[0].isDataTexture,n=[];for(let o=0;o<6;o++)l||m?n[o]=m?e.image[o].image:e.image[o]:n[o]=y(e.image[o],!1,!0,j),n[o]=$(e,n[o]);let p=n[0],q=z(p)||h,r=f.convert(e.format,e.encoding),t=f.convert(e.type),u=C(e.internalFormat,r,t,e.encoding),v=h&& !0!==e.isVideoTexture,w=void 0===k.__currentVersion|| !0===i,x=D(e,p,q);Q(34067,e,q);let E;if(l){v&&w&&c.texStorage2D(34067,x,u,p.width,p.height);for(let F=0;F<6;F++){E=n[F].mipmaps;for(let G=0;G<E.length;G++){let H=E[G];e.format!==s?null!==r?v?c.compressedTexSubImage2D(34069+F,G,0,0,H.width,H.height,r,H.data):c.compressedTexImage2D(34069+F,G,u,H.width,H.height,0,H.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):v?c.texSubImage2D(34069+F,G,0,0,H.width,H.height,r,t,H.data):c.texImage2D(34069+F,G,u,H.width,H.height,0,r,t,H.data)}}}else{E=e.mipmaps,v&&w&&(E.length>0&&x++,c.texStorage2D(34067,x,u,n[0].width,n[0].height));for(let I=0;I<6;I++)if(m){v?c.texSubImage2D(34069+I,0,0,0,n[I].width,n[I].height,r,t,n[I].data):c.texImage2D(34069+I,0,u,n[I].width,n[I].height,0,r,t,n[I].data);for(let J=0;J<E.length;J++){let K=E[J],L=K.image[I].image;v?c.texSubImage2D(34069+I,J+1,0,0,L.width,L.height,r,t,L.data):c.texImage2D(34069+I,J+1,u,L.width,L.height,0,r,t,L.data)}}else{v?c.texSubImage2D(34069+I,0,0,0,r,t,n[I]):c.texImage2D(34069+I,0,u,r,t,n[I]);for(let M=0;M<E.length;M++){let N=E[M];v?c.texSubImage2D(34069+I,M+1,0,0,r,t,N.image[I]):c.texImage2D(34069+I,M+1,u,r,t,N.image[I])}}}A(e,q)&&B(34067),k.__currentVersion=k.version,e.onUpdate&&e.onUpdate(e)}d.__version=e.version})(g,b,e);return}c.activeTexture(33984+e),c.bindTexture(34067,g.__webglTexture)},this.rebindTextures=function(a,b,c){let e=d.get(a);void 0!==b&&U(e.__webglFramebuffer,a,a.texture,36064,3553),void 0!==c&&W(a)},this.setupRenderTarget=function(b){let i=b.texture,j=d.get(b),k=d.get(i);b.addEventListener("dispose",G),!0!==b.isWebGLMultipleRenderTargets&&(void 0===k.__webglTexture&&(k.__webglTexture=a.createTexture()),k.__version=i.version,g.memory.textures++);let l=!0===b.isWebGLCubeRenderTarget,m=!0===b.isWebGLMultipleRenderTargets,n=z(b)||h;if(l){j.__webglFramebuffer=[];for(let o=0;o<6;o++)j.__webglFramebuffer[o]=a.createFramebuffer()}else{if(j.__webglFramebuffer=a.createFramebuffer(),m){if(e.drawBuffers){let p=b.texture;for(let q=0,r=p.length;q<r;q++){let s=d.get(p[q]);void 0===s.__webglTexture&&(s.__webglTexture=a.createTexture(),g.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}if(h&&b.samples>0&& !1===Y(b)){let t=m?i:[i];j.__webglMultisampledFramebuffer=a.createFramebuffer(),j.__webglColorRenderbuffer=[],c.bindFramebuffer(36160,j.__webglMultisampledFramebuffer);for(let u=0;u<t.length;u++){let v=t[u];j.__webglColorRenderbuffer[u]=a.createRenderbuffer(),a.bindRenderbuffer(36161,j.__webglColorRenderbuffer[u]);let w=f.convert(v.format,v.encoding),x=f.convert(v.type),y=C(v.internalFormat,w,x,v.encoding),D=X(b);a.renderbufferStorageMultisample(36161,D,y,b.width,b.height),a.framebufferRenderbuffer(36160,36064+u,36161,j.__webglColorRenderbuffer[u])}a.bindRenderbuffer(36161,null),b.depthBuffer&&(j.__webglDepthRenderbuffer=a.createRenderbuffer(),V(j.__webglDepthRenderbuffer,b,!0)),c.bindFramebuffer(36160,null)}}if(l){c.bindTexture(34067,k.__webglTexture),Q(34067,i,n);for(let E=0;E<6;E++)U(j.__webglFramebuffer[E],b,i,36064,34069+E);A(i,n)&&B(34067),c.unbindTexture()}else if(m){let F=b.texture;for(let H=0,I=F.length;H<I;H++){let J=F[H],K=d.get(J);c.bindTexture(3553,K.__webglTexture),Q(3553,J,n),U(j.__webglFramebuffer,b,J,36064+H,3553),A(J,n)&&B(3553)}c.unbindTexture()}else{let L=3553;(b.isWebGL3DRenderTarget||b.isWebGLArrayRenderTarget)&&(h?L=b.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),c.bindTexture(L,k.__webglTexture),Q(L,i,n),U(j.__webglFramebuffer,b,i,36064,L),A(i,n)&&B(L),c.unbindTexture()}b.depthBuffer&&W(b)},this.updateRenderTargetMipmap=function(a){let b=z(a)||h,e=!0===a.isWebGLMultipleRenderTargets?a.texture:[a.texture];for(let f=0,g=e.length;f<g;f++){let i=e[f];if(A(i,b)){let j=a.isWebGLCubeRenderTarget?34067:3553,k=d.get(i).__webglTexture;c.bindTexture(j,k),B(j),c.unbindTexture()}}},this.updateMultisampleRenderTarget=function(b){if(h&&b.samples>0&& !1===Y(b)){let e=b.isWebGLMultipleRenderTargets?b.texture:[b.texture],f=b.width,g=b.height,i=16384,j=[],k=b.stencilBuffer?33306:36096,l=d.get(b),m=!0===b.isWebGLMultipleRenderTargets;if(m)for(let o=0;o<e.length;o++)c.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064+o,36161,null),c.bindFramebuffer(36160,l.__webglFramebuffer),a.framebufferTexture2D(36009,36064+o,3553,null,0);c.bindFramebuffer(36008,l.__webglMultisampledFramebuffer),c.bindFramebuffer(36009,l.__webglFramebuffer);for(let p=0;p<e.length;p++){j.push(36064+p),b.depthBuffer&&j.push(k);let q=void 0!==l.__ignoreDepthValues&&l.__ignoreDepthValues;if(!1===q&&(b.depthBuffer&&(i|=256),b.stencilBuffer&&(i|=1024)),m&&a.framebufferRenderbuffer(36008,36064,36161,l.__webglColorRenderbuffer[p]),!0===q&&(a.invalidateFramebuffer(36008,[k]),a.invalidateFramebuffer(36009,[k])),m){let r=d.get(e[p]).__webglTexture;a.framebufferTexture2D(36009,36064,3553,r,0)}a.blitFramebuffer(0,0,f,g,0,0,f,g,i,9728),n&&a.invalidateFramebuffer(36008,j)}if(c.bindFramebuffer(36008,null),c.bindFramebuffer(36009,null),m)for(let s=0;s<e.length;s++){c.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064+s,36161,l.__webglColorRenderbuffer[s]);let t=d.get(e[s]).__webglTexture;c.bindFramebuffer(36160,l.__webglFramebuffer),a.framebufferTexture2D(36009,36064+s,3553,t,0)}c.bindFramebuffer(36009,l.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=W,this.setupFrameBufferTexture=U,this.useMultisampledRTT=Y}function ek(a,b,c){let d=c.isWebGL2;return{convert:function(c,e=null){let f;if(1009===c)return 5121;if(1017===c)return 32819;if(1018===c)return 32820;if(1010===c)return 5120;if(1011===c)return 5122;if(1012===c)return 5123;if(1013===c)return 5124;if(1014===c)return 5125;if(1015===c)return 5126;if(1016===c)return d?5131:null!==(f=b.get("OES_texture_half_float"))?f.HALF_FLOAT_OES:null;if(1021===c)return 6406;if(c===s)return 6408;if(1024===c)return 6409;if(1025===c)return 6410;if(1026===c)return 6402;if(1027===c)return 34041;if(1028===c)return 6403;if(1022===c)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(1035===c)return null!==(f=b.get("EXT_sRGB"))?f.SRGB_ALPHA_EXT:null;if(1029===c)return 36244;if(1030===c)return 33319;if(1031===c)return 33320;if(1033===c)return 36249;if(c===t||33777===c||c===u||c===v){if(3001===e){if(null===(f=b.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(c===t)return f.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===c)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(c===u)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(c===v)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(f=b.get("WEBGL_compressed_texture_s3tc")))return null;if(c===t)return f.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===c)return f.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(c===u)return f.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(c===v)return f.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(c===w||c===x||35842===c||35843===c){if(null===(f=b.get("WEBGL_compressed_texture_pvrtc")))return null;if(c===w)return f.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(c===x)return f.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===c)return f.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===c)return f.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(c===y)return null!==(f=b.get("WEBGL_compressed_texture_etc1"))?f.COMPRESSED_RGB_ETC1_WEBGL:null;if(c===z||37496===c){if(null===(f=b.get("WEBGL_compressed_texture_etc")))return null;if(c===z)return 3001===e?f.COMPRESSED_SRGB8_ETC2:f.COMPRESSED_RGB8_ETC2;if(37496===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:f.COMPRESSED_RGBA8_ETC2_EAC}if(37808===c||37809===c||37810===c||37811===c||37812===c||37813===c||37814===c||37815===c||37816===c||37817===c||37818===c||37819===c||37820===c||37821===c){if(null===(f=b.get("WEBGL_compressed_texture_astc")))return null;if(37808===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:f.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:f.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:f.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:f.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:f.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:f.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:f.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:f.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:f.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:f.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:f.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:f.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:f.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===c)return 3001===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:f.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===c){if(null===(f=b.get("EXT_texture_compression_bptc")))return null;if(36492===c)return 3001===e?f.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:f.COMPRESSED_RGBA_BPTC_UNORM_EXT}return 1020===c?d?34042:null!==(f=b.get("WEBGL_depth_texture"))?f.UNSIGNED_INT_24_8_WEBGL:null:void 0!==a[c]?a[c]:null}}}class el extends be{constructor(){super(),this.isGroup=!0,this.type="Group"}}let em={type:"move"};class en{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new el,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new el,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new am,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new am),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new el,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new am,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new am),this._grip}dispatchEvent(a){return null!==this._targetRay&&this._targetRay.dispatchEvent(a),null!==this._grip&&this._grip.dispatchEvent(a),null!==this._hand&&this._hand.dispatchEvent(a),this}disconnect(a){return this.dispatchEvent({type:"disconnected",data:a}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(a,b,c){let d=null,e=null,f=null,g=this._targetRay,h=this._grip,i=this._hand;if(a&&"visible-blurred"!==b.session.visibilityState){if(i&&a.hand){for(let j of(f=!0,a.hand.values())){let k=b.getJointPose(j,c);if(void 0===i.joints[j.jointName]){let l=new el;l.matrixAutoUpdate=!1,l.visible=!1,i.joints[j.jointName]=l,i.add(l)}let m=i.joints[j.jointName];null!==k&&(m.matrix.fromArray(k.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=k.radius),m.visible=null!==k}let n=i.joints["index-finger-tip"],o=i.joints["thumb-tip"],p=n.position.distanceTo(o.position),q=.02,r=.005;i.inputState.pinching&&p>q+r?(i.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:a.handedness,target:this})):!i.inputState.pinching&&p<=q-r&&(i.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:a.handedness,target:this}))}else null!==h&&a.gripSpace&&null!==(e=b.getPose(a.gripSpace,c))&&(h.matrix.fromArray(e.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),e.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(e.linearVelocity)):h.hasLinearVelocity=!1,e.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(e.angularVelocity)):h.hasAngularVelocity=!1);null!==g&&(null===(d=b.getPose(a.targetRaySpace,c))&&null!==e&&(d=e),null!==d&&(g.matrix.fromArray(d.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),d.linearVelocity?(g.hasLinearVelocity=!0,g.linearVelocity.copy(d.linearVelocity)):g.hasLinearVelocity=!1,d.angularVelocity?(g.hasAngularVelocity=!0,g.angularVelocity.copy(d.angularVelocity)):g.hasAngularVelocity=!1,this.dispatchEvent(em)))}return null!==g&&(g.visible=null!==d),null!==h&&(h.visible=null!==e),null!==i&&(i.visible=null!==f),this}}class eo extends ah{constructor(a,b,c,d,e,f,g,h,i,j){if(1026!==(j=void 0!==j?j:1026)&&1027!==j)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&1026===j&&(c=1014),void 0===c&&1027===j&&(c=1020),super(null,d,e,f,g,h,j,c,i),this.isDepthTexture=!0,this.image={width:a,height:b},this.magFilter=void 0!==g?g:q,this.minFilter=void 0!==h?h:q,this.flipY=!1,this.generateMipmaps=!1}}class ep extends E{constructor(a,b){super();let c=this,d=null,e=1,f=null,g="local-floor",h=null,i=null,j=null,k=null,l=null,m=null,n=b.getContextAttributes(),o=null,p=null,q=[],r=[],t=new b4;t.layers.enable(1),t.viewport=new ai;let u=new b4;u.layers.enable(2),u.viewport=new ai;let v=[t,u],w=new class extends b4{constructor(a=[]){super(),this.isArrayCamera=!0,this.cameras=a}};w.layers.enable(1),w.layers.enable(2);let x=null,y=null;function z(a){let b=r.indexOf(a.inputSource);if(-1===b)return;let c=q[b];void 0!==c&&c.dispatchEvent({type:a.type,data:a.inputSource})}function A(){d.removeEventListener("select",z),d.removeEventListener("selectstart",z),d.removeEventListener("selectend",z),d.removeEventListener("squeeze",z),d.removeEventListener("squeezestart",z),d.removeEventListener("squeezeend",z),d.removeEventListener("end",A),d.removeEventListener("inputsourceschange",B);for(let b=0;b<q.length;b++){let e=r[b];null!==e&&(r[b]=null,q[b].disconnect(e))}x=null,y=null,a.setRenderTarget(o),l=null,k=null,j=null,d=null,p=null,G.stop(),c.isPresenting=!1,c.dispatchEvent({type:"sessionend"})}function B(a){for(let b=0;b<a.removed.length;b++){let c=a.removed[b],d=r.indexOf(c);d>=0&&(r[d]=null,q[d].dispatchEvent({type:"disconnected",data:c}))}for(let e=0;e<a.added.length;e++){let f=a.added[e],g=r.indexOf(f);if(-1===g){for(let h=0;h<q.length;h++){if(h>=r.length){r.push(f),g=h;break}if(null===r[h]){r[h]=f,g=h;break}}if(-1===g)break}let i=q[g];i&&i.dispatchEvent({type:"connected",data:f})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(a){let b=q[a];return void 0===b&&(b=new en,q[a]=b),b.getTargetRaySpace()},this.getControllerGrip=function(a){let b=q[a];return void 0===b&&(b=new en,q[a]=b),b.getGripSpace()},this.getHand=function(a){let b=q[a];return void 0===b&&(b=new en,q[a]=b),b.getHandSpace()},this.setFramebufferScaleFactor=function(a){e=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(a){g=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||f},this.setReferenceSpace=function(a){h=a},this.getBaseLayer=function(){return null!==k?k:l},this.getBinding=function(){return j},this.getFrame=function(){return m},this.getSession=function(){return d},this.setSession=async function(i){if(null!==(d=i)){if(o=a.getRenderTarget(),d.addEventListener("select",z),d.addEventListener("selectstart",z),d.addEventListener("selectend",z),d.addEventListener("squeeze",z),d.addEventListener("squeezestart",z),d.addEventListener("squeezeend",z),d.addEventListener("end",A),d.addEventListener("inputsourceschange",B),!0!==n.xrCompatible&&await b.makeXRCompatible(),void 0===d.renderState.layers|| !1===a.capabilities.isWebGL2){let m={antialias:void 0!==d.renderState.layers||n.antialias,alpha:n.alpha,depth:n.depth,stencil:n.stencil,framebufferScaleFactor:e};l=new XRWebGLLayer(d,b,m),d.updateRenderState({baseLayer:l}),p=new aj(l.framebufferWidth,l.framebufferHeight,{format:s,type:1009,encoding:a.outputEncoding})}else{let q=null,r=null,t=null;n.depth&&(t=n.stencil?35056:33190,q=n.stencil?1027:1026,r=n.stencil?1020:1014);let u={colorFormat:32856,depthFormat:t,scaleFactor:e};k=(j=new XRWebGLBinding(d,b)).createProjectionLayer(u),d.updateRenderState({layers:[k]}),p=new aj(k.textureWidth,k.textureHeight,{format:s,type:1009,depthTexture:new eo(k.textureWidth,k.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,q),stencilBuffer:n.stencil,encoding:a.outputEncoding,samples:n.antialias?4:0});let v=a.properties.get(p);v.__ignoreDepthValues=k.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),h=null,f=await d.requestReferenceSpace(g),G.setContext(d),G.start(),c.isPresenting=!0,c.dispatchEvent({type:"sessionstart"})}};let C=new am,D=new am;function E(a,b){null===b?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(b.matrixWorld,a.matrix),a.matrixWorldInverse.copy(a.matrixWorld).invert()}this.updateCamera=function(a){if(null===d)return;w.near=u.near=t.near=a.near,w.far=u.far=t.far=a.far,(x!==w.near||y!==w.far)&&(d.updateRenderState({depthNear:w.near,depthFar:w.far}),x=w.near,y=w.far);let b=a.parent,c=w.cameras;E(w,b);for(let e=0;e<c.length;e++)E(c[e],b);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),a.position.copy(w.position),a.quaternion.copy(w.quaternion),a.scale.copy(w.scale),a.matrix.copy(w.matrix),a.matrixWorld.copy(w.matrixWorld);let f=a.children;for(let g=0,h=f.length;g<h;g++)f[g].updateMatrixWorld(!0);2===c.length?function(a,b,c){C.setFromMatrixPosition(b.matrixWorld),D.setFromMatrixPosition(c.matrixWorld);let d=C.distanceTo(D),e=b.projectionMatrix.elements,f=c.projectionMatrix.elements,g=e[14]/(e[10]-1),h=e[14]/(e[10]+1),i=(e[9]+1)/e[5],j=(e[9]-1)/e[5],k=(e[8]-1)/e[0],l=(f[8]+1)/f[0],m=d/(-k+l),n=-(m*k);b.matrixWorld.decompose(a.position,a.quaternion,a.scale),a.translateX(n),a.translateZ(m),a.matrixWorld.compose(a.position,a.quaternion,a.scale),a.matrixWorldInverse.copy(a.matrixWorld).invert();let o=g+m,p=h+m;a.projectionMatrix.makePerspective(g*k-n,g*l+(d-n),i*h/p*o,j*h/p*o,o,p)}(w,t,u):w.projectionMatrix.copy(t.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){return null!==k?k.fixedFoveation:null!==l?l.fixedFoveation:void 0},this.setFoveation=function(a){null!==k&&(k.fixedFoveation=a),null!==l&& void 0!==l.fixedFoveation&&(l.fixedFoveation=a)};let F=null,G=new cf;G.setAnimationLoop(function(b,c){if(i=c.getViewerPose(h||f),m=c,null!==i){let d=i.views;null!==l&&(a.setRenderTargetFramebuffer(p,l.framebuffer),a.setRenderTarget(p));let e=!1;d.length!==w.cameras.length&&(w.cameras.length=0,e=!0);for(let g=0;g<d.length;g++){let n=d[g],o=null;if(null!==l)o=l.getViewport(n);else{let s=j.getViewSubImage(k,n);o=s.viewport,0===g&&(a.setRenderTargetTextures(p,s.colorTexture,k.ignoreDepthValues?void 0:s.depthStencilTexture),a.setRenderTarget(p))}let t=v[g];void 0===t&&((t=new b4).layers.enable(g),t.viewport=new ai,v[g]=t),t.matrix.fromArray(n.transform.matrix),t.projectionMatrix.fromArray(n.projectionMatrix),t.viewport.set(o.x,o.y,o.width,o.height),0===g&&w.matrix.copy(t.matrix),!0===e&&w.cameras.push(t)}}for(let u=0;u<q.length;u++){let x=r[u],y=q[u];null!==x&& void 0!==y&&y.update(x,c,h||f)}F&&F(b,c),m=null}),this.setAnimationLoop=function(a){F=a},this.dispose=function(){}}}function eq(a,b){function c(c,d){c.opacity.value=d.opacity,d.color&&c.diffuse.value.copy(d.color),d.emissive&&c.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(c.map.value=d.map),d.alphaMap&&(c.alphaMap.value=d.alphaMap),d.bumpMap&&(c.bumpMap.value=d.bumpMap,c.bumpScale.value=d.bumpScale,d.side===h&&(c.bumpScale.value*=-1)),d.displacementMap&&(c.displacementMap.value=d.displacementMap,c.displacementScale.value=d.displacementScale,c.displacementBias.value=d.displacementBias),d.emissiveMap&&(c.emissiveMap.value=d.emissiveMap),d.normalMap&&(c.normalMap.value=d.normalMap,c.normalScale.value.copy(d.normalScale),d.side===h&&c.normalScale.value.negate()),d.specularMap&&(c.specularMap.value=d.specularMap),d.alphaTest>0&&(c.alphaTest.value=d.alphaTest);let e=b.get(d).envMap;if(e&&(c.envMap.value=e,c.flipEnvMap.value=e.isCubeTexture&& !1===e.isRenderTargetTexture?-1:1,c.reflectivity.value=d.reflectivity,c.ior.value=d.ior,c.refractionRatio.value=d.refractionRatio),d.lightMap){c.lightMap.value=d.lightMap;let f=!0!==a.physicallyCorrectLights?Math.PI:1;c.lightMapIntensity.value=d.lightMapIntensity*f}d.aoMap&&(c.aoMap.value=d.aoMap,c.aoMapIntensity.value=d.aoMapIntensity);let g;d.map?g=d.map:d.specularMap?g=d.specularMap:d.displacementMap?g=d.displacementMap:d.normalMap?g=d.normalMap:d.bumpMap?g=d.bumpMap:d.roughnessMap?g=d.roughnessMap:d.metalnessMap?g=d.metalnessMap:d.alphaMap?g=d.alphaMap:d.emissiveMap?g=d.emissiveMap:d.clearcoatMap?g=d.clearcoatMap:d.clearcoatNormalMap?g=d.clearcoatNormalMap:d.clearcoatRoughnessMap?g=d.clearcoatRoughnessMap:d.iridescenceMap?g=d.iridescenceMap:d.iridescenceThicknessMap?g=d.iridescenceThicknessMap:d.specularIntensityMap?g=d.specularIntensityMap:d.specularColorMap?g=d.specularColorMap:d.transmissionMap?g=d.transmissionMap:d.thicknessMap?g=d.thicknessMap:d.sheenColorMap?g=d.sheenColorMap:d.sheenRoughnessMap&&(g=d.sheenRoughnessMap),void 0!==g&&(g.isWebGLRenderTarget&&(g=g.texture),!0===g.matrixAutoUpdate&&g.updateMatrix(),c.uvTransform.value.copy(g.matrix));let i;d.aoMap?i=d.aoMap:d.lightMap&&(i=d.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),c.uv2Transform.value.copy(i.matrix))}return{refreshFogUniforms:function(a,b){a.fogColor.value.copy(b.color),b.isFog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b.isFogExp2&&(a.fogDensity.value=b.density)},refreshMaterialUniforms:function(a,d,e,f,g){var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;let D,E;d.isMeshBasicMaterial?c(a,d):d.isMeshLambertMaterial?c(a,d):d.isMeshToonMaterial?(c(a,d),i=a,(j=d).gradientMap&&(i.gradientMap.value=j.gradientMap)):d.isMeshPhongMaterial?(c(a,d),k=a,l=d,k.specular.value.copy(l.specular),k.shininess.value=Math.max(l.shininess,1e-4)):d.isMeshStandardMaterial?(c(a,d),function a(c,d){c.roughness.value=d.roughness,c.metalness.value=d.metalness,d.roughnessMap&&(c.roughnessMap.value=d.roughnessMap),d.metalnessMap&&(c.metalnessMap.value=d.metalnessMap);let e=b.get(d).envMap;e&&(c.envMapIntensity.value=d.envMapIntensity)}(a,d),d.isMeshPhysicalMaterial&&(m=a,n=d,o=g,m.ior.value=n.ior,n.sheen>0&&(m.sheenColor.value.copy(n.sheenColor).multiplyScalar(n.sheen),m.sheenRoughness.value=n.sheenRoughness,n.sheenColorMap&&(m.sheenColorMap.value=n.sheenColorMap),n.sheenRoughnessMap&&(m.sheenRoughnessMap.value=n.sheenRoughnessMap)),n.clearcoat>0&&(m.clearcoat.value=n.clearcoat,m.clearcoatRoughness.value=n.clearcoatRoughness,n.clearcoatMap&&(m.clearcoatMap.value=n.clearcoatMap),n.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=n.clearcoatRoughnessMap),n.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(n.clearcoatNormalScale),m.clearcoatNormalMap.value=n.clearcoatNormalMap,n.side===h&&m.clearcoatNormalScale.value.negate())),n.iridescence>0&&(m.iridescence.value=n.iridescence,m.iridescenceIOR.value=n.iridescenceIOR,m.iridescenceThicknessMinimum.value=n.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=n.iridescenceThicknessRange[1],n.iridescenceMap&&(m.iridescenceMap.value=n.iridescenceMap),n.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=n.iridescenceThicknessMap)),n.transmission>0&&(m.transmission.value=n.transmission,m.transmissionSamplerMap.value=o.texture,m.transmissionSamplerSize.value.set(o.width,o.height),n.transmissionMap&&(m.transmissionMap.value=n.transmissionMap),m.thickness.value=n.thickness,n.thicknessMap&&(m.thicknessMap.value=n.thicknessMap),m.attenuationDistance.value=n.attenuationDistance,m.attenuationColor.value.copy(n.attenuationColor)),m.specularIntensity.value=n.specularIntensity,m.specularColor.value.copy(n.specularColor),n.specularIntensityMap&&(m.specularIntensityMap.value=n.specularIntensityMap),n.specularColorMap&&(m.specularColorMap.value=n.specularColorMap))):d.isMeshMatcapMaterial?(c(a,d),p=a,(q=d).matcap&&(p.matcap.value=q.matcap)):d.isMeshDepthMaterial?c(a,d):d.isMeshDistanceMaterial?(c(a,d),r=a,s=d,r.referencePosition.value.copy(s.referencePosition),r.nearDistance.value=s.nearDistance,r.farDistance.value=s.farDistance):d.isMeshNormalMaterial?c(a,d):d.isLineBasicMaterial?(t=a,u=d,t.diffuse.value.copy(u.color),t.opacity.value=u.opacity,d.isLineDashedMaterial&&(v=a,w=d,v.dashSize.value=w.dashSize,v.totalSize.value=w.dashSize+w.gapSize,v.scale.value=w.scale)):d.isPointsMaterial?(x=a,y=d,z=e,A=f,x.diffuse.value.copy(y.color),x.opacity.value=y.opacity,x.size.value=y.size*z,x.scale.value=.5*A,y.map&&(x.map.value=y.map),y.alphaMap&&(x.alphaMap.value=y.alphaMap),y.alphaTest>0&&(x.alphaTest.value=y.alphaTest),y.map?D=y.map:y.alphaMap&&(D=y.alphaMap),void 0!==D&&(!0===D.matrixAutoUpdate&&D.updateMatrix(),x.uvTransform.value.copy(D.matrix))):d.isSpriteMaterial?(B=a,C=d,B.diffuse.value.copy(C.color),B.opacity.value=C.opacity,B.rotation.value=C.rotation,C.map&&(B.map.value=C.map),C.alphaMap&&(B.alphaMap.value=C.alphaMap),C.alphaTest>0&&(B.alphaTest.value=C.alphaTest),C.map?E=C.map:C.alphaMap&&(E=C.alphaMap),void 0!==E&&(!0===E.matrixAutoUpdate&&E.updateMatrix(),B.uvTransform.value.copy(E.matrix))):d.isShadowMaterial?(a.color.value.copy(d.color),a.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}}}function er(a={}){this.isWebGLRenderer=!0;let b=void 0!==a.canvas?a.canvas:function(){let a=S("canvas");return a.style.display="block",a}(),c=void 0!==a.context?a.context:null,d=void 0===a.depth||a.depth,e=void 0===a.stencil||a.stencil,f=void 0!==a.antialias&&a.antialias,j=void 0===a.premultipliedAlpha||a.premultipliedAlpha,k=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,l=void 0!==a.powerPreference?a.powerPreference:"default",m=void 0!==a.failIfMajorPerformanceCaveat&&a.failIfMajorPerformanceCaveat,n;n=null!==c?c.getContextAttributes().alpha:void 0!==a.alpha&&a.alpha;let o=null,p=null,q=[],t=[];this.domElement=b,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});let u=this,v=!1,w=0,x=0,y=null,z=-1,A=null,B=new ai,C=new ai,D=null,E=b.width,F=b.height,G=1,H=null,I=null,J=new ai(0,0,E,F),K=new ai(0,0,E,F),L=!1,O=new ce,P=!1,Q=!1,R=null,T=new aR,U=new N,V=new am,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===y?G:1}let Y=c;function Z(a,c){for(let d=0;d<a.length;d++){let e=a[d],f=b.getContext(e,c);if(null!==f)return f}return null}try{let $={alpha:!0,depth:d,stencil:e,antialias:f,premultipliedAlpha:j,preserveDrawingBuffer:k,powerPreference:l,failIfMajorPerformanceCaveat:m};if("setAttribute"in b&&b.setAttribute("data-engine","three.js r142"),b.addEventListener("webglcontextlost",aD,!1),b.addEventListener("webglcontextrestored",aE,!1),b.addEventListener("webglcontextcreationerror",aF,!1),null===Y){let _=["webgl2","webgl","experimental-webgl"];if(!0===u.isWebGL1Renderer&&_.shift(),Y=Z(_,$),null===Y){if(Z(_))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===Y.getShaderPrecisionFormat&&(Y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(aa){throw console.error("THREE.WebGLRenderer: "+aa.message),aa}let ab,ac,ad,ae,af,ag,ah,ak,al,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA;function aB(){ab=new cI(Y),ac=new co(Y,ab,a),ab.init(ac),az=new ek(Y,ab,ac),ad=new ei(Y,ab,ac),ae=new cL,af=new d4,ag=new ej(Y,ab,ad,af,ac,az,ae),ah=new cq(u),ak=new cH(u),al=new cg(Y,ac),aA=new cm(Y,ab,al,ac),an=new cJ(Y,al,ae,aA),ao=new cQ(Y,an,al,ae),aw=new cP(Y,ac,ag),at=new cp(af),ap=new d3(u,ah,ak,ab,ac,aA,at),aq=new eq(u,af),ar=new d8,as=new ee(ab,ac),av=new cl(u,ah,ad,ao,n,j),au=new eh(u,ao,ac),ax=new cn(Y,ab,ae,ac),ay=new cK(Y,ab,ae,ac),ae.programs=ap.programs,u.capabilities=ac,u.extensions=ab,u.properties=af,u.renderLists=ar,u.shadowMap=au,u.state=ad,u.info=ae}aB();let aC=new ep(u,Y);function aD(a){a.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function aE(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;let a=ae.autoReset,b=au.enabled,c=au.autoUpdate,d=au.needsUpdate,e=au.type;aB(),ae.autoReset=a,au.enabled=b,au.autoUpdate=c,au.needsUpdate=d,au.type=e}function aF(a){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",a.statusMessage)}function aG(a){let b=a.target;b.removeEventListener("dispose",aG),aH(b)}function aH(a){aI(a),af.remove(a)}function aI(a){let b=af.get(a).programs;void 0!==b&&(b.forEach(function(a){ap.releaseProgram(a)}),a.isShaderMaterial&&ap.releaseShaderCache(a))}this.xr=aC,this.getContext=function(){return Y},this.getContextAttributes=function(){return Y.getContextAttributes()},this.forceContextLoss=function(){let a=ab.get("WEBGL_lose_context");a&&a.loseContext()},this.forceContextRestore=function(){let a=ab.get("WEBGL_lose_context");a&&a.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(a){void 0!==a&&(G=a,this.setSize(E,F,!1))},this.getSize=function(a){return a.set(E,F)},this.setSize=function(a,c,d){if(aC.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}E=a,F=c,b.width=Math.floor(a*G),b.height=Math.floor(c*G),!1!==d&&(b.style.width=a+"px",b.style.height=c+"px"),this.setViewport(0,0,a,c)},this.getDrawingBufferSize=function(a){return a.set(E*G,F*G).floor()},this.setDrawingBufferSize=function(a,c,d){E=a,F=c,G=d,b.width=Math.floor(a*d),b.height=Math.floor(c*d),this.setViewport(0,0,a,c)},this.getCurrentViewport=function(a){return a.copy(B)},this.getViewport=function(a){return a.copy(J)},this.setViewport=function(a,b,c,d){a.isVector4?J.set(a.x,a.y,a.z,a.w):J.set(a,b,c,d),ad.viewport(B.copy(J).multiplyScalar(G).floor())},this.getScissor=function(a){return a.copy(K)},this.setScissor=function(a,b,c,d){a.isVector4?K.set(a.x,a.y,a.z,a.w):K.set(a,b,c,d),ad.scissor(C.copy(K).multiplyScalar(G).floor())},this.getScissorTest=function(){return L},this.setScissorTest=function(a){ad.setScissorTest(L=a)},this.setOpaqueSort=function(a){H=a},this.setTransparentSort=function(a){I=a},this.getClearColor=function(a){return a.copy(av.getClearColor())},this.setClearColor=function(){av.setClearColor.apply(av,arguments)},this.getClearAlpha=function(){return av.getClearAlpha()},this.setClearAlpha=function(){av.setClearAlpha.apply(av,arguments)},this.clear=function(a=!0,b=!0,c=!0){let d=0;a&&(d|=16384),b&&(d|=256),c&&(d|=1024),Y.clear(d)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){b.removeEventListener("webglcontextlost",aD,!1),b.removeEventListener("webglcontextrestored",aE,!1),b.removeEventListener("webglcontextcreationerror",aF,!1),ar.dispose(),as.dispose(),af.dispose(),ah.dispose(),ak.dispose(),ao.dispose(),aA.dispose(),ap.dispose(),aC.dispose(),aC.removeEventListener("sessionstart",aK),aC.removeEventListener("sessionend",aL),R&&(R.dispose(),R=null),aM.stop()},this.renderBufferDirect=function(a,b,c,d,e,f){null===b&&(b=W);let g=e.isMesh&&0>e.matrixWorld.determinant(),h=aV(a,b,c,d,e);ad.setMaterial(d,g);let i=c.index,j=c.attributes.position;if(null===i){if(void 0===j||0===j.count)return}else if(0===i.count)return;let k=1;!0===d.wireframe&&(i=an.getWireframeAttribute(c),k=2),aA.setup(e,d,h,c,i);let l,m=ax;null!==i&&(l=al.get(i),(m=ay).setIndex(l));let n=null!==i?i.count:j.count,o=c.drawRange.start*k,p=c.drawRange.count*k,q=null!==f?f.start*k:0,r=null!==f?f.count*k:1/0,s=Math.max(o,q),t=Math.max(0,Math.min(n,o+p,q+r)-1-s+1);if(0!==t){if(e.isMesh)!0===d.wireframe?(ad.setLineWidth(d.wireframeLinewidth*X()),m.setMode(1)):m.setMode(4);else if(e.isLine){let u=d.linewidth;void 0===u&&(u=1),ad.setLineWidth(u*X()),e.isLineSegments?m.setMode(1):e.isLineLoop?m.setMode(2):m.setMode(3)}else e.isPoints?m.setMode(0):e.isSprite&&m.setMode(4);if(e.isInstancedMesh)m.renderInstances(s,t,e.count);else if(c.isInstancedBufferGeometry){let v=Math.min(c.instanceCount,c._maxInstanceCount);m.renderInstances(s,t,v)}else m.render(s,t)}},this.compile=function(a,b){(p=as.get(a)).init(),t.push(p),a.traverseVisible(function(a){a.isLight&&a.layers.test(b.layers)&&(p.pushLight(a),a.castShadow&&p.pushShadow(a))}),p.setupLights(u.physicallyCorrectLights),a.traverse(function(b){let c=b.material;if(c){if(Array.isArray(c))for(let d=0;d<c.length;d++){let e=c[d];aT(e,a,b)}else aT(c,a,b)}}),t.pop(),p=null};let aJ=null;function aK(){aM.stop()}function aL(){aM.start()}let aM=new cf;function aN(a,b,c,d){if(!1===a.visible)return;let e=a.layers.test(b.layers);if(e){if(a.isGroup)c=a.renderOrder;else if(a.isLOD)!0===a.autoUpdate&&a.update(b);else if(a.isLight)p.pushLight(a),a.castShadow&&p.pushShadow(a);else if(a.isSprite){if(!a.frustumCulled||O.intersectsSprite(a)){d&&V.setFromMatrixPosition(a.matrixWorld).applyMatrix4(T);let f=ao.update(a),g=a.material;g.visible&&o.push(a,f,g,c,V.z,null)}}else if((a.isMesh||a.isLine||a.isPoints)&&(a.isSkinnedMesh&&a.skeleton.frame!==ae.render.frame&&(a.skeleton.update(),a.skeleton.frame=ae.render.frame),!a.frustumCulled||O.intersectsObject(a))){d&&V.setFromMatrixPosition(a.matrixWorld).applyMatrix4(T);let h=ao.update(a),i=a.material;if(Array.isArray(i)){let j=h.groups;for(let k=0,l=j.length;k<l;k++){let m=j[k],n=i[m.materialIndex];n&&n.visible&&o.push(a,h,n,c,V.z,m)}}else i.visible&&o.push(a,h,i,c,V.z,null)}}let q=a.children;for(let r=0,s=q.length;r<s;r++)aN(q[r],b,c,d)}function aO(a,b,c,d){let e=a.opaque,f=a.transmissive,g=a.transparent;p.setupLightsView(c),f.length>0&&aP(e,b,c),d&&ad.viewport(B.copy(d)),e.length>0&&aQ(e,b,c),f.length>0&&aQ(f,b,c),g.length>0&&aQ(g,b,c),ad.buffers.depth.setTest(!0),ad.buffers.depth.setMask(!0),ad.buffers.color.setMask(!0),ad.setPolygonOffset(!1)}function aP(a,b,c){let d=ac.isWebGL2;null===R&&(R=new aj(1,1,{generateMipmaps:!0,type:ab.has("EXT_color_buffer_half_float")?1016:1009,minFilter:r,samples:d&& !0===f?4:0})),u.getDrawingBufferSize(U),d?R.setSize(U.x,U.y):R.setSize(M(U.x),M(U.y));let e=u.getRenderTarget();u.setRenderTarget(R),u.clear();let g=u.toneMapping;u.toneMapping=0,aQ(a,b,c),u.toneMapping=g,ag.updateMultisampleRenderTarget(R),ag.updateRenderTargetMipmap(R),u.setRenderTarget(e)}function aQ(a,b,c){let d=!0===b.isScene?b.overrideMaterial:null;for(let e=0,f=a.length;e<f;e++){let g=a[e],h=g.object,i=g.geometry,j=null===d?g.material:d,k=g.group;h.layers.test(c.layers)&&aS(h,b,c,i,j,k)}}function aS(a,b,c,d,e,f){a.onBeforeRender(u,b,c,d,e,f),a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),e.onBeforeRender(u,b,c,d,a,f),!0===e.transparent&&e.side===i?(e.side=h,e.needsUpdate=!0,u.renderBufferDirect(c,b,d,e,a,f),e.side=g,e.needsUpdate=!0,u.renderBufferDirect(c,b,d,e,a,f),e.side=i):u.renderBufferDirect(c,b,d,e,a,f),a.onAfterRender(u,b,c,d,e,f)}function aT(a,b,c){!0!==b.isScene&&(b=W);let d=af.get(a),e=p.state.lights,f=p.state.shadowsArray,g=e.state.version,h=ap.getParameters(a,e.state,f,b,c),i=ap.getProgramCacheKey(h),j=d.programs;d.environment=a.isMeshStandardMaterial?b.environment:null,d.fog=b.fog,d.envMap=(a.isMeshStandardMaterial?ak:ah).get(a.envMap||d.environment),void 0===j&&(a.addEventListener("dispose",aG),j=new Map,d.programs=j);let k=j.get(i);if(void 0!==k){if(d.currentProgram===k&&d.lightsStateVersion===g)return aU(a,h),k}else h.uniforms=ap.getUniforms(a),a.onBuild(c,h,u),a.onBeforeCompile(h,u),k=ap.acquireProgram(h,i),j.set(i,k),d.uniforms=h.uniforms;let l=d.uniforms;(a.isShaderMaterial||a.isRawShaderMaterial)&& !0!==a.clipping||(l.clippingPlanes=at.uniform),aU(a,h),d.needsLights=aX(a),d.lightsStateVersion=g,d.needsLights&&(l.ambientLightColor.value=e.state.ambient,l.lightProbe.value=e.state.probe,l.directionalLights.value=e.state.directional,l.directionalLightShadows.value=e.state.directionalShadow,l.spotLights.value=e.state.spot,l.spotLightShadows.value=e.state.spotShadow,l.rectAreaLights.value=e.state.rectArea,l.ltc_1.value=e.state.rectAreaLTC1,l.ltc_2.value=e.state.rectAreaLTC2,l.pointLights.value=e.state.point,l.pointLightShadows.value=e.state.pointShadow,l.hemisphereLights.value=e.state.hemi,l.directionalShadowMap.value=e.state.directionalShadowMap,l.directionalShadowMatrix.value=e.state.directionalShadowMatrix,l.spotShadowMap.value=e.state.spotShadowMap,l.spotShadowMatrix.value=e.state.spotShadowMatrix,l.pointShadowMap.value=e.state.pointShadowMap,l.pointShadowMatrix.value=e.state.pointShadowMatrix);let m=k.getUniforms(),n=dL.seqWithValue(m.seq,l);return d.currentProgram=k,d.uniformsList=n,k}function aU(a,b){let c=af.get(a);c.outputEncoding=b.outputEncoding,c.instancing=b.instancing,c.skinning=b.skinning,c.morphTargets=b.morphTargets,c.morphNormals=b.morphNormals,c.morphColors=b.morphColors,c.morphTargetsCount=b.morphTargetsCount,c.numClippingPlanes=b.numClippingPlanes,c.numIntersection=b.numClipIntersection,c.vertexAlphas=b.vertexAlphas,c.vertexTangents=b.vertexTangents,c.toneMapping=b.toneMapping}function aV(a,b,c,d,e){!0!==b.isScene&&(b=W),ag.resetTextureUnits();let f=b.fog,g=d.isMeshStandardMaterial?b.environment:null,h=null===y?u.outputEncoding:!0===y.isXRRenderTarget?y.texture.encoding:3e3,i=(d.isMeshStandardMaterial?ak:ah).get(d.envMap||g),j=!0===d.vertexColors&&!!c.attributes.color&&4===c.attributes.color.itemSize,k=!!d.normalMap&&!!c.attributes.tangent,l=!!c.morphAttributes.position,m=!!c.morphAttributes.normal,n=!!c.morphAttributes.color,o=d.toneMapped?u.toneMapping:0,q=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,r=void 0!==q?q.length:0,s=af.get(d),t=p.state.lights;if(!0===P&&(!0===Q||a!==A)){let v=a===A&&d.id===z;at.setState(d,a,v)}let w=!1;d.version===s.__version?s.needsLights&&s.lightsStateVersion!==t.state.version?w=!0:s.outputEncoding!==h?w=!0:e.isInstancedMesh&& !1===s.instancing?w=!0:e.isInstancedMesh|| !0!==s.instancing?e.isSkinnedMesh&& !1===s.skinning?w=!0:e.isSkinnedMesh|| !0!==s.skinning?s.envMap!==i?w=!0:!0===d.fog&&s.fog!==f?w=!0:void 0!==s.numClippingPlanes&&(s.numClippingPlanes!==at.numPlanes||s.numIntersection!==at.numIntersection)?w=!0:s.vertexAlphas!==j?w=!0:s.vertexTangents!==k?w=!0:s.morphTargets!==l?w=!0:s.morphNormals!==m?w=!0:s.morphColors!==n?w=!0:s.toneMapping!==o?w=!0:!0===ac.isWebGL2&&s.morphTargetsCount!==r&&(w=!0):w=!0:w=!0:(w=!0,s.__version=d.version);let x=s.currentProgram;!0===w&&(x=aT(d,b,e));let B=!1,C=!1,D=!1,E=x.getUniforms(),H=s.uniforms;if(ad.useProgram(x.program)&&(B=!0,C=!0,D=!0),d.id!==z&&(z=d.id,C=!0),B||A!==a){if(E.setValue(Y,"projectionMatrix",a.projectionMatrix),ac.logarithmicDepthBuffer&&E.setValue(Y,"logDepthBufFC",2/(Math.log(a.far+1)/Math.LN2)),A!==a&&(A=a,C=!0,D=!0),d.isShaderMaterial||d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshStandardMaterial||d.envMap){let I=E.map.cameraPosition;void 0!==I&&I.setValue(Y,V.setFromMatrixPosition(a.matrixWorld))}(d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshLambertMaterial||d.isMeshBasicMaterial||d.isMeshStandardMaterial||d.isShaderMaterial)&&E.setValue(Y,"isOrthographic",!0===a.isOrthographicCamera),(d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshLambertMaterial||d.isMeshBasicMaterial||d.isMeshStandardMaterial||d.isShaderMaterial||d.isShadowMaterial||e.isSkinnedMesh)&&E.setValue(Y,"viewMatrix",a.matrixWorldInverse)}if(e.isSkinnedMesh){E.setOptional(Y,e,"bindMatrix"),E.setOptional(Y,e,"bindMatrixInverse");let J=e.skeleton;J&&(ac.floatVertexTextures?(null===J.boneTexture&&J.computeBoneTexture(),E.setValue(Y,"boneTexture",J.boneTexture,ag),E.setValue(Y,"boneTextureSize",J.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let K=c.morphAttributes;return(void 0!==K.position|| void 0!==K.normal|| void 0!==K.color&& !0===ac.isWebGL2)&&aw.update(e,c,d,x),(C||s.receiveShadow!==e.receiveShadow)&&(s.receiveShadow=e.receiveShadow,E.setValue(Y,"receiveShadow",e.receiveShadow)),C&&(E.setValue(Y,"toneMappingExposure",u.toneMappingExposure),s.needsLights&&aW(H,D),f&& !0===d.fog&&aq.refreshFogUniforms(H,f),aq.refreshMaterialUniforms(H,d,G,F,R),dL.upload(Y,s.uniformsList,H,ag)),d.isShaderMaterial&& !0===d.uniformsNeedUpdate&&(dL.upload(Y,s.uniformsList,H,ag),d.uniformsNeedUpdate=!1),d.isSpriteMaterial&&E.setValue(Y,"center",e.center),E.setValue(Y,"modelViewMatrix",e.modelViewMatrix),E.setValue(Y,"normalMatrix",e.normalMatrix),E.setValue(Y,"modelMatrix",e.matrixWorld),x}function aW(a,b){a.ambientLightColor.needsUpdate=b,a.lightProbe.needsUpdate=b,a.directionalLights.needsUpdate=b,a.directionalLightShadows.needsUpdate=b,a.pointLights.needsUpdate=b,a.pointLightShadows.needsUpdate=b,a.spotLights.needsUpdate=b,a.spotLightShadows.needsUpdate=b,a.rectAreaLights.needsUpdate=b,a.hemisphereLights.needsUpdate=b}function aX(a){return a.isMeshLambertMaterial||a.isMeshToonMaterial||a.isMeshPhongMaterial||a.isMeshStandardMaterial||a.isShadowMaterial||a.isShaderMaterial&& !0===a.lights}aM.setAnimationLoop(function(a){aJ&&aJ(a)}),"undefined"!=typeof self&&aM.setContext(self),this.setAnimationLoop=function(a){aJ=a,aC.setAnimationLoop(a),null===a?aM.stop():aM.start()},aC.addEventListener("sessionstart",aK),aC.addEventListener("sessionend",aL),this.render=function(a,b){if(void 0!==b&& !0!==b.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===v)return;!0===a.autoUpdate&&a.updateMatrixWorld(),null===b.parent&&b.updateMatrixWorld(),!0===aC.enabled&& !0===aC.isPresenting&&(!0===aC.cameraAutoUpdate&&aC.updateCamera(b),b=aC.getCamera()),!0===a.isScene&&a.onBeforeRender(u,a,b,y),(p=as.get(a,t.length)).init(),t.push(p),T.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),O.setFromProjectionMatrix(T),Q=this.localClippingEnabled,P=at.init(this.clippingPlanes,Q,b),(o=ar.get(a,q.length)).init(),q.push(o),aN(a,b,0,u.sortObjects),o.finish(),!0===u.sortObjects&&o.sort(H,I),!0===P&&at.beginShadows();let c=p.state.shadowsArray;if(au.render(c,a,b),!0===P&&at.endShadows(),!0===this.info.autoReset&&this.info.reset(),av.render(o,a),p.setupLights(u.physicallyCorrectLights),b.isArrayCamera){let d=b.cameras;for(let e=0,f=d.length;e<f;e++){let g=d[e];aO(o,a,g,g.viewport)}}else aO(o,a,b);null!==y&&(ag.updateMultisampleRenderTarget(y),ag.updateRenderTargetMipmap(y)),!0===a.isScene&&a.onAfterRender(u,a,b),aA.resetDefaultState(),z=-1,A=null,t.pop(),p=t.length>0?t[t.length-1]:null,q.pop(),o=q.length>0?q[q.length-1]:null},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(a,b,c){af.get(a.texture).__webglTexture=b,af.get(a.depthTexture).__webglTexture=c;let d=af.get(a);d.__hasExternalTextures=!0,d.__hasExternalTextures&&(d.__autoAllocateDepthBuffer=void 0===c,d.__autoAllocateDepthBuffer|| !0!==ab.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),d.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(a,b){let c=af.get(a);c.__webglFramebuffer=b,c.__useDefaultFramebuffer=void 0===b},this.setRenderTarget=function(a,b=0,c=0){y=a,w=b,x=c;let d=!0;if(a){let e=af.get(a);void 0!==e.__useDefaultFramebuffer?(ad.bindFramebuffer(36160,null),d=!1):void 0===e.__webglFramebuffer?ag.setupRenderTarget(a):e.__hasExternalTextures&&ag.rebindTextures(a,af.get(a.texture).__webglTexture,af.get(a.depthTexture).__webglTexture)}let f=null,g=!1,h=!1;if(a){let i=a.texture;(i.isData3DTexture||i.isDataArrayTexture)&&(h=!0);let j=af.get(a).__webglFramebuffer;a.isWebGLCubeRenderTarget?(f=j[b],g=!0):f=ac.isWebGL2&&a.samples>0&& !1===ag.useMultisampledRTT(a)?af.get(a).__webglMultisampledFramebuffer:j,B.copy(a.viewport),C.copy(a.scissor),D=a.scissorTest}else B.copy(J).multiplyScalar(G).floor(),C.copy(K).multiplyScalar(G).floor(),D=L;let k=ad.bindFramebuffer(36160,f);if(k&&ac.drawBuffers&&d&&ad.drawBuffers(a,f),ad.viewport(B),ad.scissor(C),ad.setScissorTest(D),g){let l=af.get(a.texture);Y.framebufferTexture2D(36160,36064,34069+b,l.__webglTexture,c)}else if(h){let m=af.get(a.texture),n=b||0;Y.framebufferTextureLayer(36160,36064,m.__webglTexture,c||0,n)}z=-1},this.readRenderTargetPixels=function(a,b,c,d,e,f,g){if(!(a&&a.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let h=af.get(a).__webglFramebuffer;if(a.isWebGLCubeRenderTarget&& void 0!==g&&(h=h[g]),h){ad.bindFramebuffer(36160,h);try{let i=a.texture,j=i.format,k=i.type;if(j!==s&&az.convert(j)!==Y.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let l=1016===k&&(ab.has("EXT_color_buffer_half_float")||ac.isWebGL2&&ab.has("EXT_color_buffer_float"));if(1009!==k&&az.convert(k)!==Y.getParameter(35738)&&!(1015===k&&(ac.isWebGL2||ab.has("OES_texture_float")||ab.has("WEBGL_color_buffer_float")))&&!l){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}b>=0&&b<=a.width-d&&c>=0&&c<=a.height-e&&Y.readPixels(b,c,d,e,az.convert(j),az.convert(k),f)}finally{let m=null!==y?af.get(y).__webglFramebuffer:null;ad.bindFramebuffer(36160,m)}}},this.copyFramebufferToTexture=function(a,b,c=0){let d=Math.pow(2,-c),e=Math.floor(b.image.width*d),f=Math.floor(b.image.height*d);ag.setTexture2D(b,0),Y.copyTexSubImage2D(3553,c,0,0,a.x,a.y,e,f),ad.unbindTexture()},this.copyTextureToTexture=function(a,b,c,d=0){let e=b.image.width,f=b.image.height,g=az.convert(c.format),h=az.convert(c.type);ag.setTexture2D(c,0),Y.pixelStorei(37440,c.flipY),Y.pixelStorei(37441,c.premultiplyAlpha),Y.pixelStorei(3317,c.unpackAlignment),b.isDataTexture?Y.texSubImage2D(3553,d,a.x,a.y,e,f,g,h,b.image.data):b.isCompressedTexture?Y.compressedTexSubImage2D(3553,d,a.x,a.y,b.mipmaps[0].width,b.mipmaps[0].height,g,b.mipmaps[0].data):Y.texSubImage2D(3553,d,a.x,a.y,g,h,b.image),0===d&&c.generateMipmaps&&Y.generateMipmap(3553),ad.unbindTexture()},this.copyTextureToTexture3D=function(a,b,c,d,e=0){if(u.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let f=a.max.x-a.min.x+1,g=a.max.y-a.min.y+1,h=a.max.z-a.min.z+1,i=az.convert(d.format),j=az.convert(d.type),k;if(d.isData3DTexture)ag.setTexture3D(d,0),k=32879;else if(d.isDataArrayTexture)ag.setTexture2DArray(d,0),k=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Y.pixelStorei(37440,d.flipY),Y.pixelStorei(37441,d.premultiplyAlpha),Y.pixelStorei(3317,d.unpackAlignment);let l=Y.getParameter(3314),m=Y.getParameter(32878),n=Y.getParameter(3316),o=Y.getParameter(3315),p=Y.getParameter(32877),q=c.isCompressedTexture?c.mipmaps[0]:c.image;Y.pixelStorei(3314,q.width),Y.pixelStorei(32878,q.height),Y.pixelStorei(3316,a.min.x),Y.pixelStorei(3315,a.min.y),Y.pixelStorei(32877,a.min.z),c.isDataTexture||c.isData3DTexture?Y.texSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,j,q.data):c.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Y.compressedTexSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,q.data)):Y.texSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,j,q),Y.pixelStorei(3314,l),Y.pixelStorei(32878,m),Y.pixelStorei(3316,n),Y.pixelStorei(3315,o),Y.pixelStorei(32877,p),0===e&&d.generateMipmaps&&Y.generateMipmap(k),ad.unbindTexture()},this.initTexture=function(a){a.isCubeTexture?ag.setTextureCube(a,0):a.isData3DTexture?ag.setTexture3D(a,0):a.isDataArrayTexture?ag.setTexture2DArray(a,0):ag.setTexture2D(a,0),ad.unbindTexture()},this.resetState=function(){w=0,x=0,y=null,ad.reset(),aA.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class es extends er{}es.prototype.isWebGL1Renderer=!0;class et{constructor(a,b=25e-5){this.isFogExp2=!0,this.name="",this.color=new ab(a),this.density=b}clone(){return new et(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class eu{constructor(a,b=1,c=1e3){this.isFog=!0,this.name="",this.color=new ab(a),this.near=b,this.far=c}clone(){return new eu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class ev extends be{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(a,b){return super.copy(a,b),null!==a.background&&(this.background=a.background.clone()),null!==a.environment&&(this.environment=a.environment.clone()),null!==a.fog&&(this.fog=a.fog.clone()),null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone()),this.autoUpdate=a.autoUpdate,this.matrixAutoUpdate=a.matrixAutoUpdate,this}toJSON(a){let b=super.toJSON(a);return null!==this.fog&&(b.object.fog=this.fog.toJSON()),b}}class ew{constructor(a,b){this.isInterleavedBuffer=!0,this.array=a,this.stride=b,this.count=void 0!==a?a.length/b:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=I()}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.array=new a.array.constructor(a.array),this.count=a.count,this.stride=a.stride,this.usage=a.usage,this}copyAt(a,b,c){a*=this.stride,c*=b.stride;for(let d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this}set(a,b=0){return this.array.set(a,b),this}clone(a){void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=I()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let b=new this.array.constructor(a.arrayBuffers[this.array.buffer._uuid]),c=new this.constructor(b,this.stride);return c.setUsage(this.usage),c}onUpload(a){return this.onUploadCallback=a,this}toJSON(a){return void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=I()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}let ex=new am;class ey{constructor(a,b,c,d=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=a,this.itemSize=b,this.offset=c,this.normalized=!0===d}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(a){this.data.needsUpdate=a}applyMatrix4(a){for(let b=0,c=this.data.count;b<c;b++)ex.fromBufferAttribute(this,b),ex.applyMatrix4(a),this.setXYZ(b,ex.x,ex.y,ex.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)ex.fromBufferAttribute(this,b),ex.applyNormalMatrix(a),this.setXYZ(b,ex.x,ex.y,ex.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)ex.fromBufferAttribute(this,b),ex.transformDirection(a),this.setXYZ(b,ex.x,ex.y,ex.z);return this}setX(a,b){return this.data.array[a*this.data.stride+this.offset]=b,this}setY(a,b){return this.data.array[a*this.data.stride+this.offset+1]=b,this}setZ(a,b){return this.data.array[a*this.data.stride+this.offset+2]=b,this}setW(a,b){return this.data.array[a*this.data.stride+this.offset+3]=b,this}getX(a){return this.data.array[a*this.data.stride+this.offset]}getY(a){return this.data.array[a*this.data.stride+this.offset+1]}getZ(a){return this.data.array[a*this.data.stride+this.offset+2]}getW(a){return this.data.array[a*this.data.stride+this.offset+3]}setXY(a,b,c){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this}setXYZ(a,b,c,d){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this.data.array[a+3]=e,this}clone(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.clone(a)),new ey(a.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return new bv(new this.array.constructor(b),this.itemSize,this.normalized)}}toJSON(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.toJSON(a)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:b,normalized:this.normalized}}}}class ez extends null{constructor(a){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ab(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.rotation=a.rotation,this.sizeAttenuation=a.sizeAttenuation,this.fog=a.fog,this}}let eA,eB=new am,eC=new am,eD=new am,eE=new N,eF=new N,eG=new aR,eH=new am,eI=new am,eJ=new am,eK=new N,eL=new N,eM=new N;function eN(a,b,c,d,e,f){eE.subVectors(a,c).addScalar(.5).multiply(d),void 0!==e?(eF.x=f*eE.x-e*eE.y,eF.y=e*eE.x+f*eE.y):eF.copy(eE),a.copy(b),a.x+=eF.x,a.y+=eF.y,a.applyMatrix4(eG)}let eO=new am,eP=new am,eQ=new am,eR=new ai,eS=new ai,eT=new am,eU=new aR;class eV extends bY{constructor(a,b){super(a,b),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new aR,this.bindMatrixInverse=new aR}copy(a,b){return super.copy(a,b),this.bindMode=a.bindMode,this.bindMatrix.copy(a.bindMatrix),this.bindMatrixInverse.copy(a.bindMatrixInverse),this.skeleton=a.skeleton,this}bind(a,b){this.skeleton=a,void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld),this.bindMatrix.copy(b),this.bindMatrixInverse.copy(b).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let a=new ai,b=this.geometry.attributes.skinWeight;for(let c=0,d=b.count;c<d;c++){a.fromBufferAttribute(b,c);let e=1/a.manhattanLength();e!==1/0?a.multiplyScalar(e):a.set(1,0,0,0),b.setXYZW(c,a.x,a.y,a.z,a.w)}}updateMatrixWorld(a){super.updateMatrixWorld(a),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(a,b){let c=this.skeleton,d=this.geometry;eR.fromBufferAttribute(d.attributes.skinIndex,a),eS.fromBufferAttribute(d.attributes.skinWeight,a),eQ.copy(b).applyMatrix4(this.bindMatrix),b.set(0,0,0);for(let e=0;e<4;e++){let f=eS.getComponent(e);if(0!==f){let g=eR.getComponent(e);eU.multiplyMatrices(c.bones[g].matrixWorld,c.boneInverses[g]),b.addScaledVector(eT.copy(eQ).applyMatrix4(eU),f)}}return b.applyMatrix4(this.bindMatrixInverse)}}class eW extends be{constructor(){super(),this.isBone=!0,this.type="Bone"}}class eX extends ah{constructor(a=null,b=1,c=1,d,e,f,g,h,i=q,j=q,k,l){super(null,f,g,h,i,j,d,e,k,l),this.isDataTexture=!0,this.image={data:a,width:b,height:c},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let eY=new aR,eZ=new aR;class e${constructor(a=[],b=[]){this.uuid=I(),this.bones=a.slice(0),this.boneInverses=b,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let a=this.bones,b=this.boneInverses;if(this.boneMatrices=new Float32Array(16*a.length),0===b.length)this.calculateInverses();else if(a.length!==b.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new aR)}}calculateInverses(){this.boneInverses.length=0;for(let a=0,b=this.bones.length;a<b;a++){let c=new aR;this.bones[a]&&c.copy(this.bones[a].matrixWorld).invert(),this.boneInverses.push(c)}}pose(){for(let a=0,b=this.bones.length;a<b;a++){let c=this.bones[a];c&&c.matrixWorld.copy(this.boneInverses[a]).invert()}for(let d=0,e=this.bones.length;d<e;d++){let f=this.bones[d];f&&(f.parent&&f.parent.isBone?(f.matrix.copy(f.parent.matrixWorld).invert(),f.matrix.multiply(f.matrixWorld)):f.matrix.copy(f.matrixWorld),f.matrix.decompose(f.position,f.quaternion,f.scale))}}update(){let a=this.bones,b=this.boneInverses,c=this.boneMatrices,d=this.boneTexture;for(let e=0,f=a.length;e<f;e++){let g=a[e]?a[e].matrixWorld:eZ;eY.multiplyMatrices(g,b[e]),eY.toArray(c,16*e)}null!==d&&(d.needsUpdate=!0)}clone(){return new e$(this.bones,this.boneInverses)}computeBoneTexture(){var a;let b=Math.sqrt(4*this.bones.length);b=Math.max(b=(a=b,Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))),4);let c=new Float32Array(b*b*4);c.set(this.boneMatrices);let d=new eX(c,b,b,s,1015);return d.needsUpdate=!0,this.boneMatrices=c,this.boneTexture=d,this.boneTextureSize=b,this}getBoneByName(a){for(let b=0,c=this.bones.length;b<c;b++){let d=this.bones[b];if(d.name===a)return d}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(a,b){this.uuid=a.uuid;for(let c=0,d=a.bones.length;c<d;c++){let e=a.bones[c],f=b[e];void 0===f&&(console.warn("THREE.Skeleton: No bone found with UUID:",e),f=new eW),this.bones.push(f),this.boneInverses.push(new aR().fromArray(a.boneInverses[c]))}return this.init(),this}toJSON(){let a={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};a.uuid=this.uuid;let b=this.bones,c=this.boneInverses;for(let d=0,e=b.length;d<e;d++){let f=b[d];a.bones.push(f.uuid);let g=c[d];a.boneInverses.push(g.toArray())}return a}}class e_ extends null{constructor(a,b,c,d=1){"number"==typeof c&&(d=c,c=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(a,b,c),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=d}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}toJSON(){let a=super.toJSON();return a.meshPerAttribute=this.meshPerAttribute,a.isInstancedBufferAttribute=!0,a}}let e0=new aR,e1=new aR,e2=null,e3=new bY;class e4 extends br{constructor(a){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ab(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.linewidth=a.linewidth,this.linecap=a.linecap,this.linejoin=a.linejoin,this.fog=a.fog,this}}let e5=new am,e6=new am,e7=new aR,e8=new aQ,e9=new aI;class fa extends be{constructor(a=new bG,b=new e4){super(),this.isLine=!0,this.type="Line",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a,b){return super.copy(a,b),this.material=a.material,this.geometry=a.geometry,this}computeLineDistances(){let a=this.geometry;if(null===a.index){let b=a.attributes.position,c=[0];for(let d=1,e=b.count;d<e;d++)e5.fromBufferAttribute(b,d-1),e6.fromBufferAttribute(b,d),c[d]=c[d-1],c[d]+=e5.distanceTo(e6);a.setAttribute("lineDistance",new by(c,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Line.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),e9.copy(c.boundingSphere),e9.applyMatrix4(d),e9.radius+=e,!1===a.ray.intersectsSphere(e9))return;e7.copy(d).invert(),e8.copy(a.ray).applyMatrix4(e7);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g,i=new am,j=new am,k=new am,l=new am,m=this.isLineSegments?2:1,n=c.index,o=c.attributes,p=o.position;if(null!==n){let q=Math.max(0,f.start),r=Math.min(n.count,f.start+f.count);for(let s=q,t=r-1;s<t;s+=m){let u=n.getX(s),v=n.getX(s+1);i.fromBufferAttribute(p,u),j.fromBufferAttribute(p,v);let w=e8.distanceSqToSegment(i,j,l,k);if(w>h)continue;l.applyMatrix4(this.matrixWorld);let x=a.ray.origin.distanceTo(l);x<a.near||x>a.far||b.push({distance:x,point:k.clone().applyMatrix4(this.matrixWorld),index:s,face:null,faceIndex:null,object:this})}}else{let y=Math.max(0,f.start),z=Math.min(p.count,f.start+f.count);for(let A=y,B=z-1;A<B;A+=m){i.fromBufferAttribute(p,A),j.fromBufferAttribute(p,A+1);let C=e8.distanceSqToSegment(i,j,l,k);if(C>h)continue;l.applyMatrix4(this.matrixWorld);let D=a.ray.origin.distanceTo(l);D<a.near||D>a.far||b.push({distance:D,point:k.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){let a=this.geometry,b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}}let fb=new am,fc=new am;class fd extends fa{constructor(a,b){super(a,b),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let a=this.geometry;if(null===a.index){let b=a.attributes.position,c=[];for(let d=0,e=b.count;d<e;d+=2)fb.fromBufferAttribute(b,d),fc.fromBufferAttribute(b,d+1),c[d]=0===d?0:c[d-1],c[d+1]=c[d]+fb.distanceTo(fc);a.setAttribute("lineDistance",new by(c,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class fe extends null{constructor(a){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ab(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.size=a.size,this.sizeAttenuation=a.sizeAttenuation,this.fog=a.fog,this}}let ff=new aR,fg=new aQ,fh=new aI,fi=new am;function fj(a,b,c,d,e,f,g){let h=fg.distanceSqToPoint(a);if(h<c){let i=new am;fg.closestPointToPoint(a,i),i.applyMatrix4(d);let j=e.ray.origin.distanceTo(i);if(j<e.near||j>e.far)return;f.push({distance:j,distanceToRay:Math.sqrt(h),point:i,index:b,face:null,object:g})}}class fk extends ah{constructor(a,b,c,d,e,f,g,h,i,j,k,l){super(null,f,g,h,i,j,d,e,k,l),this.isCompressedTexture=!0,this.image={width:b,height:c},this.mipmaps=a,this.flipY=!1,this.generateMipmaps=!1}}class fl{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(a,b){let c=this.getUtoTmapping(a);return this.getPoint(c,b)}getPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return b}getSpacedPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b}getLength(){let a=this.getLengths();return a[a.length-1]}getLengths(a=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let b=[],c,d=this.getPoint(0),e=0;b.push(0);for(let f=1;f<=a;f++)b.push(e+=(c=this.getPoint(f/a)).distanceTo(d)),d=c;return this.cacheArcLengths=b,b}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(a,b){let c=this.getLengths(),d=0,e=c.length,f;f=b||a*c[e-1];let g=0,h=e-1,i;for(;g<=h;)if((i=c[d=Math.floor(g+(h-g)/2)]-f)<0)g=d+1;else if(i>0)h=d-1;else{h=d;break}if(c[d=h]===f)return d/(e-1);let j=c[d],k=c[d+1],l=(f-j)/(k-j),m=(d+l)/(e-1);return m}getTangent(a,b){let c=1e-4,d=a-c,e=a+c;d<0&&(d=0),e>1&&(e=1);let f=this.getPoint(d),g=this.getPoint(e),h=b||(f.isVector2?new N:new am);return h.copy(g).sub(f).normalize(),h}getTangentAt(a,b){let c=this.getUtoTmapping(a);return this.getTangent(c,b)}computeFrenetFrames(a,b){let c=new am,d=[],e=[],f=[],g=new am,h=new aR;for(let i=0;i<=a;i++){let j=i/a;d[i]=this.getTangentAt(j,new am)}e[0]=new am,f[0]=new am;let k=Number.MAX_VALUE,l=Math.abs(d[0].x),m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0)),m<=k&&(k=m,c.set(0,1,0)),n<=k&&c.set(0,0,1),g.crossVectors(d[0],c).normalize(),e[0].crossVectors(d[0],g),f[0].crossVectors(d[0],e[0]);for(let o=1;o<=a;o++){if(e[o]=e[o-1].clone(),f[o]=f[o-1].clone(),g.crossVectors(d[o-1],d[o]),g.length()>Number.EPSILON){g.normalize();let p=Math.acos(J(d[o-1].dot(d[o]),-1,1));e[o].applyMatrix4(h.makeRotationAxis(g,p))}f[o].crossVectors(d[o],e[o])}if(!0===b){let q=Math.acos(J(e[0].dot(e[a]),-1,1));q/=a,d[0].dot(g.crossVectors(e[0],e[a]))>0&&(q=-q);for(let r=1;r<=a;r++)e[r].applyMatrix4(h.makeRotationAxis(d[r],q*r)),f[r].crossVectors(d[r],e[r])}return{tangents:d,normals:e,binormals:f}}clone(){return new this.constructor().copy(this)}copy(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}toJSON(){let a={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return a.arcLengthDivisions=this.arcLengthDivisions,a.type=this.type,a}fromJSON(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}}class fm extends fl{constructor(a=0,b=0,c=1,d=1,e=0,f=2*Math.PI,g=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g,this.aRotation=h}getPoint(a,b){let c=b||new N,d=2*Math.PI,e=this.aEndAngle-this.aStartAngle,f=Math.abs(e)<Number.EPSILON;for(;e<0;)e+=d;for(;e>d;)e-=d;e<Number.EPSILON&&(e=f?0:d),!0!==this.aClockwise||f||(e===d?e=-d:e-=d);let g=this.aStartAngle+a*e,h=this.aX+this.xRadius*Math.cos(g),i=this.aY+this.yRadius*Math.sin(g);if(0!==this.aRotation){let j=Math.cos(this.aRotation),k=Math.sin(this.aRotation),l=h-this.aX,m=i-this.aY;h=l*j-m*k+this.aX,i=l*k+m*j+this.aY}return c.set(h,i)}copy(a){return super.copy(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}toJSON(){let a=super.toJSON();return a.aX=this.aX,a.aY=this.aY,a.xRadius=this.xRadius,a.yRadius=this.yRadius,a.aStartAngle=this.aStartAngle,a.aEndAngle=this.aEndAngle,a.aClockwise=this.aClockwise,a.aRotation=this.aRotation,a}fromJSON(a){return super.fromJSON(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}}function fn(){let a=0,b=0,c=0,d=0;function e(e,f,g,h){a=e,b=g,c=-3*e+3*f-2*g-h,d=2*e-2*f+g+h}return{initCatmullRom:function(a,b,c,d,f){e(b,c,f*(c-a),f*(d-b))},initNonuniformCatmullRom:function(a,b,c,d,f,g,h){let i=(b-a)/f-(c-a)/(f+g)+(c-b)/g,j=(c-b)/g-(d-b)/(g+h)+(d-c)/h;i*=g,j*=g,e(b,c,i,j)},calc:function(e){let f=e*e;return a+b*e+c*f+d*(f*e)}}}let fo=new am,fp=new fn,fq=new fn,fr=new fn;function fs(a,b,c,d,e){let f=(d-b)*.5,g=(e-c)*.5,h=a*a;return(2*c-2*d+f+g)*(a*h)+(-3*c+3*d-2*f-g)*h+f*a+c}function ft(a,b,c,d){var e,f,g,h;return function(a,b){let c=1-a;return c*c*b}(a,b)+(e=a,2*(1-e)*e*(f=c))+(g=a,g*g*(h=d))}function fu(a,b,c,d,e){var f,g,h,i;return function(a,b){let c=1-a;return c*c*c*b}(a,b)+function(a,b){let c=1-a;return 3*c*c*a*b}(a,c)+(f=a,3*(1-f)*f*f*(g=d))+(h=a,h*h*h*(i=e))}class fv extends fl{constructor(a=new N,b=new N,c=new N,d=new N){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new N){let c=b,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(fu(a,d.x,e.x,f.x,g.x),fu(a,d.y,e.y,f.y,g.y)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}class fw extends fl{constructor(a=new N,b=new N){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=a,this.v2=b}getPoint(a,b=new N){let c=b;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c}getPointAt(a,b){return this.getPoint(a,b)}getTangent(a,b){let c=b||new N;return c.copy(this.v2).sub(this.v1).normalize(),c}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class fx extends fl{constructor(a=new N,b=new N,c=new N){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new N){let c=b,d=this.v0,e=this.v1,f=this.v2;return c.set(ft(a,d.x,e.x,f.x),ft(a,d.y,e.y,f.y)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class fy extends fl{constructor(a=new am,b=new am,c=new am){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new am){let c=b,d=this.v0,e=this.v1,f=this.v2;return c.set(ft(a,d.x,e.x,f.x),ft(a,d.y,e.y,f.y),ft(a,d.z,e.z,f.z)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class fz extends fl{constructor(a=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=a}getPoint(a,b=new N){let c=b,d=this.points,e=(d.length-1)*a,f=Math.floor(e),g=e-f,h=d[0===f?f:f-1],i=d[f],j=d[f>d.length-2?d.length-1:f+1],k=d[f>d.length-3?d.length-1:f+2];return c.set(fs(g,h.x,i.x,j.x,k.x),fs(g,h.y,i.y,j.y,k.y)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new N().fromArray(d))}return this}}var fA=Object.freeze({__proto__:null,ArcCurve:class extends fm{constructor(a,b,c,d,e,f){super(a,b,c,c,d,e,f),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends fl{constructor(a=[],b=!1,c="centripetal",d=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=a,this.closed=b,this.curveType=c,this.tension=d}getPoint(a,b=new am){let c=b,d=this.points,e=d.length,f=(e-(this.closed?0:1))*a,g=Math.floor(f),h=f-g;this.closed?g+=g>0?0:(Math.floor(Math.abs(g)/e)+1)*e:0===h&&g===e-1&&(g=e-2,h=1);let i,j;this.closed||g>0?i=d[(g-1)%e]:(fo.subVectors(d[0],d[1]).add(d[0]),i=fo);let k=d[g%e],l=d[(g+1)%e];if(this.closed||g+2<e?j=d[(g+2)%e]:(fo.subVectors(d[e-1],d[e-2]).add(d[e-1]),j=fo),"centripetal"===this.curveType||"chordal"===this.curveType){let m="chordal"===this.curveType?.5:.25,n=Math.pow(i.distanceToSquared(k),m),o=Math.pow(k.distanceToSquared(l),m),p=Math.pow(l.distanceToSquared(j),m);o<1e-4&&(o=1),n<1e-4&&(n=o),p<1e-4&&(p=o),fp.initNonuniformCatmullRom(i.x,k.x,l.x,j.x,n,o,p),fq.initNonuniformCatmullRom(i.y,k.y,l.y,j.y,n,o,p),fr.initNonuniformCatmullRom(i.z,k.z,l.z,j.z,n,o,p)}else"catmullrom"===this.curveType&&(fp.initCatmullRom(i.x,k.x,l.x,j.x,this.tension),fq.initCatmullRom(i.y,k.y,l.y,j.y,this.tension),fr.initCatmullRom(i.z,k.z,l.z,j.z,this.tension));return c.set(fp.calc(h),fq.calc(h),fr.calc(h)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a.closed=this.closed,a.curveType=this.curveType,a.tension=this.tension,a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new am().fromArray(d))}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}},CubicBezierCurve:fv,CubicBezierCurve3:class extends fl{constructor(a=new am,b=new am,c=new am,d=new am){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new am){let c=b,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(fu(a,d.x,e.x,f.x,g.x),fu(a,d.y,e.y,f.y,g.y),fu(a,d.z,e.z,f.z,g.z)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}},EllipseCurve:fm,LineCurve:fw,LineCurve3:class extends fl{constructor(a=new am,b=new am){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=a,this.v2=b}getPoint(a,b=new am){let c=b;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c}getPointAt(a,b){return this.getPoint(a,b)}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}},QuadraticBezierCurve:fx,QuadraticBezierCurve3:fy,SplineCurve:fz});class fB extends fl{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(a){this.curves.push(a)}closePath(){let a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new fw(b,a))}getPoint(a,b){let c=a*this.getLength(),d=this.getCurveLengths(),e=0;for(;e<d.length;){if(d[e]>=c){let f=d[e]-c,g=this.curves[e],h=g.getLength(),i=0===h?0:1-f/h;return g.getPointAt(i,b)}e++}return null}getLength(){let a=this.getCurveLengths();return a[a.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let a=[],b=0;for(let c=0,d=this.curves.length;c<d;c++)a.push(b+=this.curves[c].getLength());return this.cacheLengths=a,a}getSpacedPoints(a=40){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return this.autoClose&&b.push(b[0]),b}getPoints(a=12){let b=[],c;for(let d=0,e=this.curves;d<e.length;d++){let f=e[d],g=f.isEllipseCurve?2*a:f.isLineCurve||f.isLineCurve3?1:f.isSplineCurve?a*f.points.length:a,h=f.getPoints(g);for(let i=0;i<h.length;i++){let j=h[i];c&&c.equals(j)||(b.push(j),c=j)}}return this.autoClose&&b.length>1&&!b[b.length-1].equals(b[0])&&b.push(b[0]),b}copy(a){super.copy(a),this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(d.clone())}return this.autoClose=a.autoClose,this}toJSON(){let a=super.toJSON();a.autoClose=this.autoClose,a.curves=[];for(let b=0,c=this.curves.length;b<c;b++){let d=this.curves[b];a.curves.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.autoClose=a.autoClose,this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(new fA[d.type]().fromJSON(d))}return this}}class fC extends fB{constructor(a){super(),this.type="Path",this.currentPoint=new N,a&&this.setFromPoints(a)}setFromPoints(a){this.moveTo(a[0].x,a[0].y);for(let b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y);return this}moveTo(a,b){return this.currentPoint.set(a,b),this}lineTo(a,b){let c=new fw(this.currentPoint.clone(),new N(a,b));return this.curves.push(c),this.currentPoint.set(a,b),this}quadraticCurveTo(a,b,c,d){let e=new fx(this.currentPoint.clone(),new N(a,b),new N(c,d));return this.curves.push(e),this.currentPoint.set(c,d),this}bezierCurveTo(a,b,c,d,e,f){let g=new fv(this.currentPoint.clone(),new N(a,b),new N(c,d),new N(e,f));return this.curves.push(g),this.currentPoint.set(e,f),this}splineThru(a){let b=[this.currentPoint.clone()].concat(a),c=new fz(b);return this.curves.push(c),this.currentPoint.copy(a[a.length-1]),this}arc(a,b,c,d,e,f){let g=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(a+g,b+h,c,d,e,f),this}absarc(a,b,c,d,e,f){return this.absellipse(a,b,c,c,d,e,f),this}ellipse(a,b,c,d,e,f,g,h){let i=this.currentPoint.x,j=this.currentPoint.y;return this.absellipse(a+i,b+j,c,d,e,f,g,h),this}absellipse(a,b,c,d,e,f,g,h){let i=new fm(a,b,c,d,e,f,g,h);if(this.curves.length>0){let j=i.getPoint(0);j.equals(this.currentPoint)||this.lineTo(j.x,j.y)}this.curves.push(i);let k=i.getPoint(1);return this.currentPoint.copy(k),this}copy(a){return super.copy(a),this.currentPoint.copy(a.currentPoint),this}toJSON(){let a=super.toJSON();return a.currentPoint=this.currentPoint.toArray(),a}fromJSON(a){return super.fromJSON(a),this.currentPoint.fromArray(a.currentPoint),this}}class fD extends bG{constructor(a=[new N(0,.5),new N(.5,0),new N(0,-0.5)],b=12,c=0,d=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:a,segments:b,phiStart:c,phiLength:d},b=Math.floor(b),d=J(d,0,2*Math.PI);let e=[],f=[],g=[],h=[],i=[],j=1/b,k=new am,l=new N,m=new am,n=new am,o=new am,p=0,q=0;for(let r=0;r<=a.length-1;r++)switch(r){case 0:p=a[r+1].x-a[r].x,q=a[r+1].y-a[r].y,m.x=1*q,m.y=-p,m.z=0*q,o.copy(m),m.normalize(),h.push(m.x,m.y,m.z);break;case a.length-1:h.push(o.x,o.y,o.z);break;default:p=a[r+1].x-a[r].x,q=a[r+1].y-a[r].y,m.x=1*q,m.y=-p,m.z=0*q,n.copy(m),m.x+=o.x,m.y+=o.y,m.z+=o.z,m.normalize(),h.push(m.x,m.y,m.z),o.copy(n)}for(let s=0;s<=b;s++){let t=c+s*j*d,u=Math.sin(t),v=Math.cos(t);for(let w=0;w<=a.length-1;w++){k.x=a[w].x*u,k.y=a[w].y,k.z=a[w].x*v,f.push(k.x,k.y,k.z),l.x=s/b,l.y=w/(a.length-1),g.push(l.x,l.y);let x=h[3*w+0]*u,y=h[3*w+1],z=h[3*w+0]*v;i.push(x,y,z)}}for(let A=0;A<b;A++)for(let B=0;B<a.length-1;B++){let C=B+A*a.length,D=C,E=C+a.length,F=C+a.length+1,G=C+1;e.push(D,E,G),e.push(F,G,E)}this.setIndex(e),this.setAttribute("position",new by(f,3)),this.setAttribute("uv",new by(g,2)),this.setAttribute("normal",new by(i,3))}static fromJSON(a){return new fD(a.points,a.segments,a.phiStart,a.phiLength)}}class fE extends fD{constructor(a=1,b=1,c=4,d=8){let e=new fC;e.absarc(0,-b/2,a,1.5*Math.PI,0),e.absarc(0,b/2,a,0,.5*Math.PI),super(e.getPoints(c),d),this.type="CapsuleGeometry",this.parameters={radius:a,height:b,capSegments:c,radialSegments:d}}static fromJSON(a){return new fE(a.radius,a.length,a.capSegments,a.radialSegments)}}class fF extends bG{constructor(a=1,b=8,c=0,d=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d},b=Math.max(3,b);let e=[],f=[],g=[],h=[],i=new am,j=new N;f.push(0,0,0),g.push(0,0,1),h.push(.5,.5);for(let k=0,l=3;k<=b;k++,l+=3){let m=c+k/b*d;i.x=a*Math.cos(m),i.y=a*Math.sin(m),f.push(i.x,i.y,i.z),g.push(0,0,1),j.x=(f[l]/a+1)/2,j.y=(f[l+1]/a+1)/2,h.push(j.x,j.y)}for(let n=1;n<=b;n++)e.push(n,n+1,0);this.setIndex(e),this.setAttribute("position",new by(f,3)),this.setAttribute("normal",new by(g,3)),this.setAttribute("uv",new by(h,2))}static fromJSON(a){return new fF(a.radius,a.segments,a.thetaStart,a.thetaLength)}}class fG extends bG{constructor(a=1,b=1,c=1,d=8,e=1,f=!1,g=0,h=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};let i=this;d=Math.floor(d),e=Math.floor(e);let j=[],k=[],l=[],m=[],n=0,o=[],p=c/2,q=0;function r(c){let e=n,f=new N,o=new am,r=0,s=!0===c?a:b,t=!0===c?1:-1;for(let u=1;u<=d;u++)k.push(0,p*t,0),l.push(0,t,0),m.push(.5,.5),n++;let v=n;for(let w=0;w<=d;w++){let x=w/d,y=x*h+g,z=Math.cos(y),A=Math.sin(y);o.x=s*A,o.y=p*t,o.z=s*z,k.push(o.x,o.y,o.z),l.push(0,t,0),f.x=.5*z+.5,f.y=.5*A*t+.5,m.push(f.x,f.y),n++}for(let B=0;B<d;B++){let C=e+B,D=v+B;!0===c?j.push(D,D+1,C):j.push(D+1,D,C),r+=3}i.addGroup(q,r,!0===c?1:2),q+=r}(function(){let f=new am,r=new am,s=0,t=(b-a)/c;for(let u=0;u<=e;u++){let v=[],w=u/e,x=w*(b-a)+a;for(let y=0;y<=d;y++){let z=y/d,A=z*h+g,B=Math.sin(A),C=Math.cos(A);r.x=x*B,r.y=-w*c+p,r.z=x*C,k.push(r.x,r.y,r.z),f.set(B,t,C).normalize(),l.push(f.x,f.y,f.z),m.push(z,1-w),v.push(n++)}o.push(v)}for(let D=0;D<d;D++)for(let E=0;E<e;E++){let F=o[E][D],G=o[E+1][D],H=o[E+1][D+1],I=o[E][D+1];j.push(F,G,I),j.push(G,H,I),s+=6}i.addGroup(q,s,0),q+=s})(),!1===f&&(a>0&&r(!0),b>0&&r(!1)),this.setIndex(j),this.setAttribute("position",new by(k,3)),this.setAttribute("normal",new by(l,3)),this.setAttribute("uv",new by(m,2))}static fromJSON(a){return new fG(a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class fH extends fG{constructor(a=1,b=1,c=8,d=1,e=!1,f=0,g=2*Math.PI){super(0,a,b,c,d,e,f,g),this.type="ConeGeometry",this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}static fromJSON(a){return new fH(a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class fI extends bG{constructor(a=[],b=[],c=1,d=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:a,indices:b,radius:c,detail:d};let e=[],f=[];function g(a,b,c,d){let e=d+1,f=[];for(let g=0;g<=e;g++){f[g]=[];let h=a.clone().lerp(c,g/e),j=b.clone().lerp(c,g/e),k=e-g;for(let l=0;l<=k;l++)0===l&&g===e?f[g][l]=h:f[g][l]=h.clone().lerp(j,l/k)}for(let m=0;m<e;m++)for(let n=0;n<2*(e-m)-1;n++){let o=Math.floor(n/2);n%2==0?(i(f[m][o+1]),i(f[m+1][o]),i(f[m][o])):(i(f[m][o+1]),i(f[m+1][o+1]),i(f[m+1][o]))}}function h(){for(let a=0;a<f.length;a+=6){let b=f[a+0],c=f[a+2],d=f[a+4],e=Math.max(b,c,d),g=Math.min(b,c,d);e>.9&&g<.1&&(b<.2&&(f[a+0]+=1),c<.2&&(f[a+2]+=1),d<.2&&(f[a+4]+=1))}}function i(a){e.push(a.x,a.y,a.z)}function j(b,c){let d=3*b;c.x=a[d+0],c.y=a[d+1],c.z=a[d+2]}function k(){let a=new am,b=new am,c=new am,d=new am,g=new N,h=new N,i=new N;for(let j=0,k=0;j<e.length;j+=9,k+=6){a.set(e[j+0],e[j+1],e[j+2]),b.set(e[j+3],e[j+4],e[j+5]),c.set(e[j+6],e[j+7],e[j+8]),g.set(f[k+0],f[k+1]),h.set(f[k+2],f[k+3]),i.set(f[k+4],f[k+5]),d.copy(a).add(b).add(c).divideScalar(3);let n=m(d);l(g,k+0,a,n),l(h,k+2,b,n),l(i,k+4,c,n)}}function l(a,b,c,d){d<0&&1===a.x&&(f[b]=a.x-1),0===c.x&&0===c.z&&(f[b]=d/2/Math.PI+.5)}function m(a){return Math.atan2(a.z,-a.x)}function n(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}(function(a){let c=new am,d=new am,e=new am;for(let f=0;f<b.length;f+=3)j(b[f+0],c),j(b[f+1],d),j(b[f+2],e),g(c,d,e,a)})(d),function(a){let b=new am;for(let c=0;c<e.length;c+=3)b.x=e[c+0],b.y=e[c+1],b.z=e[c+2],b.normalize().multiplyScalar(a),e[c+0]=b.x,e[c+1]=b.y,e[c+2]=b.z}(c),function(){let a=new am;for(let b=0;b<e.length;b+=3){a.x=e[b+0],a.y=e[b+1],a.z=e[b+2];let c=m(a)/2/Math.PI+.5,d=n(a)/Math.PI+.5;f.push(c,1-d)}k(),h()}(),this.setAttribute("position",new by(e,3)),this.setAttribute("normal",new by(e.slice(),3)),this.setAttribute("uv",new by(f,2)),0===d?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(a){return new fI(a.vertices,a.indices,a.radius,a.details)}}class fJ extends fI{constructor(a=1,b=0){let c=(1+Math.sqrt(5))/2,d=1/c;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b),this.type="DodecahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new fJ(a.radius,a.detail)}}let fK=new am,fL=new am,fM=new am,fN=new bp;class fO extends fC{constructor(a){super(a),this.uuid=I(),this.type="Shape",this.holes=[]}getPointsHoles(a){let b=[];for(let c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b}extractPoints(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}}copy(a){super.copy(a),this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.uuid=this.uuid,a.holes=[];for(let b=0,c=this.holes.length;b<c;b++){let d=this.holes[b];a.holes.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.uuid=a.uuid,this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(new fC().fromJSON(d))}return this}}let fP={triangulate:function(a,b,c=2){let d=b&&b.length,e=d?b[0]*c:a.length,f=fQ(a,0,e,c,!0),g=[];if(!f||f.next===f.prev)return g;let h,i,j,k,l,m,n;if(d&&(f=fX(a,b,f,c)),a.length>80*c){h=j=a[0],i=k=a[1];for(let o=c;o<e;o+=c)l=a[o],m=a[o+1],l<h&&(h=l),m<i&&(i=m),l>j&&(j=l),m>k&&(k=m);n=0!==(n=Math.max(j-h,k-i))?1/n:0}return fS(f,g,c,h,i,n),g}};function fQ(a,b,c,d,e){let f,g;if(e===gi(a,b,c,d)>0)for(f=b;f<c;f+=d)g=gf(f,a[f],a[f+1],g);else for(f=c-d;f>=b;f-=d)g=gf(f,a[f],a[f+1],g);return g&&f7(g,g.next)&&(gg(g),g=g.next),g}function fR(a,b){if(!a)return a;b||(b=a);let c=a,d;do if(d=!1,!c.steiner&&(f7(c,c.next)||0===f6(c.prev,c,c.next))){if(gg(c),(c=b=c.prev)===c.next)break;d=!0}else c=c.next;while(d||c!==b)return b}function fS(a,b,c,d,e,f,g){if(!a)return;!g&&f&&f0(a,d,e,f);let h=a,i,j;for(;a.prev!==a.next;){if(i=a.prev,j=a.next,f?fU(a,d,e,f):fT(a)){b.push(i.i/c),b.push(a.i/c),b.push(j.i/c),gg(a),a=j.next,h=j.next;continue}if((a=j)===h){g?1===g?(a=fV(fR(a),b,c),fS(a,b,c,d,e,f,2)):2===g&&fW(a,b,c,d,e,f):fS(fR(a),b,c,d,e,f,1);break}}}function fT(a){let b=a.prev,c=a,d=a.next;if(f6(b,c,d)>=0)return!1;let e=a.next.next;for(;e!==a.prev;){if(f4(b.x,b.y,c.x,c.y,d.x,d.y,e.x,e.y)&&f6(e.prev,e,e.next)>=0)return!1;e=e.next}return!0}function fU(a,b,c,d){let e=a.prev,f=a,g=a.next;if(f6(e,f,g)>=0)return!1;let h=e.x<f.x?e.x<g.x?e.x:g.x:f.x<g.x?f.x:g.x,i=e.y<f.y?e.y<g.y?e.y:g.y:f.y<g.y?f.y:g.y,j=e.x>f.x?e.x>g.x?e.x:g.x:f.x>g.x?f.x:g.x,k=e.y>f.y?e.y>g.y?e.y:g.y:f.y>g.y?f.y:g.y,l=f2(h,i,b,c,d),m=f2(j,k,b,c,d),n=a.prevZ,o=a.nextZ;for(;n&&n.z>=l&&o&&o.z<=m;){if(n!==a.prev&&n!==a.next&&f4(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&f6(n.prev,n,n.next)>=0||(n=n.prevZ,o!==a.prev&&o!==a.next&&f4(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&f6(o.prev,o,o.next)>=0))return!1;o=o.nextZ}for(;n&&n.z>=l;){if(n!==a.prev&&n!==a.next&&f4(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&f6(n.prev,n,n.next)>=0)return!1;n=n.prevZ}for(;o&&o.z<=m;){if(o!==a.prev&&o!==a.next&&f4(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&f6(o.prev,o,o.next)>=0)return!1;o=o.nextZ}return!0}function fV(a,b,c){let d=a;do{let e=d.prev,f=d.next.next;!f7(e,f)&&f8(e,d,d.next,f)&&gc(e,f)&&gc(f,e)&&(b.push(e.i/c),b.push(d.i/c),b.push(f.i/c),gg(d),gg(d.next),d=a=f),d=d.next}while(d!==a)return fR(d)}function fW(a,b,c,d,e,f){let g=a;do{let h=g.next.next;for(;h!==g.prev;){if(g.i!==h.i&&f5(g,h)){let i=ge(g,h);g=fR(g,g.next),i=fR(i,i.next),fS(g,b,c,d,e,f),fS(i,b,c,d,e,f);return}h=h.next}g=g.next}while(g!==a)}function fX(a,b,c,d){let e=[],f,g,h,i,j;for(f=0,g=b.length;f<g;f++)h=b[f]*d,i=f<g-1?b[f+1]*d:a.length,j=fQ(a,h,i,d,!1),j===j.next&&(j.steiner=!0),e.push(f3(j));for(e.sort(fY),f=0;f<e.length;f++)fZ(e[f],c),c=fR(c,c.next);return c}function fY(a,b){return a.x-b.x}function fZ(a,b){if(b=f$(a,b)){let c=ge(b,a);fR(b,b.next),fR(c,c.next)}}function f$(a,b){let c=b,d=a.x,e=a.y,f=-1/0,g;do{if(e<=c.y&&e>=c.next.y&&c.next.y!==c.y){let h=c.x+(e-c.y)*(c.next.x-c.x)/(c.next.y-c.y);if(h<=d&&h>f){if(f=h,h===d){if(e===c.y)return c;if(e===c.next.y)return c.next}g=c.x<c.next.x?c:c.next}}c=c.next}while(c!==b)if(!g)return null;if(d===f)return g;let i=g,j=g.x,k=g.y,l=1/0,m;c=g;do d>=c.x&&c.x>=j&&d!==c.x&&f4(e<k?d:f,e,j,k,e<k?f:d,e,c.x,c.y)&&(m=Math.abs(e-c.y)/(d-c.x),gc(c,a)&&(m<l||m===l&&(c.x>g.x||c.x===g.x&&f_(g,c)))&&(g=c,l=m)),c=c.next;while(c!==i)return g}function f_(a,b){return 0>f6(a.prev,a,b.prev)&&0>f6(b.next,a,a.next)}function f0(a,b,c,d){let e=a;do null===e.z&&(e.z=f2(e.x,e.y,b,c,d)),e.prevZ=e.prev,e.nextZ=e.next,e=e.next;while(e!==a)e.prevZ.nextZ=null,e.prevZ=null,f1(e)}function f1(a){let b,c,d,e,f,g,h,i,j=1;do{for(c=a,a=null,f=null,g=0;c;){for(g++,d=c,h=0,b=0;b<j&&(h++,d=d.nextZ);b++);for(i=j;h>0||i>0&&d;)0!==h&&(0===i||!d||c.z<=d.z)?(e=c,c=c.nextZ,h--):(e=d,d=d.nextZ,i--),f?f.nextZ=e:a=e,e.prevZ=f,f=e;c=d}f.nextZ=null,j*=2}while(g>1)return a}function f2(a,b,c,d,e){return a=32767*(a-c)*e,b=32767*(b-d)*e,a=(a|a<<8)&16711935,a=(a|a<<4)&252645135,a=(a|a<<2)&858993459,a=(a|a<<1)&1431655765,b=(b|b<<8)&16711935,b=(b|b<<4)&252645135,b=(b|b<<2)&858993459,b=(b|b<<1)&1431655765,a|b<<1}function f3(a){let b=a,c=a;do(b.x<c.x||b.x===c.x&&b.y<c.y)&&(c=b),b=b.next;while(b!==a)return c}function f4(a,b,c,d,e,f,g,h){return(e-g)*(b-h)-(a-g)*(f-h)>=0&&(a-g)*(d-h)-(c-g)*(b-h)>=0&&(c-g)*(f-h)-(e-g)*(d-h)>=0}function f5(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!gb(a,b)&&(gc(a,b)&&gc(b,a)&&gd(a,b)&&(f6(a.prev,a,b.prev)||f6(a,b.prev,b))||f7(a,b)&&f6(a.prev,a,a.next)>0&&f6(b.prev,b,b.next)>0)}function f6(a,b,c){return(b.y-a.y)*(c.x-b.x)-(b.x-a.x)*(c.y-b.y)}function f7(a,b){return a.x===b.x&&a.y===b.y}function f8(a,b,c,d){let e=ga(f6(a,b,c)),f=ga(f6(a,b,d)),g=ga(f6(c,d,a)),h=ga(f6(c,d,b));return!!(e!==f&&g!==h||0===e&&f9(a,c,b)||0===f&&f9(a,d,b)||0===g&&f9(c,a,d)||0===h&&f9(c,b,d))}function f9(a,b,c){return b.x<=Math.max(a.x,c.x)&&b.x>=Math.min(a.x,c.x)&&b.y<=Math.max(a.y,c.y)&&b.y>=Math.min(a.y,c.y)}function ga(a){return a>0?1:a<0?-1:0}function gb(a,b){let c=a;do{if(c.i!==a.i&&c.next.i!==a.i&&c.i!==b.i&&c.next.i!==b.i&&f8(c,c.next,a,b))return!0;c=c.next}while(c!==a)return!1}function gc(a,b){return 0>f6(a.prev,a,a.next)?f6(a,b,a.next)>=0&&f6(a,a.prev,b)>=0:0>f6(a,b,a.prev)||0>f6(a,a.next,b)}function gd(a,b){let c=a,d=!1,e=(a.x+b.x)/2,f=(a.y+b.y)/2;do c.y>f!=c.next.y>f&&c.next.y!==c.y&&e<(c.next.x-c.x)*(f-c.y)/(c.next.y-c.y)+c.x&&(d=!d),c=c.next;while(c!==a)return d}function ge(a,b){let c=new gh(a.i,a.x,a.y),d=new gh(b.i,b.x,b.y),e=a.next,f=b.prev;return a.next=b,b.prev=a,c.next=e,e.prev=c,d.next=c,c.prev=d,f.next=d,d.prev=f,d}function gf(a,b,c,d){let e=new gh(a,b,c);return d?(e.next=d.next,e.prev=d,d.next.prev=e,d.next=e):(e.prev=e,e.next=e),e}function gg(a){a.next.prev=a.prev,a.prev.next=a.next,a.prevZ&&(a.prevZ.nextZ=a.nextZ),a.nextZ&&(a.nextZ.prevZ=a.prevZ)}function gh(a,b,c){this.i=a,this.x=b,this.y=c,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function gi(a,b,c,d){let e=0;for(let f=b,g=c-d;f<c;f+=d)e+=(a[g]-a[f])*(a[f+1]+a[g+1]),g=f;return e}class gj{static area(a){let b=a.length,c=0;for(let d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return .5*c}static isClockWise(a){return 0>gj.area(a)}static triangulateShape(a,b){let c=[],d=[],e=[];gk(a),gl(c,a);let f=a.length;b.forEach(gk);for(let g=0;g<b.length;g++)d.push(f),f+=b[g].length,gl(c,b[g]);let h=fP.triangulate(c,d);for(let i=0;i<h.length;i+=3)e.push(h.slice(i,i+3));return e}}function gk(a){let b=a.length;b>2&&a[b-1].equals(a[0])&&a.pop()}function gl(a,b){for(let c=0;c<b.length;c++)a.push(b[c].x),a.push(b[c].y)}class gm extends bG{constructor(a=new fO([new N(.5,.5),new N(-0.5,.5),new N(-0.5,-0.5),new N(.5,-0.5)]),b={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:a,options:b},a=Array.isArray(a)?a:[a];let c=this,d=[],e=[];for(let f=0,g=a.length;f<g;f++){let h=a[f];i(h)}function i(a){let f=[],g=void 0!==b.curveSegments?b.curveSegments:12,h=void 0!==b.steps?b.steps:1,i=void 0!==b.depth?b.depth:1,j=void 0===b.bevelEnabled||b.bevelEnabled,k=void 0!==b.bevelThickness?b.bevelThickness:.2,l=void 0!==b.bevelSize?b.bevelSize:k-.1,m=void 0!==b.bevelOffset?b.bevelOffset:0,n=void 0!==b.bevelSegments?b.bevelSegments:3,o=b.extrudePath,p=void 0!==b.UVGenerator?b.UVGenerator:gn;void 0!==b.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),i=b.amount);let q,r=!1,s,t,u,v;o&&(q=o.getSpacedPoints(h),r=!0,j=!1,s=o.computeFrenetFrames(h,!1),t=new am,u=new am,v=new am),j||(n=0,k=0,l=0,m=0);let w=a.extractPoints(g),x=w.shape,y=w.holes,z=!gj.isClockWise(x);if(z){x=x.reverse();for(let A=0,B=y.length;A<B;A++){let C=y[A];gj.isClockWise(C)&&(y[A]=C.reverse())}}let D=gj.triangulateShape(x,y),E=x;for(let F=0,G=y.length;F<G;F++){let H=y[F];x=x.concat(H)}function I(a,b,c){return b||console.error("THREE.ExtrudeGeometry: vec does not exist"),b.clone().multiplyScalar(c).add(a)}let J=x.length,K=D.length;function L(a,b,c){let d,e,f,g=a.x-b.x,h=a.y-b.y,i=c.x-a.x,j=c.y-a.y,k=g*g+h*h,l=g*j-h*i;if(Math.abs(l)>Number.EPSILON){let m=Math.sqrt(k),n=Math.sqrt(i*i+j*j),o=b.x-h/m,p=b.y+g/m,q=c.x-j/n,r=c.y+i/n,s=((q-o)*j-(r-p)*i)/(g*j-h*i);d=o+g*s-a.x,e=p+h*s-a.y;let t=d*d+e*e;if(t<=2)return new N(d,e);f=Math.sqrt(t/2)}else{let u=!1;g>Number.EPSILON?i>Number.EPSILON&&(u=!0):g< -Number.EPSILON?i< -Number.EPSILON&&(u=!0):Math.sign(h)===Math.sign(j)&&(u=!0),u?(d=-h,e=g,f=Math.sqrt(k)):(d=g,e=h,f=Math.sqrt(k/2))}return new N(d/f,e/f)}let M=[];for(let O=0,P=E.length,Q=P-1,R=O+1;O<P;O++,Q++,R++)Q===P&&(Q=0),R===P&&(R=0),M[O]=L(E[O],E[Q],E[R]);let S=[],T,U=M.concat();for(let V=0,W=y.length;V<W;V++){let X=y[V];T=[];for(let Y=0,Z=X.length,$=Z-1,_=Y+1;Y<Z;Y++,$++,_++)$===Z&&($=0),_===Z&&(_=0),T[Y]=L(X[Y],X[$],X[_]);S.push(T),U=U.concat(T)}for(let aa=0;aa<n;aa++){let ab=aa/n,ac=k*Math.cos(ab*Math.PI/2),ad=l*Math.sin(ab*Math.PI/2)+m;for(let ae=0,af=E.length;ae<af;ae++){let ag=I(E[ae],M[ae],ad);aI(ag.x,ag.y,-ac)}for(let ah=0,ai=y.length;ah<ai;ah++){let aj=y[ah];T=S[ah];for(let ak=0,al=aj.length;ak<al;ak++){let an=I(aj[ak],T[ak],ad);aI(an.x,an.y,-ac)}}}let ao=l+m;for(let ap=0;ap<J;ap++){let aq=j?I(x[ap],U[ap],ao):x[ap];r?(u.copy(s.normals[0]).multiplyScalar(aq.x),t.copy(s.binormals[0]).multiplyScalar(aq.y),v.copy(q[0]).add(u).add(t),aI(v.x,v.y,v.z)):aI(aq.x,aq.y,0)}for(let ar=1;ar<=h;ar++)for(let as=0;as<J;as++){let at=j?I(x[as],U[as],ao):x[as];r?(u.copy(s.normals[ar]).multiplyScalar(at.x),t.copy(s.binormals[ar]).multiplyScalar(at.y),v.copy(q[ar]).add(u).add(t),aI(v.x,v.y,v.z)):aI(at.x,at.y,i/h*ar)}for(let au=n-1;au>=0;au--){let av=au/n,aw=k*Math.cos(av*Math.PI/2),ax=l*Math.sin(av*Math.PI/2)+m;for(let ay=0,az=E.length;ay<az;ay++){let aA=I(E[ay],M[ay],ax);aI(aA.x,aA.y,i+aw)}for(let aB=0,aC=y.length;aB<aC;aB++){let aD=y[aB];T=S[aB];for(let aE=0,aF=aD.length;aE<aF;aE++){let aG=I(aD[aE],T[aE],ax);r?aI(aG.x,aG.y+q[h-1].y,q[h-1].x+aw):aI(aG.x,aG.y,i+aw)}}}function aH(a,b){let c=a.length;for(;--c>=0;){let d=c,e=c-1;e<0&&(e=a.length-1);for(let f=0,g=h+2*n;f<g;f++){let i=J*f,j=J*(f+1),k=b+d+i,l=b+e+i,m=b+e+j,o=b+d+j;aK(k,l,m,o)}}}function aI(a,b,c){f.push(a),f.push(b),f.push(c)}function aJ(a,b,e){aL(a),aL(b),aL(e);let f=d.length/3,g=p.generateTopUV(c,d,f-3,f-2,f-1);aM(g[0]),aM(g[1]),aM(g[2])}function aK(a,b,e,f){aL(a),aL(b),aL(f),aL(b),aL(e),aL(f);let g=d.length/3,h=p.generateSideWallUV(c,d,g-6,g-3,g-2,g-1);aM(h[0]),aM(h[1]),aM(h[3]),aM(h[1]),aM(h[2]),aM(h[3])}function aL(a){d.push(f[3*a+0]),d.push(f[3*a+1]),d.push(f[3*a+2])}function aM(a){e.push(a.x),e.push(a.y)}(function(){let a=d.length/3;if(j){let b=0,e=J*b;for(let f=0;f<K;f++){let g=D[f];aJ(g[2]+e,g[1]+e,g[0]+e)}e=J*(b=h+2*n);for(let i=0;i<K;i++){let k=D[i];aJ(k[0]+e,k[1]+e,k[2]+e)}}else{for(let l=0;l<K;l++){let m=D[l];aJ(m[2],m[1],m[0])}for(let o=0;o<K;o++){let p=D[o];aJ(p[0]+J*h,p[1]+J*h,p[2]+J*h)}}c.addGroup(a,d.length/3-a,0)})(),function(){let a=d.length/3,b=0;aH(E,b),b+=E.length;for(let e=0,f=y.length;e<f;e++){let g=y[e];aH(g,b),b+=g.length}c.addGroup(a,d.length/3-a,1)}()}this.setAttribute("position",new by(d,3)),this.setAttribute("uv",new by(e,2)),this.computeVertexNormals()}toJSON(){let a=super.toJSON(),b=this.parameters.shapes,c=this.parameters.options;return go(b,c,a)}static fromJSON(a,b){let c=[];for(let d=0,e=a.shapes.length;d<e;d++){let f=b[a.shapes[d]];c.push(f)}let g=a.options.extrudePath;return void 0!==g&&(a.options.extrudePath=new fA[g.type]().fromJSON(g)),new gm(c,a.options)}}let gn={generateTopUV:function(a,b,c,d,e){let f=b[3*c],g=b[3*c+1],h=b[3*d],i=b[3*d+1],j=b[3*e],k=b[3*e+1];return[new N(f,g),new N(h,i),new N(j,k)]},generateSideWallUV:function(a,b,c,d,e,f){let g=b[3*c],h=b[3*c+1],i=b[3*c+2],j=b[3*d],k=b[3*d+1],l=b[3*d+2],m=b[3*e],n=b[3*e+1],o=b[3*e+2],p=b[3*f],q=b[3*f+1],r=b[3*f+2];return Math.abs(h-k)<Math.abs(g-j)?[new N(g,1-i),new N(j,1-l),new N(m,1-o),new N(p,1-r)]:[new N(h,1-i),new N(k,1-l),new N(n,1-o),new N(q,1-r)]}};function go(a,b,c){if(c.shapes=[],Array.isArray(a))for(let d=0,e=a.length;d<e;d++){let f=a[d];c.shapes.push(f.uuid)}else c.shapes.push(a.uuid);return c.options=Object.assign({},b),void 0!==b.extrudePath&&(c.options.extrudePath=b.extrudePath.toJSON()),c}class gp extends fI{constructor(a=1,b=0){let c=(1+Math.sqrt(5))/2;super([-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b),this.type="IcosahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new gp(a.radius,a.detail)}}class gq extends fI{constructor(a=1,b=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b),this.type="OctahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new gq(a.radius,a.detail)}}class gr extends bG{constructor(a=.5,b=1,c=8,d=1,e=0,f=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f},c=Math.max(3,c),d=Math.max(1,d);let g=[],h=[],i=[],j=[],k=a,l=(b-a)/d,m=new am,n=new N;for(let o=0;o<=d;o++){for(let p=0;p<=c;p++){let q=e+p/c*f;m.x=k*Math.cos(q),m.y=k*Math.sin(q),h.push(m.x,m.y,m.z),i.push(0,0,1),n.x=(m.x/b+1)/2,n.y=(m.y/b+1)/2,j.push(n.x,n.y)}k+=l}for(let r=0;r<d;r++){let s=r*(c+1);for(let t=0;t<c;t++){let u=t+s,v=u,w=u+c+1,x=u+c+2,y=u+1;g.push(v,w,y),g.push(w,x,y)}}this.setIndex(g),this.setAttribute("position",new by(h,3)),this.setAttribute("normal",new by(i,3)),this.setAttribute("uv",new by(j,2))}static fromJSON(a){return new gr(a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength)}}class gs extends bG{constructor(a=new fO([new N(0,.5),new N(-0.5,-0.5),new N(.5,-0.5)]),b=12){super(),this.type="ShapeGeometry",this.parameters={shapes:a,curveSegments:b};let c=[],d=[],e=[],f=[],g=0,h=0;if(!1===Array.isArray(a))j(a);else for(let i=0;i<a.length;i++)j(a[i]),this.addGroup(g,h,i),g+=h,h=0;function j(a){let g=d.length/3,i=a.extractPoints(b),j=i.shape,k=i.holes;!1===gj.isClockWise(j)&&(j=j.reverse());for(let l=0,m=k.length;l<m;l++){let n=k[l];!0===gj.isClockWise(n)&&(k[l]=n.reverse())}let o=gj.triangulateShape(j,k);for(let p=0,q=k.length;p<q;p++){let r=k[p];j=j.concat(r)}for(let s=0,t=j.length;s<t;s++){let u=j[s];d.push(u.x,u.y,0),e.push(0,0,1),f.push(u.x,u.y)}for(let v=0,w=o.length;v<w;v++){let x=o[v],y=x[0]+g,z=x[1]+g,A=x[2]+g;c.push(y,z,A),h+=3}}this.setIndex(c),this.setAttribute("position",new by(d,3)),this.setAttribute("normal",new by(e,3)),this.setAttribute("uv",new by(f,2))}toJSON(){let a=super.toJSON(),b=this.parameters.shapes;return gt(b,a)}static fromJSON(a,b){let c=[];for(let d=0,e=a.shapes.length;d<e;d++){let f=b[a.shapes[d]];c.push(f)}return new gs(c,a.curveSegments)}}function gt(a,b){if(b.shapes=[],Array.isArray(a))for(let c=0,d=a.length;c<d;c++){let e=a[c];b.shapes.push(e.uuid)}else b.shapes.push(a.uuid);return b}class gu extends bG{constructor(a=1,b=32,c=16,d=0,e=2*Math.PI,f=0,g=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g},b=Math.max(3,Math.floor(b)),c=Math.max(2,Math.floor(c));let h=Math.min(f+g,Math.PI),i=0,j=[],k=new am,l=new am,m=[],n=[],o=[],p=[];for(let q=0;q<=c;q++){let r=[],s=q/c,t=0;0==q&&0==f?t=.5/b:q==c&&h==Math.PI&&(t=-0.5/b);for(let u=0;u<=b;u++){let v=u/b;k.x=-a*Math.cos(d+v*e)*Math.sin(f+s*g),k.y=a*Math.cos(f+s*g),k.z=a*Math.sin(d+v*e)*Math.sin(f+s*g),n.push(k.x,k.y,k.z),l.copy(k).normalize(),o.push(l.x,l.y,l.z),p.push(v+t,1-s),r.push(i++)}j.push(r)}for(let w=0;w<c;w++)for(let x=0;x<b;x++){let y=j[w][x+1],z=j[w][x],A=j[w+1][x],B=j[w+1][x+1];(0!==w||f>0)&&m.push(y,z,B),(w!==c-1||h<Math.PI)&&m.push(z,A,B)}this.setIndex(m),this.setAttribute("position",new by(n,3)),this.setAttribute("normal",new by(o,3)),this.setAttribute("uv",new by(p,2))}static fromJSON(a){return new gu(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)}}class gv extends fI{constructor(a=1,b=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b),this.type="TetrahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new gv(a.radius,a.detail)}}class gw extends bG{constructor(a=1,b=.4,c=8,d=6,e=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},c=Math.floor(c),d=Math.floor(d);let f=[],g=[],h=[],i=[],j=new am,k=new am,l=new am;for(let m=0;m<=c;m++)for(let n=0;n<=d;n++){let o=n/d*e,p=m/c*Math.PI*2;k.x=(a+b*Math.cos(p))*Math.cos(o),k.y=(a+b*Math.cos(p))*Math.sin(o),k.z=b*Math.sin(p),g.push(k.x,k.y,k.z),j.x=a*Math.cos(o),j.y=a*Math.sin(o),l.subVectors(k,j).normalize(),h.push(l.x,l.y,l.z),i.push(n/d),i.push(m/c)}for(let q=1;q<=c;q++)for(let r=1;r<=d;r++){let s=(d+1)*q+r-1,t=(d+1)*(q-1)+r-1,u=(d+1)*(q-1)+r,v=(d+1)*q+r;f.push(s,t,v),f.push(t,u,v)}this.setIndex(f),this.setAttribute("position",new by(g,3)),this.setAttribute("normal",new by(h,3)),this.setAttribute("uv",new by(i,2))}static fromJSON(a){return new gw(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc)}}class gx extends bG{constructor(a=1,b=.4,c=64,d=8,e=2,f=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f},c=Math.floor(c),d=Math.floor(d);let g=[],h=[],i=[],j=[],k=new am,l=new am,m=new am,n=new am,o=new am,p=new am,q=new am;for(let r=0;r<=c;++r){let s=r/c*e*Math.PI*2;D(s,e,f,a,m),D(s+.01,e,f,a,n),p.subVectors(n,m),q.addVectors(n,m),o.crossVectors(p,q),q.crossVectors(o,p),o.normalize(),q.normalize();for(let t=0;t<=d;++t){let u=t/d*Math.PI*2,v=-b*Math.cos(u),w=b*Math.sin(u);k.x=m.x+(v*q.x+w*o.x),k.y=m.y+(v*q.y+w*o.y),k.z=m.z+(v*q.z+w*o.z),h.push(k.x,k.y,k.z),l.subVectors(k,m).normalize(),i.push(l.x,l.y,l.z),j.push(r/c),j.push(t/d)}}for(let x=1;x<=c;x++)for(let y=1;y<=d;y++){let z=(d+1)*(x-1)+(y-1),A=(d+1)*x+(y-1),B=(d+1)*x+y,C=(d+1)*(x-1)+y;g.push(z,A,C),g.push(A,B,C)}function D(a,b,c,d,e){let f=c/b*a,g=Math.cos(f);e.x=d*(2+g)*.5*Math.cos(a),e.y=d*(2+g)*Math.sin(a)*.5,e.z=d*Math.sin(f)*.5}this.setIndex(g),this.setAttribute("position",new by(h,3)),this.setAttribute("normal",new by(i,3)),this.setAttribute("uv",new by(j,2))}static fromJSON(a){return new gx(a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q)}}class gy extends bG{constructor(a=new fy(new am(-1,-1,0),new am(-1,1,0),new am(1,1,0)),b=64,c=1,d=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};let f=a.computeFrenetFrames(b,e);this.tangents=f.tangents,this.normals=f.normals,this.binormals=f.binormals;let g=new am,h=new am,i=new N,j=new am,k=[],l=[],m=[],n=[];function o(e){j=a.getPointAt(e/b,j);let i=f.normals[e],m=f.binormals[e];for(let n=0;n<=d;n++){let o=n/d*Math.PI*2,p=Math.sin(o),q=-Math.cos(o);h.x=q*i.x+p*m.x,h.y=q*i.y+p*m.y,h.z=q*i.z+p*m.z,h.normalize(),l.push(h.x,h.y,h.z),g.x=j.x+c*h.x,g.y=j.y+c*h.y,g.z=j.z+c*h.z,k.push(g.x,g.y,g.z)}}function p(){for(let a=1;a<=b;a++)for(let c=1;c<=d;c++){let e=(d+1)*(a-1)+(c-1),f=(d+1)*a+(c-1),g=(d+1)*a+c,h=(d+1)*(a-1)+c;n.push(e,f,h),n.push(f,g,h)}}function q(){for(let a=0;a<=b;a++)for(let c=0;c<=d;c++)i.x=a/b,i.y=c/d,m.push(i.x,i.y)}(function(){for(let a=0;a<b;a++)o(a);o(!1===e?b:0),q(),p()})(),this.setIndex(n),this.setAttribute("position",new by(k,3)),this.setAttribute("normal",new by(l,3)),this.setAttribute("uv",new by(m,2))}toJSON(){let a=super.toJSON();return a.path=this.parameters.path.toJSON(),a}static fromJSON(a){return new gy(new fA[a.path.type]().fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed)}}function gz(a,b,c){let d=`${a.x},${a.y},${a.z}-${b.x},${b.y},${b.z}`,e=`${b.x},${b.y},${b.z}-${a.x},${a.y},${a.z}`;return!0!==c.has(d)&& !0!==c.has(e)&&(c.add(d),c.add(e),!0)}(class extends bG{constructor(a=null,b=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:a,thresholdAngle:b},null!==a){let c=4,d=Math.pow(10,c),e=Math.cos(G*b),f=a.getIndex(),g=a.getAttribute("position"),h=f?f.count:g.count,i=[0,0,0],j=["a","b","c"],k=[,,,],l={},m=[];for(let n=0;n<h;n+=3){f?(i[0]=f.getX(n),i[1]=f.getX(n+1),i[2]=f.getX(n+2)):(i[0]=n,i[1]=n+1,i[2]=n+2);let{a:o,b:p,c:q}=fN;if(o.fromBufferAttribute(g,i[0]),p.fromBufferAttribute(g,i[1]),q.fromBufferAttribute(g,i[2]),fN.getNormal(fM),k[0]=`${Math.round(o.x*d)},${Math.round(o.y*d)},${Math.round(o.z*d)}`,k[1]=`${Math.round(p.x*d)},${Math.round(p.y*d)},${Math.round(p.z*d)}`,k[2]=`${Math.round(q.x*d)},${Math.round(q.y*d)},${Math.round(q.z*d)}`,k[0]!==k[1]&&k[1]!==k[2]&&k[2]!==k[0])for(let r=0;r<3;r++){let s=(r+1)%3,t=k[r],u=k[s],v=fN[j[r]],w=fN[j[s]],x=`${t}_${u}`,y=`${u}_${t}`;y in l&&l[y]?(fM.dot(l[y].normal)<=e&&(m.push(v.x,v.y,v.z),m.push(w.x,w.y,w.z)),l[y]=null):x in l||(l[x]={index0:i[r],index1:i[s],normal:fM.clone()})}}for(let z in l)if(l[z]){let{index0:A,index1:B}=l[z];fK.fromBufferAttribute(g,A),fL.fromBufferAttribute(g,B),m.push(fK.x,fK.y,fK.z),m.push(fL.x,fL.y,fL.z)}this.setAttribute("position",new by(m,3))}}}),class extends bG{constructor(a=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:a},null!==a){let b=[],c=new Set,d=new am,e=new am;if(null!==a.index){let f=a.attributes.position,g=a.index,h=a.groups;0===h.length&&(h=[{start:0,count:g.count,materialIndex:0}]);for(let i=0,j=h.length;i<j;++i){let k=h[i],l=k.start,m=k.count;for(let n=l,o=l+m;n<o;n+=3)for(let p=0;p<3;p++){let q=g.getX(n+p),r=g.getX(n+(p+1)%3);d.fromBufferAttribute(f,q),e.fromBufferAttribute(f,r),!0===gz(d,e,c)&&(b.push(d.x,d.y,d.z),b.push(e.x,e.y,e.z))}}}else{let s=a.attributes.position;for(let t=0,u=s.count/3;t<u;t++)for(let v=0;v<3;v++){let w=3*t+v,x=3*t+(v+1)%3;d.fromBufferAttribute(s,w),e.fromBufferAttribute(s,x),!0===gz(d,e,c)&&(b.push(d.x,d.y,d.z),b.push(e.x,e.y,e.z))}}this.setAttribute("position",new by(b,3))}}};class gA extends null{constructor(a){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ab(0),this.transparent=!0,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.fog=a.fog,this}}class gB extends null{constructor(a){super(a),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class gC extends null{constructor(a){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ab(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ab(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=A,this.normalScale=new N(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.defines={STANDARD:""},this.color.copy(a.color),this.roughness=a.roughness,this.metalness=a.metalness,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.roughnessMap=a.roughnessMap,this.metalnessMap=a.metalnessMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.envMapIntensity=a.envMapIntensity,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this.fog=a.fog,this}}class gD extends null{constructor(a){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new N(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return J(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(a){this.ior=(1+.4*a)/(1-.4*a)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ab(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ab(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ab(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(a)}get sheen(){return this._sheen}set sheen(a){this._sheen>0!=a>0&&this.version++,this._sheen=a}get clearcoat(){return this._clearcoat}set clearcoat(a){this._clearcoat>0!=a>0&&this.version++,this._clearcoat=a}get iridescence(){return this._iridescence}set iridescence(a){this._iridescence>0!=a>0&&this.version++,this._iridescence=a}get transmission(){return this._transmission}set transmission(a){this._transmission>0!=a>0&&this.version++,this._transmission=a}copy(a){return super.copy(a),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=a.clearcoat,this.clearcoatMap=a.clearcoatMap,this.clearcoatRoughness=a.clearcoatRoughness,this.clearcoatRoughnessMap=a.clearcoatRoughnessMap,this.clearcoatNormalMap=a.clearcoatNormalMap,this.clearcoatNormalScale.copy(a.clearcoatNormalScale),this.ior=a.ior,this.iridescence=a.iridescence,this.iridescenceMap=a.iridescenceMap,this.iridescenceIOR=a.iridescenceIOR,this.iridescenceThicknessRange=[...a.iridescenceThicknessRange],this.iridescenceThicknessMap=a.iridescenceThicknessMap,this.sheen=a.sheen,this.sheenColor.copy(a.sheenColor),this.sheenColorMap=a.sheenColorMap,this.sheenRoughness=a.sheenRoughness,this.sheenRoughnessMap=a.sheenRoughnessMap,this.transmission=a.transmission,this.transmissionMap=a.transmissionMap,this.thickness=a.thickness,this.thicknessMap=a.thicknessMap,this.attenuationDistance=a.attenuationDistance,this.attenuationColor.copy(a.attenuationColor),this.specularIntensity=a.specularIntensity,this.specularIntensityMap=a.specularIntensityMap,this.specularColor.copy(a.specularColor),this.specularColorMap=a.specularColorMap,this}}class gE extends null{constructor(a){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ab(16777215),this.specular=new ab(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ab(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=A,this.normalScale=new N(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=n,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.specular.copy(a.specular),this.shininess=a.shininess,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this.fog=a.fog,this}}class gF extends null{constructor(a){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ab(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ab(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=A,this.normalScale=new N(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.gradientMap=a.gradientMap,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.fog=a.fog,this}}class gG extends null{constructor(a){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=A,this.normalScale=new N(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.flatShading=a.flatShading,this}}class gH extends null{constructor(a){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ab(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ab(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=n,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.fog=a.fog,this}}class gI extends null{constructor(a){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ab(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=A,this.normalScale=new N(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.defines={MATCAP:""},this.color.copy(a.color),this.matcap=a.matcap,this.map=a.map,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.flatShading=a.flatShading,this.fog=a.fog,this}}class gJ extends null{constructor(a){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(a)}copy(a){return super.copy(a),this.scale=a.scale,this.dashSize=a.dashSize,this.gapSize=a.gapSize,this}}let gK={arraySlice:function(a,b,c){return gK.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return a&&(c||a.constructor!==b)?"number"==typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a):a},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){let b=a.length,c=Array(b);for(let d=0;d!==b;++d)c[d]=d;return c.sort(function(b,c){return a[b]-a[c]}),c},sortedArray:function(a,b,c){let d=a.length,e=new a.constructor(d);for(let f=0,g=0;g!==d;++f){let h=c[f]*b;for(let i=0;i!==b;++i)e[g++]=a[h+i]}return e},flattenJSON:function(a,b,c,d){let e=1,f=a[0];for(;void 0!==f&& void 0===f[d];)f=a[e++];if(void 0===f)return;let g=f[d];if(void 0!==g){if(Array.isArray(g))do void 0!==(g=f[d])&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)else if(void 0!==g.toArray)do void 0!==(g=f[d])&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f)else do void 0!==(g=f[d])&&(b.push(f.time),c.push(g)),f=a[e++];while(void 0!==f)}},subclip:function(a,b,c,d,e=30){let f=a.clone();f.name=b;let g=[];for(let h=0;h<f.tracks.length;++h){let i=f.tracks[h],j=i.getValueSize(),k=[],l=[];for(let m=0;m<i.times.length;++m){let n=i.times[m]*e;if(!(n<c)&&!(n>=d)){k.push(i.times[m]);for(let o=0;o<j;++o)l.push(i.values[m*j+o])}}0!==k.length&&(i.times=gK.convertArray(k,i.times.constructor),i.values=gK.convertArray(l,i.values.constructor),g.push(i))}f.tracks=g;let p=1/0;for(let q=0;q<f.tracks.length;++q)p>f.tracks[q].times[0]&&(p=f.tracks[q].times[0]);for(let r=0;r<f.tracks.length;++r)f.tracks[r].shift(-1*p);return f.resetDuration(),f},makeClipAdditive:function(a,b=0,c=a,d=30){d<=0&&(d=30);let e=c.tracks.length,f=b/d;for(let g=0;g<e;++g){let h=c.tracks[g],i=h.ValueTypeName;if("bool"===i||"string"===i)continue;let j=a.tracks.find(function(a){return a.name===h.name&&a.ValueTypeName===i});if(void 0===j)continue;let k=0,l=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(k=l/3);let m=0,n=j.getValueSize();j.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=n/3);let o=h.times.length-1,p;if(f<=h.times[0]){let q=k,r=l-k;p=gK.arraySlice(h.values,q,r)}else if(f>=h.times[o]){let s=o*l+k,t=s+l-k;p=gK.arraySlice(h.values,s,t)}else{let u=h.createInterpolant(),v=k,w=l-k;u.evaluate(f),p=gK.arraySlice(u.resultBuffer,v,w)}if("quaternion"===i){let x=new al().fromArray(p).normalize().conjugate();x.toArray(p)}let y=j.times.length;for(let z=0;z<y;++z){let A=z*n+m;if("quaternion"===i)al.multiplyQuaternionsFlat(j.values,A,p,0,j.values,A);else{let B=n-2*m;for(let C=0;C<B;++C)j.values[A+C]-=p[C]}}}return a.blendMode=2501,a}};class gL{constructor(a,b,c,d){this.parameterPositions=a,this._cachedIndex=0,this.resultBuffer=void 0!==d?d:new b.constructor(c),this.sampleValues=b,this.valueSize=c,this.settings=null,this.DefaultSettings_={}}evaluate(a){let b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];validate_interval:{seek:{let f;linear_scan:{forward_scan:if(!(a<d)){for(let g=c+2;;){if(void 0===d){if(a<e)break forward_scan;return c=b.length,this._cachedIndex=c,this.copySampleValue_(c-1)}if(c===g)break;if(e=d,a<(d=b[++c]))break seek}f=b.length;break linear_scan}if(!(a>=e)){let h=b[1];a<h&&(c=2,e=h);for(let i=c-2;;){if(void 0===e)return this._cachedIndex=0,this.copySampleValue_(0);if(c===i)break;if(d=e,a>=(e=b[--c-1]))break seek}f=c,c=0;break linear_scan}break validate_interval}for(;c<f;){let j=c+f>>>1;a<b[j]?f=j:c=j+1}if(d=b[c],e=b[c-1],void 0===e)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===d)return c=b.length,this._cachedIndex=c,this.copySampleValue_(c-1)}this._cachedIndex=c,this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(a){let b=this.resultBuffer,c=this.sampleValues,d=this.valueSize,e=a*d;for(let f=0;f!==d;++f)b[f]=c[e+f];return b}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class gM extends gL{constructor(a,b,c,d){super(a,b,c,d),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(a,b,c){let d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=a,g=2*b-c;break;case 2402:e=d.length-2,g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:f=a,h=2*c-b;break;case 2402:f=1,h=c+d[1]-d[0];break;default:f=a-1,h=b}let i=(c-b)*.5,j=this.valueSize;this._weightPrev=i/(b-g),this._weightNext=i/(h-c),this._offsetPrev=e*j,this._offsetNext=f*j}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=this._offsetPrev,k=this._offsetNext,l=this._weightPrev,m=this._weightNext,n=(c-b)/(d-b),o=n*n,p=o*n,q=-l*p+2*l*o-l*n,r=(1+l)*p+(-1.5-2*l)*o+(-0.5+l)*n+1,s=(-1-m)*p+(1.5+m)*o+.5*n,t=m*p-m*o;for(let u=0;u!==g;++u)e[u]=q*f[j+u]+r*f[i+u]+s*f[h+u]+t*f[k+u];return e}}class gN extends gL{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=(c-b)/(d-b),k=1-j;for(let l=0;l!==g;++l)e[l]=f[i+l]*k+f[h+l]*j;return e}}class gO extends gL{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a){return this.copySampleValue_(a-1)}}class gP{constructor(a,b,c,d){if(void 0===a)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===b||0===b.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a,this.times=gK.convertArray(b,this.TimeBufferType),this.values=gK.convertArray(c,this.ValueBufferType),this.setInterpolation(d||this.DefaultInterpolation)}static toJSON(a){let b=a.constructor,c;if(b.toJSON!==this.toJSON)c=b.toJSON(a);else{c={name:a.name,times:gK.convertArray(a.times,Array),values:gK.convertArray(a.values,Array)};let d=a.getInterpolation();d!==a.DefaultInterpolation&&(c.interpolation=d)}return c.type=a.ValueTypeName,c}InterpolantFactoryMethodDiscrete(a){return new gO(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodLinear(a){return new gN(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodSmooth(a){return new gM(this.times,this.values,this.getValueSize(),a)}setInterpolation(a){let b;switch(a){case 2300:b=this.InterpolantFactoryMethodDiscrete;break;case 2301:b=this.InterpolantFactoryMethodLinear;break;case 2302:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){let c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(c)}return console.warn("THREE.KeyframeTrack:",c),this}return this.createInterpolant=b,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(a){if(0!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]+=a}return this}scale(a){if(1!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]*=a}return this}trim(a,b){let c=this.times,d=c.length,e=0,f=d-1;for(;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;if(++f,0!==e||f!==d){e>=f&&(e=(f=Math.max(f,1))-1);let g=this.getValueSize();this.times=gK.arraySlice(c,e,f),this.values=gK.arraySlice(this.values,e*g,f*g)}return this}validate(){let a=!0,b=this.getValueSize();b-Math.floor(b)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),a=!1);let c=this.times,d=this.values,e=c.length;0===e&&(console.error("THREE.KeyframeTrack: Track is empty.",this),a=!1);let f=null;for(let g=0;g!==e;g++){let h=c[g];if("number"==typeof h&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,g,h),a=!1;break}if(null!==f&&f>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,g,h,f),a=!1;break}f=h}if(void 0!==d&&gK.isTypedArray(d))for(let i=0,j=d.length;i!==j;++i){let k=d[i];if(isNaN(k)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,k),a=!1;break}}return a}optimize(){let a=gK.arraySlice(this.times),b=gK.arraySlice(this.values),c=this.getValueSize(),d=2302===this.getInterpolation(),e=a.length-1,f=1;for(let g=1;g<e;++g){let h=!1,i=a[g],j=a[g+1];if(i!==j&&(1!==g||i!==a[0])){if(d)h=!0;else{let k=g*c,l=k-c,m=k+c;for(let n=0;n!==c;++n){let o=b[k+n];if(o!==b[l+n]||o!==b[m+n]){h=!0;break}}}}if(h){if(g!==f){a[f]=a[g];let p=g*c,q=f*c;for(let r=0;r!==c;++r)b[q+r]=b[p+r]}++f}}if(e>0){a[f]=a[e];for(let s=e*c,t=f*c,u=0;u!==c;++u)b[t+u]=b[s+u];++f}return f!==a.length?(this.times=gK.arraySlice(a,0,f),this.values=gK.arraySlice(b,0,f*c)):(this.times=a,this.values=b),this}clone(){let a=gK.arraySlice(this.times,0),b=gK.arraySlice(this.values,0),c=this.constructor,d=new c(this.name,a,b);return d.createInterpolant=this.createInterpolant,d}}gP.prototype.TimeBufferType=Float32Array,gP.prototype.ValueBufferType=Float32Array,gP.prototype.DefaultInterpolation=2301;class gQ extends gP{}gQ.prototype.ValueTypeName="bool",gQ.prototype.ValueBufferType=Array,gQ.prototype.DefaultInterpolation=2300,gQ.prototype.InterpolantFactoryMethodLinear=void 0,gQ.prototype.InterpolantFactoryMethodSmooth=void 0;class gR extends gP{}gR.prototype.ValueTypeName="color";class gS extends gP{}gS.prototype.ValueTypeName="number";class gT extends gL{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=(c-b)/(d-b),i=a*g;for(let j=i+g;i!==j;i+=4)al.slerpFlat(e,0,f,i-g,f,i,h);return e}}class gU extends gP{InterpolantFactoryMethodLinear(a){return new gT(this.times,this.values,this.getValueSize(),a)}}gU.prototype.ValueTypeName="quaternion",gU.prototype.DefaultInterpolation=2301,gU.prototype.InterpolantFactoryMethodSmooth=void 0;class gV extends gP{}gV.prototype.ValueTypeName="string",gV.prototype.ValueBufferType=Array,gV.prototype.DefaultInterpolation=2300,gV.prototype.InterpolantFactoryMethodLinear=void 0,gV.prototype.InterpolantFactoryMethodSmooth=void 0;class gW extends gP{}gW.prototype.ValueTypeName="vector";class gX{constructor(a,b=-1,c,d=2500){this.name=a,this.tracks=c,this.duration=b,this.blendMode=d,this.uuid=I(),this.duration<0&&this.resetDuration()}static parse(a){let b=[],c=a.tracks,d=1/(a.fps||1);for(let e=0,f=c.length;e!==f;++e)b.push(gY(c[e]).scale(d));let g=new this(a.name,a.duration,b,a.blendMode);return g.uuid=a.uuid,g}static toJSON(a){let b=[],c=a.tracks,d={name:a.name,duration:a.duration,tracks:b,uuid:a.uuid,blendMode:a.blendMode};for(let e=0,f=c.length;e!==f;++e)b.push(gP.toJSON(c[e]));return d}static CreateFromMorphTargetSequence(a,b,c,d){let e=b.length,f=[];for(let g=0;g<e;g++){let h=[],i=[];h.push((g+e-1)%e,g,(g+1)%e),i.push(0,1,0);let j=gK.getKeyframeOrder(h);h=gK.sortedArray(h,1,j),i=gK.sortedArray(i,1,j),d||0!==h[0]||(h.push(e),i.push(i[0])),f.push(new gS(".morphTargetInfluences["+b[g].name+"]",h,i).scale(1/c))}return new this(a,-1,f)}static findByName(a,b){let c=a;if(!Array.isArray(a)){let d=a;c=d.geometry&&d.geometry.animations||d.animations}for(let e=0;e<c.length;e++)if(c[e].name===b)return c[e];return null}static CreateClipsFromMorphTargetSequences(a,b,c){let d={},e=/^([\w-]*?)([\d]+)$/;for(let f=0,g=a.length;f<g;f++){let h=a[f],i=h.name.match(e);if(i&&i.length>1){let j=i[1],k=d[j];k||(d[j]=k=[]),k.push(h)}}let l=[];for(let m in d)l.push(this.CreateFromMorphTargetSequence(m,d[m],b,c));return l}static parseAnimation(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let c=function(a,b,c,d,e){if(0!==c.length){let f=[],g=[];gK.flattenJSON(c,f,g,d),0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.fps||30,g=a.blendMode,h=a.length|| -1,i=a.hierarchy||[];for(let j=0;j<i.length;j++){let k=i[j].keys;if(k&&0!==k.length){if(k[0].morphTargets){let l={},m;for(m=0;m<k.length;m++)if(k[m].morphTargets)for(let n=0;n<k[m].morphTargets.length;n++)l[k[m].morphTargets[n]]=-1;for(let o in l){let p=[],q=[];for(let r=0;r!==k[m].morphTargets.length;++r){let s=k[m];p.push(s.time),q.push(s.morphTarget===o?1:0)}d.push(new gS(".morphTargetInfluence["+o+"]",p,q))}h=l.length*f}else{let t=".bones["+b[j].name+"]";c(gW,t+".position",k,"pos",d),c(gU,t+".quaternion",k,"rot",d),c(gW,t+".scale",k,"scl",d)}}}if(0===d.length)return null;let u=new this(e,h,d,g);return u}resetDuration(){let a=this.tracks,b=0;for(let c=0,d=a.length;c!==d;++c){let e=this.tracks[c];b=Math.max(b,e.times[e.times.length-1])}return this.duration=b,this}trim(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this}validate(){let a=!0;for(let b=0;b<this.tracks.length;b++)a=a&&this.tracks[b].validate();return a}optimize(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}clone(){let a=[];for(let b=0;b<this.tracks.length;b++)a.push(this.tracks[b].clone());return new this.constructor(this.name,this.duration,a,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function gY(a){if(void 0===a.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let b=function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return gS;case"vector":case"vector2":case"vector3":case"vector4":return gW;case"color":return gR;case"quaternion":return gU;case"bool":case"boolean":return gQ;case"string":return gV}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(a.type);if(void 0===a.times){let c=[],d=[];gK.flattenJSON(a.keys,c,d,"value"),a.times=c,a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)}let gZ={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};class g${constructor(a,b,c){let d=this,e=!1,f=0,g=0,h,i=[];this.onStart=void 0,this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(a){g++,!1===e&& void 0!==d.onStart&&d.onStart(a,f,g),e=!0},this.itemEnd=function(a){f++,void 0!==d.onProgress&&d.onProgress(a,f,g),f===g&&(e=!1,void 0!==d.onLoad&&d.onLoad())},this.itemError=function(a){void 0!==d.onError&&d.onError(a)},this.resolveURL=function(a){return h?h(a):a},this.setURLModifier=function(a){return h=a,this},this.addHandler=function(a,b){return i.push(a,b),this},this.removeHandler=function(a){let b=i.indexOf(a);return -1!==b&&i.splice(b,2),this},this.getHandler=function(a){for(let b=0,c=i.length;b<c;b+=2){let d=i[b],e=i[b+1];if(d.global&&(d.lastIndex=0),d.test(a))return e}return null}}}let g_=new g$;class g0{constructor(a){this.manager=void 0!==a?a:g_,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(a,b){let c=this;return new Promise(function(d,e){c.load(a,d,b,e)})}parse(){}setCrossOrigin(a){return this.crossOrigin=a,this}setWithCredentials(a){return this.withCredentials=a,this}setPath(a){return this.path=a,this}setResourcePath(a){return this.resourcePath=a,this}setRequestHeader(a){return this.requestHeader=a,this}}let g1={};class g2 extends g0{constructor(a){super(a)}load(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=gZ.get(a);if(void 0!==e)return this.manager.itemStart(a),setTimeout(()=>{b&&b(e),this.manager.itemEnd(a)},0),e;if(void 0!==g1[a]){g1[a].push({onLoad:b,onProgress:c,onError:d});return}g1[a]=[],g1[a].push({onLoad:b,onProgress:c,onError:d});let f=new Request(a,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),g=this.mimeType,h=this.responseType;fetch(f).then(b=>{if(200===b.status||0===b.status){if(0===b.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream|| void 0===b.body|| void 0===b.body.getReader)return b;let c=g1[a],d=b.body.getReader(),e=b.headers.get("Content-Length"),f=e?parseInt(e):0,g=0!==f,h=0,i=new ReadableStream({start(a){b();function b(){d.read().then(({done:d,value:e})=>{if(d)a.close();else{h+=e.byteLength;let i=new ProgressEvent("progress",{lengthComputable:g,loaded:h,total:f});for(let j=0,k=c.length;j<k;j++){let l=c[j];l.onProgress&&l.onProgress(i)}a.enqueue(e),b()}})}}});return new Response(i)}throw Error(`fetch for "${b.url}" responded with ${b.status}: ${b.statusText}`)}).then(a=>{switch(h){case"arraybuffer":return a.arrayBuffer();case"blob":return a.blob();case"document":return a.text().then(a=>{let b=new DOMParser;return b.parseFromString(a,g)});case"json":return a.json();default:if(void 0===g)return a.text();{let b=/charset="?([^;"\s]*)"?/i,c=b.exec(g),d=c&&c[1]?c[1].toLowerCase():void 0,e=new TextDecoder(d);return a.arrayBuffer().then(a=>e.decode(a))}}}).then(b=>{gZ.add(a,b);let c=g1[a];delete g1[a];for(let d=0,e=c.length;d<e;d++){let f=c[d];f.onLoad&&f.onLoad(b)}}).catch(b=>{let c=g1[a];if(void 0===c)throw this.manager.itemError(a),b;delete g1[a];for(let d=0,e=c.length;d<e;d++){let f=c[d];f.onError&&f.onError(b)}this.manager.itemError(a)}).finally(()=>{this.manager.itemEnd(a)}),this.manager.itemStart(a)}setResponseType(a){return this.responseType=a,this}setMimeType(a){return this.mimeType=a,this}}class g3 extends g0{constructor(a){super(a)}load(a,b,c,d){let e=this,f=[],g=new fk,h=new g2(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(e.withCredentials);let i=0;function j(j){h.load(a[j],function(a){let c=e.parse(a,!0);f[j]={width:c.width,height:c.height,format:c.format,mipmaps:c.mipmaps},6===(i+=1)&&(1===c.mipmapCount&&(g.minFilter=1006),g.image=f,g.format=c.format,g.needsUpdate=!0,b&&b(g))},c,d)}if(Array.isArray(a))for(let k=0,l=a.length;k<l;++k)j(k);else h.load(a,function(a){let c=e.parse(a,!0);if(c.isCubemap){let d=c.mipmaps.length/c.mipmapCount;for(let h=0;h<d;h++){f[h]={mipmaps:[]};for(let i=0;i<c.mipmapCount;i++)f[h].mipmaps.push(c.mipmaps[h*c.mipmapCount+i]),f[h].format=c.format,f[h].width=c.width,f[h].height=c.height}g.image=f}else g.image.width=c.width,g.image.height=c.height,g.mipmaps=c.mipmaps;1===c.mipmapCount&&(g.minFilter=1006),g.format=c.format,g.needsUpdate=!0,b&&b(g)},c,d);return g}}class g4 extends g0{constructor(a){super(a)}load(a,b,c,d){void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=gZ.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g=S("img");function h(){j(),gZ.add(a,this),b&&b(this),e.manager.itemEnd(a)}function i(b){j(),d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}function j(){g.removeEventListener("load",h,!1),g.removeEventListener("error",i,!1)}return g.addEventListener("load",h,!1),g.addEventListener("error",i,!1),"data:"!==a.slice(0,5)&& void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),e.manager.itemStart(a),g.src=a,g}}class g5 extends g0{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new eX,g=new g2(this.manager);return g.setResponseType("arraybuffer"),g.setRequestHeader(this.requestHeader),g.setPath(this.path),g.setWithCredentials(e.withCredentials),g.load(a,function(a){let c=e.parse(a);c&&(void 0!==c.image?f.image=c.image:void 0!==c.data&&(f.image.width=c.width,f.image.height=c.height,f.image.data=c.data),f.wrapS=void 0!==c.wrapS?c.wrapS:1001,f.wrapT=void 0!==c.wrapT?c.wrapT:1001,f.magFilter=void 0!==c.magFilter?c.magFilter:1006,f.minFilter=void 0!==c.minFilter?c.minFilter:1006,f.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.encoding&&(f.encoding=c.encoding),void 0!==c.flipY&&(f.flipY=c.flipY),void 0!==c.format&&(f.format=c.format),void 0!==c.type&&(f.type=c.type),void 0!==c.mipmaps&&(f.mipmaps=c.mipmaps,f.minFilter=r),1===c.mipmapCount&&(f.minFilter=1006),void 0!==c.generateMipmaps&&(f.generateMipmaps=c.generateMipmaps),f.needsUpdate=!0,b&&b(f,c))},c,d),f}}class g6 extends g0{constructor(a){super(a)}load(a,b,c,d){let e=new ah,f=new g4(this.manager);return f.setCrossOrigin(this.crossOrigin),f.setPath(this.path),f.load(a,function(a){e.image=a,e.needsUpdate=!0,void 0!==b&&b(e)},c,d),e}}class g7 extends be{constructor(a,b=1){super(),this.isLight=!0,this.type="Light",this.color=new ab(a),this.intensity=b}dispose(){}copy(a,b){return super.copy(a,b),this.color.copy(a.color),this.intensity=a.intensity,this}toJSON(a){let b=super.toJSON(a);return b.object.color=this.color.getHex(),b.object.intensity=this.intensity,void 0!==this.groundColor&&(b.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(b.object.distance=this.distance),void 0!==this.angle&&(b.object.angle=this.angle),void 0!==this.decay&&(b.object.decay=this.decay),void 0!==this.penumbra&&(b.object.penumbra=this.penumbra),void 0!==this.shadow&&(b.object.shadow=this.shadow.toJSON()),b}}let g8=new aR,g9=new am,ha=new am;class hb{constructor(a){this.camera=a,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new N(512,512),this.map=null,this.mapPass=null,this.matrix=new aR,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ce,this._frameExtents=new N(1,1),this._viewportCount=1,this._viewports=[new ai(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(a){let b=this.camera,c=this.matrix;g9.setFromMatrixPosition(a.matrixWorld),b.position.copy(g9),ha.setFromMatrixPosition(a.target.matrixWorld),b.lookAt(ha),b.updateMatrixWorld(),g8.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),this._frustum.setFromProjectionMatrix(g8),c.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),c.multiply(b.projectionMatrix),c.multiply(b.matrixWorldInverse)}getViewport(a){return this._viewports[a]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(a){return this.camera=a.camera.clone(),this.bias=a.bias,this.radius=a.radius,this.mapSize.copy(a.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let a={};return 0!==this.bias&&(a.bias=this.bias),0!==this.normalBias&&(a.normalBias=this.normalBias),1!==this.radius&&(a.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(a.mapSize=this.mapSize.toArray()),a.camera=this.camera.toJSON(!1).object,delete a.camera.matrix,a}}let hc=new aR,hd=new am,he=new am;class hf extends g7{constructor(a,b){super(a,b),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(be.DefaultUp),this.updateMatrix(),this.target=new be,this.shadow=new class extends hb{constructor(){super(new cr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}class hg extends null{constructor(a){super(a),this.textures={}}load(a,b,c,d){let e=this,f=new g2(e.manager);f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)}parse(a){let b=this.textures;function c(a){return void 0===b[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a),b[a]}let d=hg.createMaterialFromType(a.type);if(void 0!==a.uuid&&(d.uuid=a.uuid),void 0!==a.name&&(d.name=a.name),void 0!==a.color&& void 0!==d.color&&d.color.setHex(a.color),void 0!==a.roughness&&(d.roughness=a.roughness),void 0!==a.metalness&&(d.metalness=a.metalness),void 0!==a.sheen&&(d.sheen=a.sheen),void 0!==a.sheenColor&&(d.sheenColor=new ab().setHex(a.sheenColor)),void 0!==a.sheenRoughness&&(d.sheenRoughness=a.sheenRoughness),void 0!==a.emissive&& void 0!==d.emissive&&d.emissive.setHex(a.emissive),void 0!==a.specular&& void 0!==d.specular&&d.specular.setHex(a.specular),void 0!==a.specularIntensity&&(d.specularIntensity=a.specularIntensity),void 0!==a.specularColor&& void 0!==d.specularColor&&d.specularColor.setHex(a.specularColor),void 0!==a.shininess&&(d.shininess=a.shininess),void 0!==a.clearcoat&&(d.clearcoat=a.clearcoat),void 0!==a.clearcoatRoughness&&(d.clearcoatRoughness=a.clearcoatRoughness),void 0!==a.iridescence&&(d.iridescence=a.iridescence),void 0!==a.iridescenceIOR&&(d.iridescenceIOR=a.iridescenceIOR),void 0!==a.iridescenceThicknessRange&&(d.iridescenceThicknessRange=a.iridescenceThicknessRange),void 0!==a.transmission&&(d.transmission=a.transmission),void 0!==a.thickness&&(d.thickness=a.thickness),void 0!==a.attenuationDistance&&(d.attenuationDistance=a.attenuationDistance),void 0!==a.attenuationColor&& void 0!==d.attenuationColor&&d.attenuationColor.setHex(a.attenuationColor),void 0!==a.fog&&(d.fog=a.fog),void 0!==a.flatShading&&(d.flatShading=a.flatShading),void 0!==a.blending&&(d.blending=a.blending),void 0!==a.combine&&(d.combine=a.combine),void 0!==a.side&&(d.side=a.side),void 0!==a.shadowSide&&(d.shadowSide=a.shadowSide),void 0!==a.opacity&&(d.opacity=a.opacity),void 0!==a.transparent&&(d.transparent=a.transparent),void 0!==a.alphaTest&&(d.alphaTest=a.alphaTest),void 0!==a.depthTest&&(d.depthTest=a.depthTest),void 0!==a.depthWrite&&(d.depthWrite=a.depthWrite),void 0!==a.colorWrite&&(d.colorWrite=a.colorWrite),void 0!==a.stencilWrite&&(d.stencilWrite=a.stencilWrite),void 0!==a.stencilWriteMask&&(d.stencilWriteMask=a.stencilWriteMask),void 0!==a.stencilFunc&&(d.stencilFunc=a.stencilFunc),void 0!==a.stencilRef&&(d.stencilRef=a.stencilRef),void 0!==a.stencilFuncMask&&(d.stencilFuncMask=a.stencilFuncMask),void 0!==a.stencilFail&&(d.stencilFail=a.stencilFail),void 0!==a.stencilZFail&&(d.stencilZFail=a.stencilZFail),void 0!==a.stencilZPass&&(d.stencilZPass=a.stencilZPass),void 0!==a.wireframe&&(d.wireframe=a.wireframe),void 0!==a.wireframeLinewidth&&(d.wireframeLinewidth=a.wireframeLinewidth),void 0!==a.wireframeLinecap&&(d.wireframeLinecap=a.wireframeLinecap),void 0!==a.wireframeLinejoin&&(d.wireframeLinejoin=a.wireframeLinejoin),void 0!==a.rotation&&(d.rotation=a.rotation),1!==a.linewidth&&(d.linewidth=a.linewidth),void 0!==a.dashSize&&(d.dashSize=a.dashSize),void 0!==a.gapSize&&(d.gapSize=a.gapSize),void 0!==a.scale&&(d.scale=a.scale),void 0!==a.polygonOffset&&(d.polygonOffset=a.polygonOffset),void 0!==a.polygonOffsetFactor&&(d.polygonOffsetFactor=a.polygonOffsetFactor),void 0!==a.polygonOffsetUnits&&(d.polygonOffsetUnits=a.polygonOffsetUnits),void 0!==a.dithering&&(d.dithering=a.dithering),void 0!==a.alphaToCoverage&&(d.alphaToCoverage=a.alphaToCoverage),void 0!==a.premultipliedAlpha&&(d.premultipliedAlpha=a.premultipliedAlpha),void 0!==a.visible&&(d.visible=a.visible),void 0!==a.toneMapped&&(d.toneMapped=a.toneMapped),void 0!==a.userData&&(d.userData=a.userData),void 0!==a.vertexColors&&("number"==typeof a.vertexColors?d.vertexColors=a.vertexColors>0:d.vertexColors=a.vertexColors),void 0!==a.uniforms)for(let e in a.uniforms){let f=a.uniforms[e];switch(d.uniforms[e]={},f.type){case"t":d.uniforms[e].value=c(f.value);break;case"c":d.uniforms[e].value=new ab().setHex(f.value);break;case"v2":d.uniforms[e].value=new N().fromArray(f.value);break;case"v3":d.uniforms[e].value=new am().fromArray(f.value);break;case"v4":d.uniforms[e].value=new ai().fromArray(f.value);break;case"m3":d.uniforms[e].value=new O().fromArray(f.value);break;case"m4":d.uniforms[e].value=new aR().fromArray(f.value);break;default:d.uniforms[e].value=f.value}}if(void 0!==a.defines&&(d.defines=a.defines),void 0!==a.vertexShader&&(d.vertexShader=a.vertexShader),void 0!==a.fragmentShader&&(d.fragmentShader=a.fragmentShader),void 0!==a.extensions)for(let g in a.extensions)d.extensions[g]=a.extensions[g];if(void 0!==a.shading&&(d.flatShading=1===a.shading),void 0!==a.size&&(d.size=a.size),void 0!==a.sizeAttenuation&&(d.sizeAttenuation=a.sizeAttenuation),void 0!==a.map&&(d.map=c(a.map)),void 0!==a.matcap&&(d.matcap=c(a.matcap)),void 0!==a.alphaMap&&(d.alphaMap=c(a.alphaMap)),void 0!==a.bumpMap&&(d.bumpMap=c(a.bumpMap)),void 0!==a.bumpScale&&(d.bumpScale=a.bumpScale),void 0!==a.normalMap&&(d.normalMap=c(a.normalMap)),void 0!==a.normalMapType&&(d.normalMapType=a.normalMapType),void 0!==a.normalScale){let h=a.normalScale;!1===Array.isArray(h)&&(h=[h,h]),d.normalScale=new N().fromArray(h)}return void 0!==a.displacementMap&&(d.displacementMap=c(a.displacementMap)),void 0!==a.displacementScale&&(d.displacementScale=a.displacementScale),void 0!==a.displacementBias&&(d.displacementBias=a.displacementBias),void 0!==a.roughnessMap&&(d.roughnessMap=c(a.roughnessMap)),void 0!==a.metalnessMap&&(d.metalnessMap=c(a.metalnessMap)),void 0!==a.emissiveMap&&(d.emissiveMap=c(a.emissiveMap)),void 0!==a.emissiveIntensity&&(d.emissiveIntensity=a.emissiveIntensity),void 0!==a.specularMap&&(d.specularMap=c(a.specularMap)),void 0!==a.specularIntensityMap&&(d.specularIntensityMap=c(a.specularIntensityMap)),void 0!==a.specularColorMap&&(d.specularColorMap=c(a.specularColorMap)),void 0!==a.envMap&&(d.envMap=c(a.envMap)),void 0!==a.envMapIntensity&&(d.envMapIntensity=a.envMapIntensity),void 0!==a.reflectivity&&(d.reflectivity=a.reflectivity),void 0!==a.refractionRatio&&(d.refractionRatio=a.refractionRatio),void 0!==a.lightMap&&(d.lightMap=c(a.lightMap)),void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity),void 0!==a.aoMap&&(d.aoMap=c(a.aoMap)),void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity),void 0!==a.gradientMap&&(d.gradientMap=c(a.gradientMap)),void 0!==a.clearcoatMap&&(d.clearcoatMap=c(a.clearcoatMap)),void 0!==a.clearcoatRoughnessMap&&(d.clearcoatRoughnessMap=c(a.clearcoatRoughnessMap)),void 0!==a.clearcoatNormalMap&&(d.clearcoatNormalMap=c(a.clearcoatNormalMap)),void 0!==a.clearcoatNormalScale&&(d.clearcoatNormalScale=new N().fromArray(a.clearcoatNormalScale)),void 0!==a.iridescenceMap&&(d.iridescenceMap=c(a.iridescenceMap)),void 0!==a.iridescenceThicknessMap&&(d.iridescenceThicknessMap=c(a.iridescenceThicknessMap)),void 0!==a.transmissionMap&&(d.transmissionMap=c(a.transmissionMap)),void 0!==a.thicknessMap&&(d.thicknessMap=c(a.thicknessMap)),void 0!==a.sheenColorMap&&(d.sheenColorMap=c(a.sheenColorMap)),void 0!==a.sheenRoughnessMap&&(d.sheenRoughnessMap=c(a.sheenRoughnessMap)),d}setTextures(a){return this.textures=a,this}static createMaterialFromType(a){return new({ShadowMaterial:gA,SpriteMaterial:ez,RawShaderMaterial:gB,ShaderMaterial:b2,PointsMaterial:fe,MeshPhysicalMaterial:gD,MeshStandardMaterial:gC,MeshPhongMaterial:gE,MeshToonMaterial:gF,MeshNormalMaterial:gG,MeshLambertMaterial:gH,MeshDepthMaterial:ef,MeshDistanceMaterial:eg,MeshBasicMaterial:bs,MeshMatcapMaterial:gI,LineDashedMaterial:gJ,LineBasicMaterial:e4,Material:br})[a]}}class hh{static decodeText(a){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(a);let b="";for(let c=0,d=a.length;c<d;c++)b+=String.fromCharCode(a[c]);try{return decodeURIComponent(escape(b))}catch(e){return b}}static extractUrlBase(a){let b=a.lastIndexOf("/");return -1===b?"./":a.slice(0,b+1)}static resolveURL(a,b){return"string"!=typeof a||""===a?"":(/^https?:\/\//i.test(b)&&/^\//.test(a)&&(b=b.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(a)||/^data:.*,.*$/i.test(a)||/^blob:.*$/i.test(a))?a:b+a}}class hi extends null{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(a){return super.copy(a),this.instanceCount=a.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let a=super.toJSON(this);return a.instanceCount=this.instanceCount,a.isInstancedBufferGeometry=!0,a}}let hj;new aR,new aR,new aR;class hk{constructor(a=!0){this.autoStart=a,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=hl(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let b=hl();a=(b-this.oldTime)/1e3,this.oldTime=b,this.elapsedTime+=a}return a}}function hl(){return("undefined"==typeof performance?Date:performance).now()}new am,new al,new am,new am,new am,new al,new am,new am;class hm{constructor(a,b,c){this.binding=a,this.valueSize=c;let d,e,f;switch(b){case"quaternion":d=this._slerp,e=this._slerpAdditive,f=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*c),this._workIndex=5;break;case"string":case"bool":d=this._select,e=this._select,f=this._setAdditiveIdentityOther,this.buffer=Array(5*c);break;default:d=this._lerp,e=this._lerpAdditive,f=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*c)}this._mixBufferRegion=d,this._mixBufferRegionAdditive=e,this._setIdentity=f,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(a,b){let c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(let g=0;g!==d;++g)c[e+g]=c[g];f=b}else{f+=b;let h=b/f;this._mixBufferRegion(c,e,0,h,d)}this.cumulativeWeight=f}accumulateAdditive(a){let b=this.buffer,c=this.valueSize,d=c*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(b,d,0,a,c),this.cumulativeWeightAdditive+=a}apply(a){let b=this.valueSize,c=this.buffer,d=a*b+b,e=this.cumulativeWeight,f=this.cumulativeWeightAdditive,g=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1){let h=b*this._origIndex;this._mixBufferRegion(c,d,h,1-e,b)}f>0&&this._mixBufferRegionAdditive(c,d,this._addIndex*b,1,b);for(let i=b,j=b+b;i!==j;++i)if(c[i]!==c[i+b]){g.setValue(c,d);break}}saveOriginalState(){let a=this.binding,b=this.buffer,c=this.valueSize,d=c*this._origIndex;a.getValue(b,d);for(let e=c,f=d;e!==f;++e)b[e]=b[d+e%c];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let a=3*this.valueSize;this.binding.setValue(this.buffer,a)}_setAdditiveIdentityNumeric(){let a=this._addIndex*this.valueSize,b=a+this.valueSize;for(let c=a;c<b;c++)this.buffer[c]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let a=this._origIndex*this.valueSize,b=this._addIndex*this.valueSize;for(let c=0;c<this.valueSize;c++)this.buffer[b+c]=this.buffer[a+c]}_select(a,b,c,d,e){if(d>=.5)for(let f=0;f!==e;++f)a[b+f]=a[c+f]}_slerp(a,b,c,d){al.slerpFlat(a,b,a,b,a,c,d)}_slerpAdditive(a,b,c,d,e){let f=this._workIndex*e;al.multiplyQuaternionsFlat(a,f,a,b,a,c),al.slerpFlat(a,b,a,b,a,f,d)}_lerp(a,b,c,d,e){let f=1-d;for(let g=0;g!==e;++g){let h=b+g;a[h]=a[h]*f+a[c+g]*d}}_lerpAdditive(a,b,c,d,e){for(let f=0;f!==e;++f){let g=b+f;a[g]=a[g]+a[c+f]*d}}}let hn="\\[\\]\\.:\\/",ho=RegExp("["+hn+"]","g"),hp="[^"+hn+"]",hq="[^"+hn.replace("\\.","")+"]",hr=/((?:WC+[\/:])*)/.source.replace("WC",hp),hs=/(WCOD+)?/.source.replace("WCOD",hq),ht=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hp),hu=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hp),hv=RegExp("^"+hr+hs+ht+hu+"$"),hw=["material","materials","bones"];class hx{constructor(a,b,c){this.path=b,this.parsedPath=c||hx.parseTrackName(b),this.node=hx.findNode(a,this.parsedPath.nodeName)||a,this.rootNode=a,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(a,b,c){return a&&a.isAnimationObjectGroup?new hx.Composite(a,b,c):new hx(a,b,c)}static sanitizeNodeName(a){return a.replace(/\s/g,"_").replace(ho,"")}static parseTrackName(a){let b=hv.exec(a);if(null===b)throw Error("PropertyBinding: Cannot parse trackName: "+a);let c={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]},d=c.nodeName&&c.nodeName.lastIndexOf(".");if(void 0!==d&& -1!==d){let e=c.nodeName.substring(d+1);-1!==hw.indexOf(e)&&(c.nodeName=c.nodeName.substring(0,d),c.objectName=e)}if(null===c.propertyName||0===c.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+a);return c}static findNode(a,b){if(void 0===b||""===b||"."===b|| -1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){let c=a.skeleton.getBoneByName(b);if(void 0!==c)return c}if(a.children){let d=function(a){for(let c=0;c<a.length;c++){let e=a[c];if(e.name===b||e.uuid===b)return e;let f=d(e.children);if(f)return f}return null},e=d(a.children);if(e)return e}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(a,b){a[b]=this.targetObject[this.propertyName]}_getValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)a[b++]=c[d]}_getValue_arrayElement(a,b){a[b]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(a,b){this.resolvedProperty.toArray(a,b)}_setValue_direct(a,b){this.targetObject[this.propertyName]=a[b]}_setValue_direct_setNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++]}_setValue_array_setNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(a,b){this.resolvedProperty[this.propertyIndex]=a[b]}_setValue_arrayElement_setNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(a,b){this.resolvedProperty.fromArray(a,b)}_setValue_fromArray_setNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(a,b){this.bind(),this.getValue(a,b)}_setValue_unbound(a,b){this.bind(),this.setValue(a,b)}bind(){let a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;if(a||(a=hx.findNode(this.rootNode,b.nodeName)||this.rootNode,this.node=a),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!a){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(c){let f=b.objectIndex;switch(c){case"materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!a.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}a=a.material.materials;break;case"bones":if(!a.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}a=a.skeleton.bones;for(let g=0;g<a.length;g++)if(a[g].name===f){f=g;break}break;default:if(void 0===a[c]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}a=a[c]}if(void 0!==f){if(void 0===a[f]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);return}a=a[f]}}let h=a[d];if(void 0===h){let i=b.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+d+" but it wasn't found.",a);return}let j=this.Versioning.None;this.targetObject=a,void 0!==a.needsUpdate?j=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(j=this.Versioning.MatrixWorldNeedsUpdate);let k=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==a.morphTargetDictionary[e]&&(e=a.morphTargetDictionary[e])}k=this.BindingType.ArrayElement,this.resolvedProperty=h,this.propertyIndex=e}else void 0!==h.fromArray&& void 0!==h.toArray?(k=this.BindingType.HasFromToArray,this.resolvedProperty=h):Array.isArray(h)?(k=this.BindingType.EntireArray,this.resolvedProperty=h):this.propertyName=d;this.getValue=this.GetterByBindingType[k],this.setValue=this.SetterByBindingTypeAndVersioning[k][j]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}hx.Composite=class{constructor(a,b,c){let d=c||hx.parseTrackName(b);this._targetGroup=a,this._bindings=a.subscribe_(b,d)}getValue(a,b){this.bind();let c=this._targetGroup.nCachedObjects_,d=this._bindings[c];void 0!==d&&d.getValue(a,b)}setValue(a,b){let c=this._bindings;for(let d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)}bind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()}unbind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}},hx.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},hx.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},hx.prototype.GetterByBindingType=[hx.prototype._getValue_direct,hx.prototype._getValue_array,hx.prototype._getValue_arrayElement,hx.prototype._getValue_toArray,],hx.prototype.SetterByBindingTypeAndVersioning=[[hx.prototype._setValue_direct,hx.prototype._setValue_direct_setNeedsUpdate,hx.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[hx.prototype._setValue_array,hx.prototype._setValue_array_setNeedsUpdate,hx.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[hx.prototype._setValue_arrayElement,hx.prototype._setValue_arrayElement_setNeedsUpdate,hx.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[hx.prototype._setValue_fromArray,hx.prototype._setValue_fromArray_setNeedsUpdate,hx.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class hy{constructor(a,b,c=null,d=b.blendMode){this._mixer=a,this._clip=b,this._localRoot=c,this.blendMode=d;let e=b.tracks,f=e.length,g=Array(f),h={endingStart:2400,endingEnd:2400};for(let i=0;i!==f;++i){let j=e[i].createInterpolant(null);g[i]=j,j.settings=h}this._interpolantSettings=h,this._interpolants=g,this._propertyBindings=Array(f),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(a){return this._startTime=a,this}setLoop(a,b){return this.loop=a,this.repetitions=b,this}setEffectiveWeight(a){return this.weight=a,this._effectiveWeight=this.enabled?a:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(a){return this._scheduleFading(a,0,1)}fadeOut(a){return this._scheduleFading(a,1,0)}crossFadeFrom(a,b,c){if(a.fadeOut(b),this.fadeIn(b),c){let d=this._clip.duration,e=a._clip.duration,f=e/d,g=d/e;a.warp(1,f,b),this.warp(g,1,b)}return this}crossFadeTo(a,b,c){return a.crossFadeFrom(this,b,c)}stopFading(){let a=this._weightInterpolant;return null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}setEffectiveTimeScale(a){return this.timeScale=a,this._effectiveTimeScale=this.paused?0:a,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(a){return this.timeScale=this._clip.duration/a,this.stopWarping()}syncWith(a){return this.time=a.time,this.timeScale=a.timeScale,this.stopWarping()}halt(a){return this.warp(this._effectiveTimeScale,0,a)}warp(a,b,c){let d=this._mixer,e=d.time,f=this.timeScale,g=this._timeScaleInterpolant;null===g&&(g=d._lendControlInterpolant(),this._timeScaleInterpolant=g);let h=g.parameterPositions,i=g.sampleValues;return h[0]=e,h[1]=e+c,i[0]=a/f,i[1]=b/f,this}stopWarping(){let a=this._timeScaleInterpolant;return null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(a,b,c,d){if(!this.enabled){this._updateWeight(a);return}let e=this._startTime;if(null!==e){let f=(a-e)*c;if(f<0||0===c)return;this._startTime=null,b=c*f}b*=this._updateTimeScale(a);let g=this._updateTime(b),h=this._updateWeight(a);if(h>0){let i=this._interpolants,j=this._propertyBindings;if(2501===this.blendMode)for(let k=0,l=i.length;k!==l;++k)i[k].evaluate(g),j[k].accumulateAdditive(h);else for(let m=0,n=i.length;m!==n;++m)i[m].evaluate(g),j[m].accumulate(d,h)}}_updateWeight(a){let b=0;if(this.enabled){b=this.weight;let c=this._weightInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b,b}_updateTimeScale(a){let b=0;if(!this.paused){b=this.timeScale;let c=this._timeScaleInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b,b}_updateTime(a){let b=this._clip.duration,c=this.loop,d=this.time+a,e=this._loopCount,f=2202===c;if(0===a)return -1===e?d:f&&(1&e)==1?b-d:d;if(2200===c){-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(d>=b)d=b;else if(d<0)d=0;else{this.time=d;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a<0?-1:1})}}else{if(-1===e&&(a>=0?(e=0,this._setEndings(!0,0===this.repetitions,f)):this._setEndings(0===this.repetitions,!0,f)),d>=b||d<0){let g=Math.floor(d/b);d-=b*g,e+=Math.abs(g);let h=this.repetitions-e;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,d=a>0?b:0,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a>0?1:-1});else{if(1===h){let i=a<0;this._setEndings(i,!i,f)}else this._setEndings(!1,!1,f);this._loopCount=e,this.time=d,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:g})}}else this.time=d;if(f&&(1&e)==1)return b-d}return d}_setEndings(a,b,c){let d=this._interpolantSettings;c?(d.endingStart=2401,d.endingEnd=2401):(a?d.endingStart=this.zeroSlopeAtStart?2401:2400:d.endingStart=2402,b?d.endingEnd=this.zeroSlopeAtEnd?2401:2400:d.endingEnd=2402)}_scheduleFading(a,b,c){let d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(f=d._lendControlInterpolant(),this._weightInterpolant=f);let g=f.parameterPositions,h=f.sampleValues;return g[0]=e,h[0]=b,g[1]=e+a,h[1]=c,this}}let hz=new Float32Array(1);class hA extends E{constructor(a){super(),this._root=a,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(a,b){let c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,i=this._bindingsByRootAndName,j=i[h];void 0===j&&(j={},i[h]=j);for(let k=0;k!==e;++k){let l=d[k],m=l.name,n=j[m];if(void 0!==n)++n.referenceCount,f[k]=n;else{if(void 0!==(n=f[k])){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,h,m));continue}let o=b&&b._propertyBindings[k].binding.parsedPath;n=new hm(hx.create(c,m,o),l.ValueTypeName,l.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,h,m),f[k]=n}g[k].resultBuffer=n.buffer}}_activateAction(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){let b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]),this._addInactiveAction(a,c,b)}let e=a._propertyBindings;for(let f=0,g=e.length;f!==g;++f){let h=e[f];0==h.useCount++&&(this._lendBinding(h),h.saveOriginalState())}this._lendAction(a)}}_deactivateAction(a){if(this._isActiveAction(a)){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0== --e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(a){let b=a._cacheIndex;return null!==b&&b<this._nActiveActions}_addInactiveAction(a,b,c){let d=this._actions,e=this._actionsByClip,f=e[b];if(void 0===f)f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f;else{let g=f.knownActions;a._byClipCacheIndex=g.length,g.push(a)}a._cacheIndex=d.length,d.push(a),f.actionByRoot[c]=a}_removeInactiveAction(a){let b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d,b[d]=c,b.pop(),a._cacheIndex=null;let e=a._clip.uuid,f=this._actionsByClip,g=f[e],h=g.knownActions,i=h[h.length-1],j=a._byClipCacheIndex;i._byClipCacheIndex=j,h[j]=i,h.pop(),a._byClipCacheIndex=null;let k=g.actionByRoot,l=(a._localRoot||this._root).uuid;delete k[l],0===h.length&&delete f[e],this._removeInactiveBindingsForAction(a)}_removeInactiveBindingsForAction(a){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0== --e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(a){let b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_takeBackAction(a){let b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_addInactiveBinding(a,b,c){let d=this._bindingsByRootAndName,e=this._bindings,f=d[b];void 0===f&&(f={},d[b]=f),f[c]=a,a._cacheIndex=e.length,e.push(a)}_removeInactiveBinding(a){let b=this._bindings,c=a.binding,d=c.rootNode.uuid,e=c.path,f=this._bindingsByRootAndName,g=f[d],h=b[b.length-1],i=a._cacheIndex;h._cacheIndex=i,b[i]=h,b.pop(),delete g[e],0===Object.keys(g).length&&delete f[d]}_lendBinding(a){let b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_takeBackBinding(a){let b=this._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_lendControlInterpolant(){let a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];return void 0===c&&((c=new gN(new Float32Array(2),new Float32Array(2),1,hz)).__cacheIndex=b,a[b]=c),c}_takeBackControlInterpolant(a){let b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d,b[d]=a,e.__cacheIndex=c,b[c]=e}clipAction(a,b,c){let d=b||this._root,e=d.uuid,f="string"==typeof a?gX.findByName(d,a):a,g=null!==f?f.uuid:a,h=this._actionsByClip[g],i=null;if(void 0===c&&(c=null!==f?f.blendMode:2500),void 0!==h){let j=h.actionByRoot[e];if(void 0!==j&&j.blendMode===c)return j;i=h.knownActions[0],null===f&&(f=i._clip)}if(null===f)return null;let k=new hy(this,f,b,c);return this._bindAction(k,i),this._addInactiveAction(k,g,e),k}existingAction(a,b){let c=b||this._root,d=c.uuid,e="string"==typeof a?gX.findByName(c,a):a,f=e?e.uuid:a,g=this._actionsByClip[f];return void 0!==g&&g.actionByRoot[d]||null}stopAllAction(){let a=this._actions,b=this._nActiveActions;for(let c=b-1;c>=0;--c)a[c].stop();return this}update(a){a*=this.timeScale;let b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1;for(let g=0;g!==c;++g){let h=b[g];h._update(d,a,e,f)}let i=this._bindings,j=this._nActiveBindings;for(let k=0;k!==j;++k)i[k].apply(f);return this}setTime(a){this.time=0;for(let b=0;b<this._actions.length;b++)this._actions[b].time=0;return this.update(a)}getRoot(){return this._root}uncacheClip(a){let b=this._actions,c=a.uuid,d=this._actionsByClip,e=d[c];if(void 0!==e){let f=e.knownActions;for(let g=0,h=f.length;g!==h;++g){let i=f[g];this._deactivateAction(i);let j=i._cacheIndex,k=b[b.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,k._cacheIndex=j,b[j]=k,b.pop(),this._removeInactiveBindingsForAction(i)}delete d[c]}}uncacheRoot(a){let b=a.uuid,c=this._actionsByClip;for(let d in c){let e=c[d].actionByRoot,f=e[b];void 0!==f&&(this._deactivateAction(f),this._removeInactiveAction(f))}let g=this._bindingsByRootAndName,h=g[b];if(void 0!==h)for(let i in h){let j=h[i];j.restoreOriginalState(),this._removeInactiveBinding(j)}}uncacheAction(a,b){let c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}}class hB{constructor(a){"string"==typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=arguments[1]),this.value=a}clone(){return new hB(void 0===this.value.clone?this.value:this.value.clone())}}function hC(a,b,c,d){if(a.layers.test(b.layers)&&a.raycast(b,c),!0===d){let e=a.children;for(let f=0,g=e.length;f<g;f++)hC(e[f],b,c,!0)}}class hD{constructor(a=1,b=0,c=0){return this.radius=a,this.phi=b,this.theta=c,this}set(a,b,c){return this.radius=a,this.phi=b,this.theta=c,this}copy(a){return this.radius=a.radius,this.phi=a.phi,this.theta=a.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){return this.radius=Math.sqrt(a*a+b*b+c*c),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(a,c),this.phi=Math.acos(J(b/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}function hE(a){let b=[];!0===a.isBone&&b.push(a);for(let c=0;c<a.children.length;c++)b.push.apply(b,hE(a.children[c]));return b}new N,new am,new am,new am,new am,new aR,new aR,new am,new ab,new ab;let hF=new am,hG=new am,hH=new am;class hI extends be{constructor(a,b,c){super(),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=c,void 0===b&&(b=1);let d=new bG;d.setAttribute("position",new by([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));let e=new e4({fog:!1,toneMapped:!1});this.lightPlane=new fa(d,e),this.add(this.lightPlane),(d=new bG).setAttribute("position",new by([0,0,0,0,0,1],3)),this.targetLine=new fa(d,e),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){hF.setFromMatrixPosition(this.light.matrixWorld),hG.setFromMatrixPosition(this.light.target.matrixWorld),hH.subVectors(hG,hF),this.lightPlane.lookAt(hG),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(hG),this.targetLine.scale.z=hH.length()}}let hJ=new am,hK=new b3;class hL extends fd{constructor(a){let b=new bG,c=new e4({color:16777215,vertexColors:!0,toneMapped:!1}),d=[],e=[],f={};function g(a,b){h(a),h(b)}function h(a){d.push(0,0,0),e.push(0,0,0),void 0===f[a]&&(f[a]=[]),f[a].push(d.length/3-1)}g("n1","n2"),g("n2","n4"),g("n4","n3"),g("n3","n1"),g("f1","f2"),g("f2","f4"),g("f4","f3"),g("f3","f1"),g("n1","f1"),g("n2","f2"),g("n3","f3"),g("n4","f4"),g("p","n1"),g("p","n2"),g("p","n3"),g("p","n4"),g("u1","u2"),g("u2","u3"),g("u3","u1"),g("c","t"),g("p","c"),g("cn1","cn2"),g("cn3","cn4"),g("cf1","cf2"),g("cf3","cf4"),b.setAttribute("position",new by(d,3)),b.setAttribute("color",new by(e,3)),super(b,c),this.type="CameraHelper",this.camera=a,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=f,this.update();let i=new ab(16755200),j=new ab(16711680),k=new ab(43775),l=new ab(16777215),m=new ab(3355443);this.setColors(i,j,k,l,m)}setColors(a,b,c,d,e){let f=this.geometry,g=f.getAttribute("color");g.setXYZ(0,a.r,a.g,a.b),g.setXYZ(1,a.r,a.g,a.b),g.setXYZ(2,a.r,a.g,a.b),g.setXYZ(3,a.r,a.g,a.b),g.setXYZ(4,a.r,a.g,a.b),g.setXYZ(5,a.r,a.g,a.b),g.setXYZ(6,a.r,a.g,a.b),g.setXYZ(7,a.r,a.g,a.b),g.setXYZ(8,a.r,a.g,a.b),g.setXYZ(9,a.r,a.g,a.b),g.setXYZ(10,a.r,a.g,a.b),g.setXYZ(11,a.r,a.g,a.b),g.setXYZ(12,a.r,a.g,a.b),g.setXYZ(13,a.r,a.g,a.b),g.setXYZ(14,a.r,a.g,a.b),g.setXYZ(15,a.r,a.g,a.b),g.setXYZ(16,a.r,a.g,a.b),g.setXYZ(17,a.r,a.g,a.b),g.setXYZ(18,a.r,a.g,a.b),g.setXYZ(19,a.r,a.g,a.b),g.setXYZ(20,a.r,a.g,a.b),g.setXYZ(21,a.r,a.g,a.b),g.setXYZ(22,a.r,a.g,a.b),g.setXYZ(23,a.r,a.g,a.b),g.setXYZ(24,b.r,b.g,b.b),g.setXYZ(25,b.r,b.g,b.b),g.setXYZ(26,b.r,b.g,b.b),g.setXYZ(27,b.r,b.g,b.b),g.setXYZ(28,b.r,b.g,b.b),g.setXYZ(29,b.r,b.g,b.b),g.setXYZ(30,b.r,b.g,b.b),g.setXYZ(31,b.r,b.g,b.b),g.setXYZ(32,c.r,c.g,c.b),g.setXYZ(33,c.r,c.g,c.b),g.setXYZ(34,c.r,c.g,c.b),g.setXYZ(35,c.r,c.g,c.b),g.setXYZ(36,c.r,c.g,c.b),g.setXYZ(37,c.r,c.g,c.b),g.setXYZ(38,d.r,d.g,d.b),g.setXYZ(39,d.r,d.g,d.b),g.setXYZ(40,e.r,e.g,e.b),g.setXYZ(41,e.r,e.g,e.b),g.setXYZ(42,e.r,e.g,e.b),g.setXYZ(43,e.r,e.g,e.b),g.setXYZ(44,e.r,e.g,e.b),g.setXYZ(45,e.r,e.g,e.b),g.setXYZ(46,e.r,e.g,e.b),g.setXYZ(47,e.r,e.g,e.b),g.setXYZ(48,e.r,e.g,e.b),g.setXYZ(49,e.r,e.g,e.b),g.needsUpdate=!0}update(){let a=this.geometry,b=this.pointMap;hK.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),hM("c",b,a,hK,0,0,-1),hM("t",b,a,hK,0,0,1),hM("n1",b,a,hK,-1,-1,-1),hM("n2",b,a,hK,1,-1,-1),hM("n3",b,a,hK,-1,1,-1),hM("n4",b,a,hK,1,1,-1),hM("f1",b,a,hK,-1,-1,1),hM("f2",b,a,hK,1,-1,1),hM("f3",b,a,hK,-1,1,1),hM("f4",b,a,hK,1,1,1),hM("u1",b,a,hK,.7,1.1,-1),hM("u2",b,a,hK,-0.7,1.1,-1),hM("u3",b,a,hK,0,2,-1),hM("cf1",b,a,hK,-1,0,1),hM("cf2",b,a,hK,1,0,1),hM("cf3",b,a,hK,0,-1,1),hM("cf4",b,a,hK,0,1,1),hM("cn1",b,a,hK,-1,0,-1),hM("cn2",b,a,hK,1,0,-1),hM("cn3",b,a,hK,0,-1,-1),hM("cn4",b,a,hK,0,1,-1),a.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function hM(a,b,c,d,e,f,g){hJ.set(e,f,g).unproject(d);let h=b[a];if(void 0!==h){let i=c.getAttribute("position");for(let j=0,k=h.length;j<k;j++)i.setXYZ(h[j],hJ.x,hJ.y,hJ.z)}}new ap,new am;class hN extends fd{constructor(a=1){let b=new bG;b.setAttribute("position",new by([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a],3)),b.setAttribute("color",new by([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let c=new e4({vertexColors:!0,toneMapped:!1});super(b,c),this.type="AxesHelper"}setColors(a,b,c){let d=new ab,e=this.geometry.attributes.color.array;return d.set(a),d.toArray(e,0),d.toArray(e,3),d.set(b),d.toArray(e,6),d.toArray(e,9),d.set(c),d.toArray(e,12),d.toArray(e,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}let{floatView:hO,uint32View:hP,baseTable:hQ,shiftTable:hR,mantissaTable:hS,exponentTable:hT,offsetTable:hU}=function(){let a=new ArrayBuffer(4),b=new Float32Array(a),c=new Uint32Array(a),d=new Uint32Array(512),e=new Uint32Array(512);for(let f=0;f<256;++f){let g=f-127;g< -27?(d[f]=0,d[256|f]=32768,e[f]=24,e[256|f]=24):g< -14?(d[f]=1024>> -g-14,d[256|f]=1024>> -g-14|32768,e[f]=-g-1,e[256|f]=-g-1):g<=15?(d[f]=g+15<<10,d[256|f]=g+15<<10|32768,e[f]=13,e[256|f]=13):g<128?(d[f]=31744,d[256|f]=64512,e[f]=24,e[256|f]=24):(d[f]=31744,d[256|f]=64512,e[f]=13,e[256|f]=13)}let h=new Uint32Array(2048),i=new Uint32Array(64),j=new Uint32Array(64);for(let k=1;k<1024;++k){let l=k<<13,m=0;for(;(8388608&l)==0;)l<<=1,m-=8388608;l&=-8388609,m+=947912704,h[k]=l|m}for(let n=1024;n<2048;++n)h[n]=939524096+(n-1024<<13);for(let o=1;o<31;++o)i[o]=o<<23;i[31]=1199570944,i[32]=2147483648;for(let p=33;p<63;++p)i[p]=2147483648+(p-32<<23);i[63]=3347054592;for(let q=1;q<64;++q)32!==q&&(j[q]=1024);return{floatView:b,uint32View:c,baseTable:d,shiftTable:e,mantissaTable:h,exponentTable:i,offsetTable:j}}();"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"142"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="142")}}])