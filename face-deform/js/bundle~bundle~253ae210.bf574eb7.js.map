{"version":3,"sources":["webpack:///./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tensor.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tape.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/util_base.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/types.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/util.js"],"names":["inferShape","val","dtype","firstElem","length","Array","isArray","shape","push","getBool","deepAssertShapeConsistency","indices","join","subShape","slice","i","concat","assertDtype","expectedDtype","actualDType","argName","functionName","Error","convertToTensor","x","parseAsDtype","inferredDtype","indexOf","type","constructor","name","inferredShape","values","makeTensor","convertToTensorArray","arg","map","t","makeTypesMatch","a","b","cast","getTensorsInContainer","result","list","walkTensorContainer","Set","container","seen","obj","iterable","k","has","add","tensorToString","vals","verbose","strides","padPerCol","n","numCols","fill","rank","valuesOrTuples","createComplexTuples","row","offset","j","Math","max","valToString","computeMaxSizePerColumn","valsLines","subTensorToString","lines","l","pad","valStr","parseFloat","toFixed","boolNumToString","toString","v","isLast","storagePerElement","size","firstValsSize","firstVals","from","lastVals","subshape","substrides","stride","start","end","sep","newLineSep","complexTuples","this","value","locs","index","locToIndex","loc","msg","floor","trackerFn","opHandler","deprecationWarningFn","setTensorTracker","fn","setOpHandler","handler","setDeprecationWarningFn","dataId","id","kept","isDisposedInternal","rankType","data","buffer","dataSync","throwIfDisposed","read","bytes","util","_a","readSync","Uint8Array","isDisposed","disposeTensor","print","clone","trainable","makeVariable","Object","defineProperty","Symbol","hasInstance","instance","initialValue","tensorId","super","newValue","incRef","disposeVariable","assign","Function","getFilteredNodesXToY","tape","xs","y","tensorsFromX","nodesFromX","node","nodeInputs","inputs","inputName","input","anyInputFromX","outputs","forEach","output","tensorsLeadToY","nodesToY","filteredTape","prunedInputs","nodeInput","prunedNode","backpropagateGradients","tensorAccumulatedGradientMap","tidy","dys","o","gradTensor","gradient","kernelName","inputGradients","keys","dx","curGradient","dispose","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","len","checked","copy","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","exports","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","allocUnsafeSlow","_isBuffer","compare","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","num","shuffle","counter","temp","random","shuffleCombo","array2","temp2","clamp","nearestLargerEven","sum","randUniform","r","distSquared","diff","assert","expr","assertShapesMatch","shapeA","shapeB","errorMessagePrefix","arraysEqual","assertNonNull","flatten","skipTypedArray","isTypedArray","sizeFromShape","isScalarShape","n1","n2","isInt","tanh","e2x","exp","sizeToSquarishShape","width","ceil","sqrt","createShuffledIndices","shuffledIndices","Uint32Array","rightPad","repeat","repeatedTry","checkFn","delayFn","maxCounter","Promise","resolve","reject","tryCount","tryFn","nextBackoff","setTimeout","inferFromImplicitShape","shapeProd","implicitIdx","newShape","parseAxisParam","axis","s","every","ax","squeezeShape","keptDims","isEmptyArray","axes","sort","getTypedArrayFromDType","Float32Array","Int32Array","getArrayFromDType","checkConversionForErrors","isValidDtype","hasEncodingLoss","oldType","newType","bytesPerElement","bytesFromStringArray","isString","isBoolean","isNumber","inferDtype","isFunction","f","nearestDivisor","computeStrides","createNestedArray","isComplex","d","rest","reduce","acc","toNestedArray","makeOnesTypedArray","makeZerosTypedArray","makeZerosNestedTypedArray","prev","curr","assertNonNegativeIntegerDimensions","dimSize","isInteger","indexToLoc","isPromise","object","then","Rank","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","UpcastComplex64AndMap","upcastTypeMap","upcastType","typeA","typeB","createScalarValue","encodeString","toTypedArray","noConversionNeeded","bool","round","now","platform","fetch","path","requestInits","encode","decodeString","decode"],"mappings":"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","file":"js/bundle~bundle~253ae210.bf574eb7.js","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { env } from './environment';\nimport { Tensor } from './tensor';\nimport { assert, flatten, inferDtype, isTypedArray, toTypedArray } from './util';\nexport function inferShape(val, dtype) {\n    let firstElem = val;\n    if (isTypedArray(val)) {\n        return dtype === 'string' ? [] : [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return []; // Scalar.\n    }\n    const shape = [];\n    while (Array.isArray(firstElem) ||\n        isTypedArray(firstElem) && dtype !== 'string') {\n        shape.push(firstElem.length);\n        firstElem = firstElem[0];\n    }\n    if (Array.isArray(val) &&\n        env().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n        deepAssertShapeConsistency(val, shape, []);\n    }\n    return shape;\n}\nfunction deepAssertShapeConsistency(val, shape, indices) {\n    indices = indices || [];\n    if (!(Array.isArray(val)) && !isTypedArray(val)) {\n        assert(shape.length === 0, () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n        return;\n    }\n    assert(shape.length > 0, () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n        `but is an array of ${val.length} elements`);\n    assert(val.length === shape[0], () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n        `elements, but has ${val.length} elements`);\n    const subShape = shape.slice(1);\n    for (let i = 0; i < val.length; ++i) {\n        deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n    }\n}\nfunction assertDtype(expectedDtype, actualDType, argName, functionName) {\n    if (expectedDtype === 'string_or_numeric') {\n        return;\n    }\n    if (expectedDtype == null) {\n        throw new Error(`Expected dtype cannot be null.`);\n    }\n    if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n        expectedDtype === 'numeric' && actualDType === 'string') {\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must ` +\n            `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n    }\n}\nexport function convertToTensor(x, argName, functionName, parseAsDtype = 'numeric') {\n    if (x instanceof Tensor) {\n        assertDtype(parseAsDtype, x.dtype, argName, functionName);\n        return x;\n    }\n    let inferredDtype = inferDtype(x);\n    // If the user expects a bool/int/float, use that info to update the\n    // inferredDtype when it is not a string.\n    if (inferredDtype !== 'string' &&\n        ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n        inferredDtype = parseAsDtype;\n    }\n    assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n    if ((x == null) ||\n        (!isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' &&\n            typeof x !== 'boolean' && typeof x !== 'string')) {\n        const type = x == null ? 'null' : x.constructor.name;\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must be a ` +\n            `Tensor or TensorLike, but got '${type}'`);\n    }\n    const inferredShape = inferShape(x, inferredDtype);\n    if (!isTypedArray(x) && !Array.isArray(x)) {\n        x = [x];\n    }\n    const skipTypedArray = true;\n    const values = inferredDtype !== 'string' ?\n        toTypedArray(x, inferredDtype) :\n        flatten(x, [], skipTypedArray);\n    return ENGINE.makeTensor(values, inferredShape, inferredDtype);\n}\nexport function convertToTensorArray(arg, argName, functionName, parseAsDtype = 'numeric') {\n    if (!Array.isArray(arg)) {\n        throw new Error(`Argument ${argName} passed to ${functionName} must be a ` +\n            '`Tensor[]` or `TensorLike[]`');\n    }\n    const tensors = arg;\n    return tensors.map((t, i) => convertToTensor(t, `${argName}[${i}]`, functionName, parseAsDtype));\n}\n//# sourceMappingURL=tensor_util_env.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tensor } from './tensor';\nimport { upcastType } from './types';\nimport { assert } from './util';\nexport function makeTypesMatch(a, b) {\n    if (a.dtype === b.dtype) {\n        return [a, b];\n    }\n    const dtype = upcastType(a.dtype, b.dtype);\n    return [a.cast(dtype), b.cast(dtype)];\n}\nexport function assertTypesMatch(a, b) {\n    assert(a.dtype === b.dtype, () => `The dtypes of the first(${a.dtype}) and` +\n        ` second(${b.dtype}) input must match`);\n}\nexport function isTensorInList(tensor, tensorList) {\n    return tensorList.some(x => x.id === tensor.id);\n}\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nexport function getTensorsInContainer(result) {\n    const list = [];\n    const seen = new Set();\n    walkTensorContainer(result, list, seen);\n    return list;\n}\nfunction walkTensorContainer(container, list, seen) {\n    if (container == null) {\n        return;\n    }\n    if (container instanceof Tensor) {\n        list.push(container);\n        return;\n    }\n    if (!isIterable(container)) {\n        return;\n    }\n    // Iteration over keys works also for arrays.\n    const iterable = container;\n    for (const k in iterable) {\n        const val = iterable[k];\n        if (!seen.has(val)) {\n            seen.add(val);\n            walkTensorContainer(val, list, seen);\n        }\n    }\n}\n// tslint:disable-next-line:no-any\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n//# sourceMappingURL=tensor_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { computeStrides, isString, rightPad, sizeFromShape } from './util';\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\nexport function tensorToString(vals, shape, dtype, verbose) {\n    const strides = computeStrides(shape);\n    const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n    const rank = shape.length;\n    const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n    const lines = ['Tensor'];\n    if (verbose) {\n        lines.push(`  dtype: ${dtype}`);\n        lines.push(`  rank: ${rank}`);\n        lines.push(`  shape: [${shape}]`);\n        lines.push(`  values:`);\n    }\n    lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n    return lines.join('\\n');\n}\nfunction computeMaxSizePerColumn(vals, shape, dtype, strides) {\n    const n = sizeFromShape(shape);\n    const numCols = strides[strides.length - 1];\n    const padPerCol = new Array(numCols).fill(0);\n    const rank = shape.length;\n    const valuesOrTuples = dtype === 'complex64' ? createComplexTuples(vals) : vals;\n    if (rank > 1) {\n        for (let row = 0; row < n / numCols; row++) {\n            const offset = row * numCols;\n            for (let j = 0; j < numCols; j++) {\n                padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad, dtype) {\n    let valStr;\n    if (Array.isArray(val)) {\n        valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n            `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n    }\n    else if (isString(val)) {\n        valStr = `'${val}'`;\n    }\n    else if (dtype === 'bool') {\n        valStr = boolNumToString(val);\n    }\n    else {\n        valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n    }\n    return rightPad(valStr, pad);\n}\nfunction boolNumToString(v) {\n    return v === 0 ? 'false' : 'true';\n}\nfunction subTensorToString(vals, shape, dtype, strides, padPerCol, isLast = true) {\n    const storagePerElement = dtype === 'complex64' ? 2 : 1;\n    const size = shape[0];\n    const rank = shape.length;\n    if (rank === 0) {\n        if (dtype === 'complex64') {\n            const complexTuple = createComplexTuples(vals);\n            return [valToString(complexTuple[0], 0, dtype)];\n        }\n        if (dtype === 'bool') {\n            return [boolNumToString(vals[0])];\n        }\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n            let firstVals = Array.from(vals.slice(0, firstValsSize));\n            let lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));\n            if (dtype === 'complex64') {\n                firstVals = createComplexTuples(firstVals);\n                lastVals = createComplexTuples(lastVals);\n            }\n            return [\n                '[' +\n                    firstVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                        .join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map((x, i) => valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        const displayVals = dtype === 'complex64' ? createComplexTuples(vals) :\n            Array.from(vals);\n        return [\n            '[' +\n                displayVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                    .join(', ') +\n                ']'\n        ];\n    }\n    // The array is rank 2 or more.\n    const subshape = shape.slice(1);\n    const substrides = strides.slice(1);\n    const stride = strides[0] * storagePerElement;\n    const lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false /* isLast */));\n        }\n        lines.push('...');\n        for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    else {\n        for (let i = 0; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    const sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (let i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    let newLineSep = ',\\n';\n    for (let i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\nfunction createComplexTuples(vals) {\n    const complexTuples = [];\n    for (let i = 0; i < vals.length; i += 2) {\n        complexTuples.push([vals[i], vals[i + 1]]);\n    }\n    return complexTuples;\n}\n//# sourceMappingURL=tensor_format.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlobal } from './global_util';\nimport { tensorToString } from './tensor_format';\nimport * as util from './util';\nimport { computeStrides, toNestedArray } from './util';\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class TensorBuffer {\n    constructor(shape, dtype, values) {\n        this.dtype = dtype;\n        this.shape = shape.slice();\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            const n = values.length;\n            util.assert(n === this.size, () => `Length of values '${n}' does not match the size ` +\n                `inferred by the shape '${this.size}'.`);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(`complex64 dtype TensorBuffers are not supported. Please create ` +\n                `a TensorBuffer for the real and imaginary parts separately and ` +\n                `call tf.complex(real, imag).`);\n        }\n        this.values = values || util.getArrayFromDType(dtype, this.size);\n        this.strides = computeStrides(shape);\n    }\n    /**\n     * Sets a value in the buffer at a given location.\n     *\n     * @param value The value to set.\n     * @param locs  The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    set(value, ...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        util.assert(locs.length === this.rank, () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n        const index = this.locToIndex(locs);\n        this.values[index] = value;\n    }\n    /**\n     * Returns the value in the buffer at the provided location.\n     *\n     * @param locs The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    get(...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        let i = 0;\n        for (const loc of locs) {\n            if (loc < 0 || loc >= this.shape[i]) {\n                const msg = `Requested out of range element at ${locs}. ` +\n                    `  Buffer shape=${this.shape}`;\n                throw new Error(msg);\n            }\n            i++;\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.values[index];\n    }\n    locToIndex(locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    }\n    indexToLoc(index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        const locs = new Array(this.shape.length);\n        for (let i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Creates an immutable `tf.Tensor` object from the buffer.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    toTensor() {\n        return trackerFn().makeTensor(this.values, this.shape, this.dtype);\n    }\n}\n// For tracking tensor creation and disposal.\nlet trackerFn = null;\n// Used by chaining methods to call into ops.\nlet opHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nexport function setTensorTracker(fn) {\n    trackerFn = fn;\n}\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nexport function setOpHandler(handler) {\n    opHandler = handler;\n}\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nexport function setDeprecationWarningFn(fn) {\n    deprecationWarningFn = fn;\n}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * For performance reasons, functions that create tensors do not necessarily\n * perform a copy of the data passed to them (e.g. if the data is passed as a\n * `Float32Array`), and changes to the data will change the tensor. This is not\n * a feature and is not supported. To avoid this behavior, use the tensor before\n * changing the input data or create a copy with `copy = tf.add(yourTensor, 0)`.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Tensor {\n    constructor(shape, dtype, dataId, id) {\n        /** Whether this tensor has been globally kept. */\n        this.kept = false;\n        this.isDisposedInternal = false;\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.size = util.sizeFromShape(shape);\n        this.strides = computeStrides(shape);\n        this.dataId = dataId;\n        this.id = id;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async buffer() {\n        const vals = await this.data();\n        return opHandler.buffer(this.shape, this.dtype, vals);\n    }\n    /**\n     * Returns a `tf.TensorBuffer` that holds the underlying data.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    bufferSync() {\n        return opHandler.buffer(this.shape, this.dtype, this.dataSync());\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * asynchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async array() {\n        const vals = await this.data();\n        return toNestedArray(this.shape, vals, this.dtype === 'complex64');\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * synchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    arraySync() {\n        return toNestedArray(this.shape, this.dataSync(), this.dtype === 'complex64');\n    }\n    /**\n     * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n     * promise of `TypedArray` that resolves when the computation has finished.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async data() {\n        this.throwIfDisposed();\n        const data = trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            const bytes = await data;\n            try {\n                return bytes.map(b => util.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /**\n     * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n     * UI thread until the values are ready, which can cause performance issues.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dataSync() {\n        this.throwIfDisposed();\n        const data = trackerFn().readSync(this.dataId);\n        if (this.dtype === 'string') {\n            try {\n                return data.map(b => util.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /** Returns the underlying bytes of the tensor's data. */\n    async bytes() {\n        this.throwIfDisposed();\n        const data = await trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            return data;\n        }\n        else {\n            return new Uint8Array(data.buffer);\n        }\n    }\n    /**\n     * Disposes `tf.Tensor` from memory.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        trackerFn().disposeTensor(this);\n        this.isDisposedInternal = true;\n    }\n    get isDisposed() {\n        return this.isDisposedInternal;\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error(`Tensor is disposed.`);\n        }\n    }\n    /**\n     * Prints the `tf.Tensor`. See `tf.print` for details.\n     *\n     * @param verbose Whether to print verbose information about the tensor,\n     *    including dtype and size.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    print(verbose = false) {\n        return opHandler.print(this, verbose);\n    }\n    /**\n     * Returns a copy of the tensor. See `tf.clone` for details.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    clone() {\n        this.throwIfDisposed();\n        return opHandler.clone(this);\n    }\n    /**\n     * Returns a human-readable description of the tensor. Useful for logging.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    toString(verbose = false) {\n        const vals = this.dataSync();\n        return tensorToString(vals, this.shape, this.dtype, verbose);\n    }\n    cast(dtype) {\n        this.throwIfDisposed();\n        return opHandler.cast(this, dtype);\n    }\n    variable(trainable = true, name, dtype) {\n        this.throwIfDisposed();\n        return trackerFn().makeVariable(this, trainable, name, dtype);\n    }\n}\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n    value: (instance) => {\n        // Implementation note: we should use properties of the object that will be\n        // defined before the constructor body has finished executing (methods).\n        // This is because when this code is transpiled by babel, babel will call\n        // classCallCheck before the constructor body is run.\n        // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n        return !!instance && instance.data != null && instance.dataSync != null &&\n            instance.throwIfDisposed != null;\n    }\n});\nexport function getGlobalTensorClass() {\n    // Use getGlobal so that we can augment the Tensor class across package\n    // boundaries becase the node resolution alg may result in different modules\n    // being returned for this file depending on the path they are loaded from.\n    return getGlobal('Tensor', () => {\n        return Tensor;\n    });\n}\n// Global side effect. Cache global reference to Tensor class\ngetGlobalTensorClass();\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Variable extends Tensor {\n    constructor(initialValue, trainable, name, tensorId) {\n        super(initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n        this.trainable = trainable;\n        this.name = name;\n    }\n    /**\n     * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n     * the same shape and dtype as the old `tf.Tensor`.\n     *\n     * @param newValue New tensor to be assigned to this variable.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    assign(newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(`dtype of the new value (${newValue.dtype}) and ` +\n                `previous value (${this.dtype}) must match`);\n        }\n        if (!util.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(`shape of the new value (${newValue.shape}) and ` +\n                `previous value (${this.shape}) must match`);\n        }\n        trackerFn().disposeTensor(this);\n        this.dataId = newValue.dataId;\n        trackerFn().incRef(this, null /* backend */);\n    }\n    dispose() {\n        trackerFn().disposeVariable(this);\n        this.isDisposedInternal = true;\n    }\n}\nObject.defineProperty(Variable, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance instanceof Tensor && instance.assign != null &&\n            instance.assign instanceof Function;\n    }\n});\n//# sourceMappingURL=tensor.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from './util';\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nexport function getFilteredNodesXToY(tape, xs, y) {\n    // Forward pass to compute all the nodes and Tensors that are transitively a\n    // function of x.\n    const tensorsFromX = {};\n    const nodesFromX = {};\n    for (let i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        for (const inputName in nodeInputs) {\n            const input = nodeInputs[inputName];\n            let anyInputFromX = false;\n            for (let j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(output => tensorsFromX[output.id] = true);\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    // Backward pass to find all of the nodes and Tensors that lead to y.\n    const tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    const nodesToY = {};\n    for (let i = tape.length - 1; i >= 0; i--) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        // If any of the outputs lead to y, mark all of the inputs as leading to y.\n        for (let j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (const inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    // Return the paths that come from x and lead to y.\n    const filteredTape = [];\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            // Prune the inputs from the node that aren't a function of x.\n            const prunedInputs = {};\n            for (const inputName in node.inputs) {\n                const nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            // Copy the node and overwrite inputsAndArgs to the pruned version.\n            const prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nexport function backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy, add) {\n    // Walk the tape backward and keep a map of Tensor to its gradient.\n    for (let i = filteredTape.length - 1; i >= 0; i--) {\n        const node = filteredTape[i];\n        const dys = [];\n        node.outputs.forEach(o => {\n            const gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                // This particular output is not in the back-propagation subgraph, so it\n                // does not affect the final output, thus we put null for its dy.\n                dys.push(null);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(`Cannot compute gradient: gradient function not found ` +\n                `for ${node.kernelName}.`);\n        }\n        // Backprop dy through this node and accumulate gradients over the inputs.\n        const inputGradients = node.gradient(dys);\n        for (const inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(`Cannot backprop through input ${inputName}. ` +\n                    `Available gradients found: ${Object.keys(inputGradients)}.`);\n            }\n            // Call the gradient function.\n            const dx = tidy(() => inputGradients[inputName]());\n            if (dx.dtype !== 'float32') {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n            }\n            const x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `'${inputName}' has shape '${dx.shape}', which does not match ` +\n                    `the shape of the input '${x.shape}'`);\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                const curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\n//# sourceMappingURL=tape.js.map","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nexport function shuffle(array) {\n    let counter = array.length;\n    let temp = 0;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n}\n/**\n * Shuffles two arrays in-place the same way using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1,2,3,4,5];\n * const b = [11,22,33,44,55];\n * tf.util.shuffleCombo(a, b);\n * console.log(a, b);\n * ```\n *\n * @param array The first array to shuffle in-place.\n * @param array2 The second array to shuffle in-place with the same permutation\n *     as the first array.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function shuffleCombo(\n// tslint:disable-next-line:no-any\narray, \n// tslint:disable-next-line:no-any\narray2) {\n    if (array.length !== array2.length) {\n        throw new Error(`Array sizes must match to be shuffled together ` +\n            `First array length was ${array.length}` +\n            `Second array length was ${array2.length}`);\n    }\n    let counter = array.length;\n    let temp, temp2;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element of each array with it\n        temp = array[counter];\n        temp2 = array2[counter];\n        array[counter] = array[index];\n        array2[counter] = array2[index];\n        array[index] = temp;\n        array2[index] = temp2;\n    }\n}\n/** Clamps a value to a specified range. */\nexport function clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nexport function nearestLargerEven(val) {\n    return val % 2 === 0 ? val : val + 1;\n}\nexport function sum(arr) {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n    }\n    return sum;\n}\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nexport function randUniform(a, b) {\n    const r = Math.random();\n    return (b * r) + (1 - r) * a;\n}\n/** Returns the squared Euclidean distance between two vectors. */\nexport function distSquared(a, b) {\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        const diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function assert(expr, msg) {\n    if (!expr) {\n        throw new Error(typeof msg === 'string' ? msg : msg());\n    }\n}\nexport function assertShapesMatch(shapeA, shapeB, errorMessagePrefix = '') {\n    assert(arraysEqual(shapeA, shapeB), () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\nexport function assertNonNull(a) {\n    assert(a != null, () => `The input to the tensor constructor must be a non-null value.`);\n}\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function flatten(arr, result = [], skipTypedArray = false) {\n    if (result == null) {\n        result = [];\n    }\n    if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n        for (let i = 0; i < arr.length; ++i) {\n            flatten(arr[i], result, skipTypedArray);\n        }\n    }\n    else {\n        result.push(arr);\n    }\n    return result;\n}\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function sizeFromShape(shape) {\n    if (shape.length === 0) {\n        // Scalar.\n        return 1;\n    }\n    let size = shape[0];\n    for (let i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nexport function isScalarShape(shape) {\n    return shape.length === 0;\n}\nexport function arraysEqual(n1, n2) {\n    if (n1 === n2) {\n        return true;\n    }\n    if (n1 == null || n2 == null) {\n        return false;\n    }\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isInt(a) {\n    return a % 1 === 0;\n}\nexport function tanh(x) {\n    // tslint:disable-next-line:no-any\n    if (Math.tanh != null) {\n        // tslint:disable-next-line:no-any\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        const e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nexport function sizeToSquarishShape(size) {\n    const width = Math.ceil(Math.sqrt(size));\n    return [width, Math.ceil(size / width)];\n}\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function createShuffledIndices(n) {\n    const shuffledIndices = new Uint32Array(n);\n    for (let i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nexport function rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nexport function repeatedTry(checkFn, delayFn = (counter) => 0, maxCounter) {\n    return new Promise((resolve, reject) => {\n        let tryCount = 0;\n        const tryFn = () => {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            const nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        tryFn();\n    });\n}\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nexport function inferFromImplicitShape(shape, size) {\n    let shapeProd = 1;\n    let implicitIdx = -1;\n    for (let i = 0; i < shape.length; ++i) {\n        if (shape[i] >= 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(`Shapes can only have 1 implicit size. ` +\n                    `Found -1 at dim ${implicitIdx} and dim ${i}`);\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] < 0) {\n            throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(`Size(${size}) must match the product of shape ${shape}`);\n        }\n        return shape;\n    }\n    if (shapeProd === 0) {\n        throw Error(`Cannot infer the missing size in [${shape}] when ` +\n            `there are 0 elements`);\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(`The implicit shape can't be a fractional number. ` +\n            `Got ${size} / ${shapeProd}`);\n    }\n    const newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nexport function parseAxisParam(axis, shape) {\n    const rank = shape.length;\n    // Normalize input\n    axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n    // Check for valid range\n    assert(axis.every(ax => ax >= -rank && ax < rank), () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n        `got axis ${axis}`);\n    // Check for only integers\n    assert(axis.every(ax => isInt(ax)), () => `All values in axis param must be integers but ` +\n        `got axis ${axis}`);\n    // Handle negative axis.\n    return axis.map(a => a < 0 ? rank + a : a);\n}\n/** Reduces the shape by removing all dimensions of shape 1. */\nexport function squeezeShape(shape, axis) {\n    const newShape = [];\n    const keptDims = [];\n    const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n    const axes = (axis == null || isEmptyArray) ?\n        null :\n        parseAxisParam(axis, shape).sort();\n    let j = 0;\n    for (let i = 0; i < shape.length; ++i) {\n        if (axes != null) {\n            if (axes[j] === i && shape[i] !== 1) {\n                throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n            }\n            if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n                newShape.push(shape[i]);\n                keptDims.push(i);\n            }\n            if (axes[j] <= i) {\n                j++;\n            }\n        }\n        if (shape[i] !== 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape, keptDims };\n}\nexport function getTypedArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nexport function getArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else if (dtype === 'string') {\n        values = new Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nexport function checkConversionForErrors(vals, dtype) {\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n        }\n    }\n}\n/** Returns true if the dtype is valid. */\nexport function isValidDtype(dtype) {\n    return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n        dtype === 'int32' || dtype === 'string';\n}\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nexport function hasEncodingLoss(oldType, newType) {\n    if (newType === 'complex64') {\n        return false;\n    }\n    if (newType === 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'bool' && oldType === 'bool') {\n        return false;\n    }\n    return true;\n}\nexport function isTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nexport function bytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32') {\n        return 4;\n    }\n    else if (dtype === 'complex64') {\n        return 8;\n    }\n    else if (dtype === 'bool') {\n        return 1;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nexport function bytesFromStringArray(arr) {\n    if (arr == null) {\n        return 0;\n    }\n    let bytes = 0;\n    arr.forEach(x => bytes += x.length);\n    return bytes;\n}\n/** Returns true if the value is a string. */\nexport function isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexport function isBoolean(value) {\n    return typeof value === 'boolean';\n}\nexport function isNumber(value) {\n    return typeof value === 'number';\n}\nexport function inferDtype(values) {\n    if (Array.isArray(values)) {\n        return inferDtype(values[0]);\n    }\n    if (values instanceof Float32Array) {\n        return 'float32';\n    }\n    else if (values instanceof Int32Array || values instanceof Uint8Array) {\n        return 'int32';\n    }\n    else if (isNumber(values)) {\n        return 'float32';\n    }\n    else if (isString(values)) {\n        return 'string';\n    }\n    else if (isBoolean(values)) {\n        return 'bool';\n    }\n    return 'float32';\n}\nexport function isFunction(f) {\n    return !!(f && f.constructor && f.call && f.apply);\n}\nexport function nearestDivisor(size, start) {\n    for (let i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\nexport function computeStrides(shape) {\n    const rank = shape.length;\n    if (rank < 2) {\n        return [];\n    }\n    // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n    // strides.\n    const strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n        strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n}\nfunction createNestedArray(offset, shape, a, isComplex = false) {\n    const ret = new Array();\n    if (shape.length === 1) {\n        const d = shape[0] * (isComplex ? 2 : 1);\n        for (let i = 0; i < d; i++) {\n            ret[i] = a[offset + i];\n        }\n    }\n    else {\n        const d = shape[0];\n        const rest = shape.slice(1);\n        const len = rest.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n        for (let i = 0; i < d; i++) {\n            ret[i] = createNestedArray(offset + i * len, rest, a, isComplex);\n        }\n    }\n    return ret;\n}\n// Provide a nested array of TypedArray in given shape.\nexport function toNestedArray(shape, a, isComplex = false) {\n    if (shape.length === 0) {\n        // Scalar type should return a single number.\n        return a[0];\n    }\n    const size = shape.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n    if (size === 0) {\n        // A tensor with shape zero should be turned into empty list.\n        return [];\n    }\n    if (size !== a.length) {\n        throw new Error(`[${shape}] does not match the input size ${a.length}${isComplex ? ' for a complex tensor' : ''}.`);\n    }\n    return createNestedArray(0, shape, a, isComplex);\n}\nexport function makeOnesTypedArray(size, dtype) {\n    const array = makeZerosTypedArray(size, dtype);\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\nexport function makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\nexport function makeZerosNestedTypedArray(shape, dtype) {\n    const size = shape.reduce((prev, curr) => prev * curr, 1);\n    if (dtype == null || dtype === 'float32') {\n        return toNestedArray(shape, new Float32Array(size));\n    }\n    else if (dtype === 'int32') {\n        return toNestedArray(shape, new Int32Array(size));\n    }\n    else if (dtype === 'bool') {\n        return toNestedArray(shape, new Uint8Array(size));\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\nexport function assertNonNegativeIntegerDimensions(shape) {\n    shape.forEach(dimSize => {\n        assert(Number.isInteger(dimSize) && dimSize >= 0, () => `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n    });\n}\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\nexport function locToIndex(locs, rank, strides) {\n    if (rank === 0) {\n        return 0;\n    }\n    else if (rank === 1) {\n        return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n        index += strides[i] * locs[i];\n    }\n    return index;\n}\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\nexport function indexToLoc(index, rank, strides) {\n    if (rank === 0) {\n        return [];\n    }\n    else if (rank === 1) {\n        return [index];\n    }\n    const locs = new Array(rank);\n    for (let i = 0; i < locs.length - 1; ++i) {\n        locs[i] = Math.floor(index / strides[i]);\n        index -= locs[i] * strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n}\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\nexport function isPromise(object) {\n    //  We chose to not use 'obj instanceOf Promise' for two reasons:\n    //  1. It only reliably works for es6 Promise, not other Promise\n    //  implementations.\n    //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n    //  the async calls, so it is possible the obj (patched) is comparing to a\n    //  pre-patched Promise.\n    return object && object.then && typeof object.then === 'function';\n}\n//# sourceMappingURL=util_base.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n    Rank[\"R5\"] = \"R5\";\n    Rank[\"R6\"] = \"R6\";\n})(Rank || (Rank = {}));\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n    UpcastInt32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n    UpcastBoolAndMap[\"complex64\"] = \"complex64\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n    UpcastFloat32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar UpcastComplex64AndMap;\n(function (UpcastComplex64AndMap) {\n    UpcastComplex64AndMap[\"float32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"int32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"bool\"] = \"complex64\";\n    UpcastComplex64AndMap[\"complex64\"] = \"complex64\";\n})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));\nconst upcastTypeMap = {\n    'float32': UpcastFloat32AndMap,\n    'int32': UpcastInt32AndMap,\n    'bool': UpcastBoolAndMap,\n    'complex64': UpcastComplex64AndMap\n};\nexport function upcastType(typeA, typeB) {\n    if (typeA === 'string' || typeB === 'string') {\n        if (typeA === 'string' && typeB === 'string') {\n            return 'string';\n        }\n        throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n    }\n    return upcastTypeMap[typeA][typeB];\n}\n/** Returns the output type after summation. */\nexport function sumOutType(type) {\n    return upcastType(type, 'int32');\n}\n//# sourceMappingURL=types.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as base from './util_base';\nexport * from './util_base';\nexport * from './hash_util';\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\nexport function createScalarValue(value, dtype) {\n    if (dtype === 'string') {\n        return encodeString(value);\n    }\n    return toTypedArray([value], dtype);\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\nexport function toTypedArray(a, dtype) {\n    if (dtype === 'string') {\n        throw new Error('Cannot convert a string[] to a TypedArray');\n    }\n    if (Array.isArray(a)) {\n        a = base.flatten(a);\n    }\n    if (env().getBool('DEBUG')) {\n        base.checkConversionForErrors(a, dtype);\n    }\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(a);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(a);\n    }\n    else if (dtype === 'bool') {\n        const bool = new Uint8Array(a.length);\n        for (let i = 0; i < bool.length; ++i) {\n            if (Math.round(a[i]) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function now() {\n    return env().platform.now();\n}\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\nexport function fetch(path, requestInits) {\n    return env().platform.fetch(path, requestInits);\n}\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function encodeString(s, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return env().platform.encode(s, encoding);\n}\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function decodeString(bytes, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return env().platform.decode(bytes, encoding);\n}\n//# sourceMappingURL=util.js.map"],"sourceRoot":""}