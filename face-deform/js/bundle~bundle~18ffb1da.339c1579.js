/*! For license information please see bundle~bundle~18ffb1da.339c1579.js.LICENSE.txt */
(("undefined"!=typeof self?self:this).webpackJsonp=("undefined"!=typeof self?self:this).webpackJsonp||[]).push([[2],{149:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},199:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));n(142);var r=n(20),o=n(35),s=n(38);const i="tensorflowjs",a="models_store",c="model_info_store";function u(){if(!Object(r.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function l(e){const t=e.result;t.createObjectStore(a,{keyPath:"modelPath"}),t.createObjectStore(c,{keyPath:"modelPath"})}class d{constructor(e){if(this.indexedDB=u(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(i,1);r.onupgradeneeded=()=>l(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(a,"readonly"),r=t.objectStore(a).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Object(o.g)(t),i=s.transaction(c,"readwrite");let u=i.objectStore(c);const l=u.put({modelPath:this.modelPath,modelArtifactsInfo:r});let d;l.onsuccess=()=>{d=s.transaction(a,"readwrite");const o=d.objectStore(a).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{u=i.objectStore(c);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==d?s.close():d.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}d.URL_SCHEME="indexeddb://";const f=e=>{return Object(r.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(d.URL_SCHEME)?(t=e.slice(d.URL_SCHEME.length),new d(t)):null;var t};s.a.registerSaveRouter(f),s.a.registerLoadRouter(f);class h{constructor(){this.indexedDB=u()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(i,1);n.onupgradeneeded=()=>l(n),n.onsuccess=()=>{const r=n.result,o=r.transaction(c,"readonly"),s=o.objectStore(c).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),o.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(d.URL_SCHEME)?t.slice(d.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(i,1);r.onupgradeneeded=()=>l(r),r.onsuccess=()=>{const o=r.result,s=o.transaction(c,"readwrite"),i=s.objectStore(c),u=i.get(e);let l;u.onsuccess=()=>{if(null==u.result)return o.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=o.transaction(a,"readwrite");const r=l.objectStore(a).delete(e);r.onsuccess=()=>t(u.result.modelArtifactsInfo),r.onerror=e=>n(u.error)};r.onsuccess=s,r.onerror=e=>(s(),o.close(),n(u.error))}},u.onerror=e=>(o.close(),n(u.error)),s.oncomplete=()=>{null==l?o.close():l.oncomplete=()=>o.close()}},r.onerror=e=>n(r.error)}))}}},2:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return c})),n.d(t,"g",(function(){return u})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return f})),n.d(t,"k",(function(){return h})),n.d(t,"l",(function(){return g})),n.d(t,"n",(function(){return p})),n.d(t,"m",(function(){return m})),n.d(t,"o",(function(){return w})),n.d(t,"r",(function(){return y})),n.d(t,"p",(function(){return b})),n.d(t,"q",(function(){return S})),n.d(t,"s",(function(){return v})),n.d(t,"t",(function(){return E})),n.d(t,"u",(function(){return A})),n.d(t,"v",(function(){return B})),n.d(t,"w",(function(){return O})),n.d(t,"x",(function(){return M})),n.d(t,"y",(function(){return L})),n.d(t,"z",(function(){return I})),n.d(t,"A",(function(){return D})),n.d(t,"B",(function(){return R})),n.d(t,"C",(function(){return j})),n.d(t,"D",(function(){return P})),n.d(t,"E",(function(){return T})),n.d(t,"F",(function(){return F})),n.d(t,"G",(function(){return U})),n.d(t,"H",(function(){return $})),n.d(t,"J",(function(){return N})),n.d(t,"I",(function(){return x})),n.d(t,"K",(function(){return C})),n.d(t,"L",(function(){return k})),n.d(t,"M",(function(){return H})),n.d(t,"N",(function(){return _})),n.d(t,"O",(function(){return q})),n.d(t,"Q",(function(){return W})),n.d(t,"P",(function(){return J})),n.d(t,"R",(function(){return z})),n.d(t,"S",(function(){return G})),n.d(t,"T",(function(){return V})),n.d(t,"V",(function(){return K})),n.d(t,"U",(function(){return X})),n.d(t,"W",(function(){return Y})),n.d(t,"X",(function(){return Z})),n.d(t,"Y",(function(){return Q})),n.d(t,"Z",(function(){return ee})),n.d(t,"ab",(function(){return te})),n.d(t,"bb",(function(){return ne})),n.d(t,"cb",(function(){return re})),n.d(t,"eb",(function(){return oe})),n.d(t,"ib",(function(){return se})),n.d(t,"hb",(function(){return ie})),n.d(t,"jb",(function(){return ae})),n.d(t,"kb",(function(){return ce})),n.d(t,"mb",(function(){return ue})),n.d(t,"lb",(function(){return le})),n.d(t,"nb",(function(){return de})),n.d(t,"ob",(function(){return fe})),n.d(t,"pb",(function(){return he})),n.d(t,"qb",(function(){return ge})),n.d(t,"tb",(function(){return pe})),n.d(t,"ub",(function(){return me})),n.d(t,"vb",(function(){return we})),n.d(t,"wb",(function(){return ye})),n.d(t,"xb",(function(){return be})),n.d(t,"zb",(function(){return Se})),n.d(t,"Ab",(function(){return ve})),n.d(t,"Bb",(function(){return Ee})),n.d(t,"yb",(function(){return Ae})),n.d(t,"rb",(function(){return Be})),n.d(t,"sb",(function(){return Oe})),n.d(t,"Cb",(function(){return Me})),n.d(t,"Ib",(function(){return Le})),n.d(t,"Db",(function(){return Ie})),n.d(t,"Gb",(function(){return De})),n.d(t,"Eb",(function(){return Re})),n.d(t,"Fb",(function(){return je})),n.d(t,"Hb",(function(){return Pe})),n.d(t,"Jb",(function(){return Te})),n.d(t,"Kb",(function(){return Fe})),n.d(t,"Lb",(function(){return Ue})),n.d(t,"Mb",(function(){return $e})),n.d(t,"Nb",(function(){return Ne})),n.d(t,"Ob",(function(){return xe})),n.d(t,"Sb",(function(){return Ce})),n.d(t,"Pb",(function(){return ke})),n.d(t,"Qb",(function(){return He})),n.d(t,"Rb",(function(){return _e})),n.d(t,"Ub",(function(){return qe})),n.d(t,"Tb",(function(){return We})),n.d(t,"Vb",(function(){return Je})),n.d(t,"Wb",(function(){return ze})),n.d(t,"Xb",(function(){return Ge})),n.d(t,"Yb",(function(){return Ve})),n.d(t,"Zb",(function(){return Ke})),n.d(t,"ac",(function(){return Xe})),n.d(t,"bc",(function(){return Ye})),n.d(t,"cc",(function(){return Ze})),n.d(t,"ec",(function(){return Qe})),n.d(t,"hc",(function(){return et})),n.d(t,"ic",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"dc",(function(){return ot})),n.d(t,"jc",(function(){return st})),n.d(t,"lc",(function(){return it})),n.d(t,"mc",(function(){return at})),n.d(t,"nc",(function(){return ct})),n.d(t,"oc",(function(){return ut})),n.d(t,"pc",(function(){return lt})),n.d(t,"uc",(function(){return dt})),n.d(t,"sc",(function(){return ft})),n.d(t,"tc",(function(){return ht})),n.d(t,"rc",(function(){return gt})),n.d(t,"qc",(function(){return pt})),n.d(t,"wc",(function(){return mt})),n.d(t,"Ac",(function(){return wt})),n.d(t,"Gc",(function(){return yt})),n.d(t,"xc",(function(){return bt})),n.d(t,"zc",(function(){return St})),n.d(t,"vc",(function(){return vt})),n.d(t,"Cc",(function(){return Et})),n.d(t,"Bc",(function(){return At})),n.d(t,"Fc",(function(){return Bt})),n.d(t,"yc",(function(){return Ot})),n.d(t,"Ec",(function(){return Mt})),n.d(t,"Hc",(function(){return Lt})),n.d(t,"Ic",(function(){return It})),n.d(t,"Jc",(function(){return Dt})),n.d(t,"Kc",(function(){return Rt})),n.d(t,"Lc",(function(){return jt})),n.d(t,"Mc",(function(){return Pt})),n.d(t,"Nc",(function(){return Tt})),n.d(t,"Oc",(function(){return Ft})),n.d(t,"Dc",(function(){return Ut})),n.d(t,"db",(function(){return $t})),n.d(t,"kc",(function(){return Nt})),n.d(t,"Pc",(function(){return xt})),n.d(t,"fb",(function(){return Ct})),n.d(t,"gb",(function(){return kt}));const r="Abs",o="Acos",s="Acosh",i="Add",a="AddN",c="All",u="Any",l="ArgMax",d="ArgMin",f="Asin",h="Asinh",g="Atan",p="Atanh",m="Atan2",w="AvgPool",y="AvgPoolBackprop",b="AvgPool3D",S="AvgPool3DBackprop",v="BatchMatMul",E="BatchToSpaceND",A="BroadcastTo",B="Cast",O="Ceil",M="ClipByValue",L="Complex",I="Concat",D="Conv2D",R="Conv2DBackpropFilter",j="Conv2DBackpropInput",P="Conv3D",T="Conv3DBackpropFilterV2",F="Conv3DBackpropInputV2",U="Cos",$="Cosh",N="Cumsum",x="CropAndResize",C="DepthToSpace",k="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",_="DepthwiseConv2dNativeBackpropInput",q="Dilation2D",W="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",z="Div",G="Elu",V="EluGrad",K="Erf",X="Equal",Y="Exp",Z="Expm1",Q="FFT",ee="Fill",te="FlipLeftRight",ne="Floor",re="FloorDiv",oe="FusedBatchNorm",se="GatherV2",ie="GatherNd",ae="Greater",ce="GreaterEqual",ue="Identity",le="IFFT",de="Imag",fe="IsFinite",he="IsInf",ge="IsNan",pe="Less",me="LessEqual",we="LinSpace",ye="Log",be="Log1p",Se="LogicalAnd",ve="LogicalNot",Ee="LogicalOr",Ae="LogSoftmax",Be="LRN",Oe="LRNBackprop",Me="Max",Le="Maximum",Ie="MaxPool",De="MaxPoolBackprop",Re="MaxPool3D",je="MaxPool3DBackprop",Pe="MaxPoolWithArgmax",Te="Mean",Fe="Min",Ue="Minimum",$e="Mod",Ne="Multiply",xe="Negate",Ce="NotEqual",ke="NonMaxSuppressionV3",He="NonMaxSuppressionV4",_e="NonMaxSuppressionV5",qe="OnesLike",We="OneHot",Je="PadV2",ze="Pow",Ge="Prelu",Ve="Prod",Ke="Range",Xe="Real",Ye="Reciprocal",Ze="Relu",Qe="Reshape",et="ResizeNearestNeighbor",tt="ResizeNearestNeighborGrad",nt="ResizeBilinear",rt="ResizeBilinearGrad",ot="Relu6",st="Reverse",it="Round",at="Rsqrt",ct="ScatterNd",ut="SelectV2",lt="Selu",dt="Slice",ft="Sin",ht="Sinh",gt="Sign",pt="Sigmoid",mt="Softplus",wt="Sqrt",yt="Sum",bt="SpaceToBatchND",St="SplitV",vt="Softmax",Et="SquaredDifference",At="Square",Bt="Sub",Ot="SparseToDense",Mt="StridedSlice",Lt="Tan",It="Tanh",Dt="Tile",Rt="TopK",jt="Transpose",Pt="Unpack",Tt="UnsortedSegmentSum",Ft="ZerosLike",Ut="Step",$t="FromPixels",Nt="RotateWithOffset",xt="_FusedMatMul",Ct="FusedConv2D",kt="FusedDepthwiseConv2D"},200:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return y}));n(142);var r=n(20),o=n(0),s=n(35),i=n(38);const a="/",c="tensorflowjs_models",u="info",l="model_topology",d="weight_specs",f="weight_data",h="model_metadata";function g(e){return{info:[c,e,u].join(a),topology:[c,e,l].join(a),weightSpecs:[c,e,d].join(a),weightData:[c,e,f].join(a),modelMetadata:[c,e,h].join(a)}}function p(e){const t=e.split(a);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(a)}class m{constructor(e){if(!Object(r.b)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=g(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(s.g)(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(s.a)(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const e=JSON.parse(o);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(s.b)(i),t}}m.URL_SCHEME="localstorage://";const w=e=>{return Object(r.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(m.URL_SCHEME)?(t=e.slice(m.URL_SCHEME.length),new m(t)):null;var t};i.a.registerSaveRouter(w),i.a.registerLoadRouter(w);class y{constructor(){Object(o.assert)(Object(r.b)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(o.assert)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=c+a,n=a+u;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(n)){e[p(o)]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){var t;const n=g(e=(t=e).startsWith(m.URL_SCHEME)?t.slice(m.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}},301:function(e,t,n){"use strict";n.r(t),n.d(t,"copyModel",(function(){return O.b})),n.d(t,"listModels",(function(){return O.c})),n.d(t,"moveModel",(function(){return O.d})),n.d(t,"removeModel",(function(){return O.e})),n.d(t,"browserFiles",(function(){return u})),n.d(t,"browserHTTPRequest",(function(){return S})),n.d(t,"concatenateArrayBuffers",(function(){return o.d})),n.d(t,"decodeWeights",(function(){return o.e})),n.d(t,"encodeWeights",(function(){return o.f})),n.d(t,"fromMemory",(function(){return A})),n.d(t,"getLoadHandlers",(function(){return s.b})),n.d(t,"getModelArtifactsInfoForJSON",(function(){return o.g})),n.d(t,"getSaveHandlers",(function(){return s.c})),n.d(t,"http",(function(){return b})),n.d(t,"isHTTPScheme",(function(){return w})),n.d(t,"loadWeights",(function(){return g})),n.d(t,"registerLoadRouter",(function(){return s.d})),n.d(t,"registerSaveRouter",(function(){return s.e})),n.d(t,"weightsLoaderFactory",(function(){return p})),n.d(t,"withSaveHandler",(function(){return B}));n(199),n(200),n(142);var r=n(20),o=n(35),s=n(38);function i(e){return new Promise((e=>setTimeout(e))).then(e)}class a{constructor(e){if(!Object(r.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(a.URL_SCHEME)&&(e=e.slice(a.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await i((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await i((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(o.g)(e)}}}}a.URL_SCHEME="downloads://";class c{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const s=new FileReader;s.onload=s=>{const i=JSON.parse(s.target.result),a=i.modelTopology;if(null==a)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:a});const c=i.weightsManifest;if(null==c)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let u;try{u=this.checkManifestAndWeightFiles(c,t)}catch(e){return void r(e)}const l=[],d=[],f=[];c.forEach((e=>{e.paths.forEach((e=>{d.push(e),f.push(null)})),l.push(...e.weights)})),c.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,s=d.indexOf(e);f[s]=r,-1===f.indexOf(null)&&n({modelTopology:a,weightSpecs:l,weightData:Object(o.d)(f),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy,userDefinedMetadata:i.userDefinedMetadata})},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])}))}))},s.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>Object(o.c)(e.name))),s={};for(const i of e)i.paths.forEach((e=>{const i=Object(o.c)(e);if(-1!==n.indexOf(i))throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(n.push(i),-1===r.indexOf(i))throw new Error(`Weight file with basename '${i}' is not provided.`);s[e]=t[r.indexOf(i)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}}function u(e){return new c(e)}s.a.registerSaveRouter((e=>Object(r.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(a.URL_SCHEME)?function(e="model"){return new a(e)}(e.slice(a.URL_SCHEME.length)):null));var l=n(0);function d(e,t,n,r){!function(e){Object(l.assert)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(l.assert)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(l.assert)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(l.assert)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let o=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++o/e.length*(r-n);return t(i),s})),s))))}var f=n(149);async function h(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(r.b)().platform.fetch:t.fetchFunc,o=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(o):await d(o,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await d(s,t.onProgress,.5,1)}async function g(e,t="",n,r){return p((e=>h(e,{requestInit:r})))(e,t,n)}function p(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),i={},a=null!=r?r.map((()=>!1)):[],c=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const o="quantization"in e?e.quantization.dtype:e.dtype,u=f.a[o]*l.sizeFromShape(e.shape),d=()=>{s[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(d(),a[n]=!0)})):d(),c.push(e.name),n+=u}))})),!a.every((e=>e))){const e=r.filter(((e,t)=>!a[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${c.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),d=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;d.push(t)}))}));const h=await e(d),g={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=h[p+e].byteLength;const s=new ArrayBuffer(r),a=new Uint8Array(s);let c=0;for(let e=0;e<n;e++){const t=new Uint8Array(h[p+e]);a.set(t,c),c+=t.byteLength}i[e].forEach((e=>{const t=s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(o.e)(t,[e.manifestEntry]);for(const e in n)g[e]=n[e]})),p+=n})),g}}class m{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(l.assert)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Object(r.b)().platform.fetch,Object(l.assert)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Object(l.assert)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Object(o.g)(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,o=t.generatedBy,s=t.convertedBy,i=t.format,a=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,u;if(null!=r){const e=await this.loadWeights(r);[c,u]=e}return{modelTopology:n,weightSpecs:c,weightData:u,userDefinedMetadata:a,generatedBy:o,convertedBy:s,format:i}}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),o=n>t?e.substring(n):"";return[r+"/",o]}(t),s=this.weightPathPrefix||n,i=[];for(const t of e)i.push(...t.weights);const a=[],c=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?c.push(this.weightUrlConverter(e)):a.push(s+e+r);this.weightUrlConverter&&a.push(...await Promise.all(c));const u=await h(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,Object(o.d)(u)]}}function w(e){return null!=e.match(m.URL_SCHEME_REGEX)}m.URL_SCHEME_REGEX=/^https?:\/\//;const y=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>w(e))):w(e),n)return b(e,t)}return null};function b(e,t){return new m(e,t)}function S(e,t){return b(e,t)}s.a.registerSaveRouter(y),s.a.registerLoadRouter(y);class v{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class E{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function A(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new v(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new v({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new v({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function B(e){return new E(e)}var O=n(86)},35:function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return a})),n.d(t,"e",(function(){return c})),n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return h})),n.d(t,"d",(function(){return g})),n.d(t,"c",(function(){return p})),n.d(t,"g",(function(){return m}));var r=n(47),o=n(96),s=n(0),i=n(149);async function a(e,t){const n=[],r=[],o=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<o.length;++s){const i=o[s],a=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==a.dtype&&"int32"!==a.dtype&&"bool"!==a.dtype&&"string"!==a.dtype&&"complex64"!==a.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${a.dtype}`);const c={name:i,shape:a.shape,dtype:a.dtype};if("string"===a.dtype){const e=new Promise((async e=>{const t=await a.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let o=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,o),o+=4,r.set(n,o),o+=n.length}e(r)}));r.push(e)}else r.push(a.data());null!=t&&(c.group=t),n.push(c)}return{data:u(await Promise.all(r)),specs:n}}function c(e,t){const n={};let a,c=0;for(const u of t){const t=u.name,l=u.dtype,d=u.shape,f=Object(s.sizeFromShape)(d);let h;if("quantization"in u){const n=u.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${u.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${u.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${u.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],o=e.slice(c,c+f*r),s="uint8"===n.dtype?new Uint8Array(o):new Uint16Array(o);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){h=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===a&&(a=w()),h=a(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);h=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=Math.round(t*n.scale+n.min)}}c+=f*r}else if("string"===l){const t=Object(s.sizeFromShape)(u.shape);h=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(c,c+4))[0];c+=4;const n=new Uint8Array(e.slice(c,c+t));h.push(n),c+=t}}else{const s=i.a[l],a=e.slice(c,c+f*s);if("float32"===l)h=new Float32Array(a);else if("int32"===l)h=new Int32Array(a);else if("bool"===l)h=new Uint8Array(a);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{h=new Float32Array(a);const e=new Float32Array(h.length/2),s=new Float32Array(h.length/2);for(let t=0;t<e.length;t++)e[t]=h[2*t],s[t]=h[2*t+1];const i=Object(o.a)(e,d,"float32"),c=Object(o.a)(s,d,"float32");n[t]=Object(r.a)(i,c)}}c+=f*s}"complex64"!==l&&(n[t]=Object(o.a)(h,d,l))}return n}function u(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let o=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),o),o+=e.byteLength})),r.buffer}const l=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(t){return l?e.byteLength(t):new Blob([t]).size}function f(t){if(l)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function h(t){if(l){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function g(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function p(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function m(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function w(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const o=new ArrayBuffer(4*r.length),s=new Uint32Array(o);for(let o=0;o<r.length;o++){const i=r[o],a=e[n[i>>10]+(1023&i)]+t[i>>10];s[o]=a}return new Float32Array(o)}}}).call(this,n(441).Buffer)},38:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"e",(function(){return o})),n.d(t,"d",(function(){return s})),n.d(t,"c",(function(){return i})),n.d(t,"b",(function(){return a}));class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==r.instance&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,n){const o=[];return("load"===t?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&o.push(r)})),o}}const o=e=>r.registerSaveRouter(e),s=e=>r.registerLoadRouter(e),i=e=>r.getSaveHandlers(e),a=(e,t)=>r.getLoadHandlers(e,t)},65:function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return c})),n.d(t,"c",(function(){return u})),n.d(t,"e",(function(){return l})),n.d(t,"d",(function(){return d}));var r=n(20),o=n(148);const s=Object(o.a)("kernelRegistry",(()=>new Map)),i=Object(o.a)("gradRegistry",(()=>new Map));function a(e,t){const n=f(e,t);return s.get(n)}function c(e){return i.get(e)}function u(e){const t=s.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[s,i]=o,[a]=s.split("_");a===e&&n.push(i)}return n}function l(e){const{kernelName:t,backendName:n}=e,r=f(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function d(e){const{kernelName:t}=e;i.has(t)&&Object(r.b)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function f(e,t){return`${t}_${e}`}},86:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"d",(function(){return f})),n.d(t,"b",(function(){return d})),n.d(t,"e",(function(){return l})),n.d(t,"c",(function(){return u}));var r=n(0),o=n(38);const s="://";class i{constructor(){this.managers={}}static getInstance(){return null==i.instance&&(i.instance=new i),i.instance}static registerManager(e,t){Object(r.assert)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(s)&&(e=e.slice(0,e.indexOf(s))),Object(r.assert)(e.length>0,(()=>"scheme must not be an empty string."));const n=i.getInstance();Object(r.assert)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function a(e){if(-1===e.indexOf(s))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${i.getSchemes().join(",")}`);return{scheme:e.split(s)[0],path:e.split(s)[1]}}async function c(e,t,n=!1){Object(r.assert)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=o.a.getLoadHandlers(e);Object(r.assert)(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(r.assert)(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const c=s[0],u=o.a.getSaveHandlers(t);Object(r.assert)(u.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(r.assert)(u.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const l=u[0],d=a(e).scheme,f=a(e).path,h=d===a(e).scheme,g=await c.load();n&&h&&await i.getManager(d).removeModel(f);const p=await l.save(g);return n&&!h&&await i.getManager(d).removeModel(f),p.modelArtifactsInfo}async function u(){const e=i.getSchemes(),t={};for(const n of e){const e=await i.getManager(n).listModels();for(const r in e){t[n+s+r]=e[r]}}return t}async function l(e){const t=a(e);return i.getManager(t.scheme).removeModel(t.path)}async function d(e,t){return c(e,t,!1)}async function f(e,t){return c(e,t,!0)}}}]);
//# sourceMappingURL=bundle~bundle~18ffb1da.339c1579.js.map