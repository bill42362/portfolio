{"version":3,"sources":["webpack:///./node_modules/@tensorflow/tfjs-core/dist/util.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tape.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/tensor.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/util_base.js","webpack:///./node_modules/@tensorflow/tfjs-core/dist/types.js"],"names":["createScalarValue","value","dtype","encodeString","toTypedArray","a","Error","Array","isArray","getBool","Float32Array","Int32Array","Uint8Array","noConversionNeeded","bool","length","i","Math","round","now","platform","fetch","path","requestInits","s","encoding","encode","decodeString","bytes","decode","makeTypesMatch","b","cast","getTensorsInContainer","result","list","walkTensorContainer","Set","container","seen","push","obj","iterable","k","val","has","add","inferShape","firstElem","shape","deepAssertShapeConsistency","indices","join","subShape","slice","concat","assertDtype","expectedDtype","actualDType","argName","functionName","convertToTensor","x","parseAsDtype","inferredDtype","indexOf","type","constructor","name","inferredShape","values","makeTensor","convertToTensorArray","arg","map","t","getFilteredNodesXToY","tape","xs","y","tensorsFromX","nodesFromX","id","node","nodeInputs","inputs","inputName","input","anyInputFromX","j","outputs","forEach","output","tensorsLeadToY","nodesToY","filteredTape","prunedInputs","nodeInput","prunedNode","Object","assign","backpropagateGradients","tensorAccumulatedGradientMap","tidy","dys","o","gradTensor","gradient","kernelName","inputGradients","keys","dx","curGradient","dispose","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","encodingOrOffset","this","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","write","fromString","isBuffer","len","checked","copy","buffer","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","exports","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","tensorToString","vals","verbose","strides","padPerCol","numCols","rank","valuesOrTuples","createComplexTuples","row","valToString","computeMaxSizePerColumn","valsLines","subTensorToString","lines","l","pad","valStr","parseFloat","toFixed","boolNumToString","v","isLast","storagePerElement","firstValsSize","firstVals","lastVals","subshape","substrides","stride","sep","newLineSep","complexTuples","locs","index","locToIndex","loc","msg","trackerFn","opHandler","deprecationWarningFn","setTensorTracker","fn","setOpHandler","handler","setDeprecationWarningFn","dataId","kept","isDisposedInternal","rankType","dataSync","throwIfDisposed","util","_a","readSync","isDisposed","disposeTensor","print","clone","trainable","makeVariable","hasInstance","instance","initialValue","tensorId","super","newValue","incRef","disposeVariable","Function","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","num","shuffle","counter","temp","random","clamp","nearestLargerEven","sum","randUniform","r","distSquared","diff","assert","expr","assertShapesMatch","shapeA","shapeB","errorMessagePrefix","arraysEqual","assertNonNull","flatten","skipTypedArray","isTypedArray","sizeFromShape","isScalarShape","n1","n2","isInt","tanh","e2x","exp","sizeToSquarishShape","width","ceil","sqrt","createShuffledIndices","shuffledIndices","Uint32Array","rightPad","repeat","repeatedTry","checkFn","delayFn","maxCounter","Promise","resolve","reject","tryCount","tryFn","nextBackoff","setTimeout","inferFromImplicitShape","shapeProd","implicitIdx","newShape","parseAxisParam","axis","every","ax","squeezeShape","keptDims","isEmptyArray","axes","sort","getTypedArrayFromDType","getArrayFromDType","checkConversionForErrors","isValidDtype","hasEncodingLoss","oldType","newType","bytesPerElement","bytesFromStringArray","isString","isBoolean","isNumber","inferDtype","isFunction","f","nearestDivisor","computeStrides","createNestedArray","d","rest","reduce","acc","toNestedArray","makeOnesTypedArray","makeZerosTypedArray","makeZerosNestedTypedArray","prev","curr","assertNonNegativeIntegerDimensions","dimSize","isInteger","indexToLoc","isPromise","object","then","Rank","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","UpcastComplex64AndMap","upcastTypeMap","upcastType","typeA","typeB"],"mappings":";qJAAA,6RAsBO,SAASA,EAAkBC,EAAOC,GACrC,MAAc,WAAVA,EACOC,EAAaF,GAEjBG,EAAa,CAACH,GAAQC,GAO1B,SAASE,EAAaC,EAAGH,GAC5B,GAAc,WAAVA,EACA,MAAM,IAAII,MAAM,6CAQpB,GANIC,MAAMC,QAAQH,KACdA,EAAI,IAAaA,IAEjB,cAAMI,QAAQ,UACd,IAA8BJ,EAAGH,GAbzC,SAA4BG,EAAGH,GAC3B,OAAQG,aAAaK,cAA0B,YAAVR,GAChCG,aAAaM,YAAwB,UAAVT,GAC3BG,aAAaO,YAAwB,SAAVV,EAY5BW,CAAmBR,EAAGH,GACtB,OAAOG,EAEX,GAAa,MAATH,GAA2B,YAAVA,GAAiC,cAAVA,EACxC,OAAO,IAAIQ,aAAaL,GAEvB,GAAc,UAAVH,EACL,OAAO,IAAIS,WAAWN,GAErB,GAAc,SAAVH,EAAkB,CACvB,MAAMY,EAAO,IAAIF,WAAWP,EAAEU,QAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKC,SAAUC,EACN,IAArBC,KAAKC,MAAMb,EAAEW,MACbF,EAAKE,GAAK,GAGlB,OAAOF,EAGP,MAAM,IAAIR,MAAM,qBAAqBJ,KActC,SAASiB,IACZ,OAAO,cAAMC,SAASD,MAkBnB,SAASE,EAAMC,EAAMC,GACxB,OAAO,cAAMH,SAASC,MAAMC,EAAMC,GAU/B,SAASpB,EAAaqB,EAAGC,EAAW,SAEvC,OADAA,EAAWA,GAAY,QAChB,cAAML,SAASM,OAAOF,EAAGC,GAU7B,SAASE,EAAaC,EAAOH,EAAW,SAE3C,OADAA,EAAWA,GAAY,QAChB,cAAML,SAASS,OAAOD,EAAOH,GAxHxC,8nE,gCCAA,4FAmBO,SAASK,EAAezB,EAAG0B,GAC9B,GAAI1B,EAAEH,QAAU6B,EAAE7B,MACd,MAAO,CAACG,EAAG0B,GAEf,MAAM7B,EAAQ,YAAWG,EAAEH,MAAO6B,EAAE7B,OACpC,MAAO,CAACG,EAAE2B,KAAK9B,GAAQ6B,EAAEC,KAAK9B,IAqB3B,SAAS+B,EAAsBC,GAClC,MAAMC,EAAO,GAGb,OADAC,EAAoBF,EAAQC,EADf,IAAIE,KAEVF,EAEX,SAASC,EAAoBE,EAAWH,EAAMI,GAC1C,GAAiB,MAAbD,EACA,OAEJ,GAAIA,aAAqB,IAErB,YADAH,EAAKK,KAAKF,GAGd,GAcgBG,EAdAH,GAeT/B,MAAMC,QAAQiC,IAAuB,iBAARA,EAdhC,OAaR,IAAoBA,EAVhB,MAAMC,EAAWJ,EACjB,IAAK,MAAMK,KAAKD,EAAU,CACtB,MAAME,EAAMF,EAASC,GAChBJ,EAAKM,IAAID,KACVL,EAAKO,IAAIF,GACTR,EAAoBQ,EAAKT,EAAMI,O,+BCpE3C,+IAoBO,SAASQ,EAAWH,EAAK1C,GAC5B,IAAI8C,EAAYJ,EAChB,GAAI,YAAaA,GACb,MAAiB,WAAV1C,EAAqB,GAAK,CAAC0C,EAAI7B,QAE1C,IAAKR,MAAMC,QAAQoC,GACf,MAAO,GAEX,MAAMK,EAAQ,GACd,KAAO1C,MAAMC,QAAQwC,IACjB,YAAaA,IAAwB,WAAV9C,GAC3B+C,EAAMT,KAAKQ,EAAUjC,QACrBiC,EAAYA,EAAU,GAM1B,OAJIzC,MAAMC,QAAQoC,IACd,cAAMnC,QAAQ,uCACdyC,EAA2BN,EAAKK,EAAO,IAEpCA,EAEX,SAASC,EAA2BN,EAAKK,EAAOE,GAE5C,GADAA,EAAUA,GAAW,IACf5C,MAAMC,QAAQoC,KAAU,YAAaA,GAGvC,YAFA,YAAwB,IAAjBK,EAAMlC,QAAc,IAAM,eAAeoC,EAAQC,KAAK,+DACjBH,EAAM,gBAGtD,YAAOA,EAAMlC,OAAS,GAAG,IAAM,eAAeoC,EAAQC,KAAK,oDACjCR,EAAI7B,oBAC9B,YAAO6B,EAAI7B,SAAWkC,EAAM,IAAI,IAAM,eAAeE,EAAQC,KAAK,sBAAsBH,EAAM,wBACrEL,EAAI7B,oBAC7B,MAAMsC,EAAWJ,EAAMK,MAAM,GAC7B,IAAK,IAAItC,EAAI,EAAGA,EAAI4B,EAAI7B,SAAUC,EAC9BkC,EAA2BN,EAAI5B,GAAIqC,EAAUF,EAAQI,OAAOvC,IAGpE,SAASwC,EAAYC,EAAeC,EAAaC,EAASC,GACtD,GAAsB,sBAAlBH,EAAJ,CAGA,GAAqB,MAAjBA,EACA,MAAM,IAAInD,MAAM,kCAEpB,GAAsB,YAAlBmD,GAA+BA,IAAkBC,GAC/B,YAAlBD,GAA+C,WAAhBC,EAC/B,MAAM,IAAIpD,MAAM,aAAaqD,iBAAuBC,cAC1CH,qBAAiCC,aAG5C,SAASG,EAAgBC,EAAGH,EAASC,EAAcG,EAAe,WACrE,GAAID,aAAa,IAEb,OADAN,EAAYO,EAAcD,EAAE5D,MAAOyD,EAASC,GACrCE,EAEX,IAAIE,EAAgB,YAAWF,GAQ/B,GALsB,WAAlBE,GACA,CAAC,OAAQ,QAAS,WAAWC,QAAQF,IAAiB,IACtDC,EAAgBD,GAEpBP,EAAYO,EAAcC,EAAeL,EAASC,GACxC,MAALE,IACC,YAAaA,KAAOvD,MAAMC,QAAQsD,IAAmB,iBAANA,GAChC,kBAANA,GAAgC,iBAANA,EAAiB,CACtD,MAAMI,EAAY,MAALJ,EAAY,OAASA,EAAEK,YAAYC,KAChD,MAAM,IAAI9D,MAAM,aAAaqD,iBAAuBC,+CACdM,MAE1C,MAAMG,EAAgBtB,EAAWe,EAAGE,GAC/B,YAAaF,IAAOvD,MAAMC,QAAQsD,KACnCA,EAAI,CAACA,IAET,MACMQ,EAA2B,WAAlBN,EACX,uBAAaF,EAAGE,GAChB,YAAQF,EAAG,IAHQ,GAIvB,OAAO,IAAOS,WAAWD,EAAQD,EAAeL,GAE7C,SAASQ,EAAqBC,EAAKd,EAASC,EAAcG,EAAe,WAC5E,IAAKxD,MAAMC,QAAQiE,GACf,MAAM,IAAInE,MAAM,YAAYqD,eAAqBC,gDAIrD,OADgBa,EACDC,KAAI,CAACC,EAAG3D,IAAM6C,EAAgBc,EAAG,GAAGhB,KAAW3C,KAAM4C,EAAcG,O,iCCzGtF,+EAyBO,SAASa,EAAqBC,EAAMC,EAAIC,GAG3C,MAAMC,EAAe,GACfC,EAAa,GACnB,IAAK,IAAIjE,EAAI,EAAGA,EAAI8D,EAAG/D,OAAQC,IAC3BgE,EAAaF,EAAG9D,GAAGkE,KAAM,EAE7B,IAAK,IAAIlE,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAK,CAClC,MAAMmE,EAAON,EAAK7D,GACZoE,EAAaD,EAAKE,OACxB,IAAK,MAAMC,KAAaF,EAAY,CAChC,MAAMG,EAAQH,EAAWE,GACzB,IAAIE,GAAgB,EACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAG/D,OAAQ0E,IAC3B,GAAIT,EAAaO,EAAML,IAAK,CACxBC,EAAKO,QAAQC,SAAQC,GAAUZ,EAAaY,EAAOV,KAAM,IACzDM,GAAgB,EAChBP,EAAWE,EAAKD,KAAM,EACtB,MAGR,GAAIM,EACA,OAKZ,MAAMK,EAAiB,GACvBA,EAAed,EAAEG,KAAM,EACvB,MAAMY,EAAW,GACjB,IAAK,IAAI9E,EAAI6D,EAAK9D,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACvC,MAAMmE,EAAON,EAAK7D,GACZoE,EAAaD,EAAKE,OAExB,IAAK,IAAII,EAAI,EAAGA,EAAIN,EAAKO,QAAQ3E,OAAQ0E,IACrC,GAAII,EAAeV,EAAKO,QAAQD,GAAGP,IAAK,CACpC,IAAK,MAAMI,KAAaF,EACpBS,EAAeT,EAAWE,GAAWJ,KAAM,EAC3CY,EAASX,EAAKD,KAAM,EAExB,OAKZ,MAAMa,EAAe,GACrB,IAAK,IAAI/E,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAK,CAClC,MAAMmE,EAAON,EAAK7D,GAClB,GAAIiE,EAAWE,EAAKD,KAAOY,EAASX,EAAKD,IAAK,CAE1C,MAAMc,EAAe,GACrB,IAAK,MAAMV,KAAaH,EAAKE,OAAQ,CACjC,MAAMY,EAAYd,EAAKE,OAAOC,GAC1BN,EAAaiB,EAAUf,MACvBc,EAAaV,GAAaW,GAIlC,MAAMC,EAAaC,OAAOC,OAAO,GAAIjB,GACrCe,EAAWb,OAASW,EACpBE,EAAWR,QAAUP,EAAKO,QAC1BK,EAAavD,KAAK0D,IAG1B,OAAOH,EASJ,SAASM,EAAuBC,EAA8BP,EAAcQ,EAAMzD,GAErF,IAAK,IAAI9B,EAAI+E,EAAahF,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC/C,MAAMmE,EAAOY,EAAa/E,GACpBwF,EAAM,GAYZ,GAXArB,EAAKO,QAAQC,SAAQc,IACjB,MAAMC,EAAaJ,EAA6BG,EAAEvB,IAChC,MAAdwB,EACAF,EAAIhE,KAAKkE,GAKTF,EAAIhE,KAAK,SAGI,MAAjB2C,EAAKwB,SACL,MAAM,IAAIrG,MACN,4DAAO6E,EAAKyB,eAGpB,MAAMC,EAAiB1B,EAAKwB,SAASH,GACrC,IAAK,MAAMlB,KAAaH,EAAKE,OAAQ,CACjC,KAAMC,KAAauB,GACf,MAAM,IAAIvG,MAAM,iCAAiCgF,iCACfa,OAAOW,KAAKD,OAGlD,MAAME,EAAKR,GAAK,IAAMM,EAAevB,OACrC,GAAiB,YAAbyB,EAAG7G,MACH,MAAM,IAAII,MAAM,4BAA4B6E,EAAKyB,qCAC1CtB,yCAAiDyB,EAAG7G,UAE/D,MAAM4D,EAAIqB,EAAKE,OAAOC,GACtB,IAAK,IAAiByB,EAAG9D,MAAOa,EAAEb,OAC9B,MAAM,IAAI3C,MAAM,4BAA4B6E,EAAKyB,sCACzCtB,iBAAyByB,EAAG9D,wDACLa,EAAEb,UAErC,GAA0C,MAAtCqD,EAA6BxC,EAAEoB,IAC/BoB,EAA6BxC,EAAEoB,IAAM6B,MAEpC,CACD,MAAMC,EAAcV,EAA6BxC,EAAEoB,IACnDoB,EAA6BxC,EAAEoB,IAAMpC,EAAIkE,EAAaD,GACtDC,EAAYC,e,kCChJ5B,YAUA,IAAIC,EAAS,EAAQ,KACjBC,EAAU,EAAQ,KAClB3G,EAAU,EAAQ,KAmDtB,SAAS4G,IACP,OAAOC,EAAOC,oBACV,WACA,WAGN,SAASC,EAAcC,EAAMzG,GAC3B,GAAIqG,IAAerG,EACjB,MAAM,IAAI0G,WAAW,8BAcvB,OAZIJ,EAAOC,qBAETE,EAAO,IAAI5G,WAAWG,IACjB2G,UAAYL,EAAOM,WAGX,OAATH,IACFA,EAAO,IAAIH,EAAOtG,IAEpByG,EAAKzG,OAASA,GAGTyG,EAaT,SAASH,EAAQ5C,EAAKmD,EAAkB7G,GACtC,KAAKsG,EAAOC,qBAAyBO,gBAAgBR,GACnD,OAAO,IAAIA,EAAO5C,EAAKmD,EAAkB7G,GAI3C,GAAmB,iBAAR0D,EAAkB,CAC3B,GAAgC,iBAArBmD,EACT,MAAM,IAAItH,MACR,qEAGJ,OAAOwH,EAAYD,KAAMpD,GAE3B,OAAOsD,EAAKF,KAAMpD,EAAKmD,EAAkB7G,GAW3C,SAASgH,EAAMP,EAAMvH,EAAO2H,EAAkB7G,GAC5C,GAAqB,iBAAVd,EACT,MAAM,IAAI+H,UAAU,yCAGtB,MAA2B,oBAAhBC,aAA+BhI,aAAiBgI,YA6H7D,SAA0BT,EAAMU,EAAOC,EAAYpH,GAGjD,GAFAmH,EAAME,WAEFD,EAAa,GAAKD,EAAME,WAAaD,EACvC,MAAM,IAAIV,WAAW,6BAGvB,GAAIS,EAAME,WAAaD,GAAcpH,GAAU,GAC7C,MAAM,IAAI0G,WAAW,6BAIrBS,OADiBG,IAAfF,QAAuCE,IAAXtH,EACtB,IAAIH,WAAWsH,QACHG,IAAXtH,EACD,IAAIH,WAAWsH,EAAOC,GAEtB,IAAIvH,WAAWsH,EAAOC,EAAYpH,GAGxCsG,EAAOC,qBAETE,EAAOU,GACFR,UAAYL,EAAOM,UAGxBH,EAAOc,EAAcd,EAAMU,GAE7B,OAAOV,EAvJEe,CAAgBf,EAAMvH,EAAO2H,EAAkB7G,GAGnC,iBAAVd,EAwFb,SAAqBuH,EAAMgB,EAAQ/G,GACT,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAK4F,EAAOoB,WAAWhH,GACrB,MAAM,IAAIuG,UAAU,8CAGtB,IAAIjH,EAAwC,EAA/BqH,EAAWI,EAAQ/G,GAG5BiH,GAFJlB,EAAOD,EAAaC,EAAMzG,IAER4H,MAAMH,EAAQ/G,GAE5BiH,IAAW3H,IAIbyG,EAAOA,EAAKlE,MAAM,EAAGoF,IAGvB,OAAOlB,EA5GEoB,CAAWpB,EAAMvH,EAAO2H,GAsJnC,SAAqBJ,EAAM/E,GACzB,GAAI4E,EAAOwB,SAASpG,GAAM,CACxB,IAAIqG,EAA4B,EAAtBC,EAAQtG,EAAI1B,QAGtB,OAAoB,KAFpByG,EAAOD,EAAaC,EAAMsB,IAEjB/H,QAIT0B,EAAIuG,KAAKxB,EAAM,EAAG,EAAGsB,GAHZtB,EAOX,GAAI/E,EAAK,CACP,GAA4B,oBAAhBwF,aACRxF,EAAIwG,kBAAkBhB,aAAgB,WAAYxF,EACpD,MAA0B,iBAAfA,EAAI1B,SA+8CL6B,EA/8CkCH,EAAI1B,SAg9CrC6B,EA/8CF2E,EAAaC,EAAM,GAErBc,EAAcd,EAAM/E,GAG7B,GAAiB,WAAbA,EAAIyB,MAAqB1D,EAAQiC,EAAIyG,MACvC,OAAOZ,EAAcd,EAAM/E,EAAIyG,MAw8CrC,IAAgBtG,EAp8Cd,MAAM,IAAIoF,UAAU,sFA9KbmB,CAAW3B,EAAMvH,GA4B1B,SAASmJ,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIrB,UAAU,oCACf,GAAIqB,EAAO,EAChB,MAAM,IAAI5B,WAAW,wCA4BzB,SAASK,EAAaN,EAAM6B,GAG1B,GAFAD,EAAWC,GACX7B,EAAOD,EAAaC,EAAM6B,EAAO,EAAI,EAAoB,EAAhBN,EAAQM,KAC5ChC,EAAOC,oBACV,IAAK,IAAItG,EAAI,EAAGA,EAAIqI,IAAQrI,EAC1BwG,EAAKxG,GAAK,EAGd,OAAOwG,EAwCT,SAASc,EAAed,EAAMU,GAC5B,IAAInH,EAASmH,EAAMnH,OAAS,EAAI,EAA4B,EAAxBgI,EAAQb,EAAMnH,QAClDyG,EAAOD,EAAaC,EAAMzG,GAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BwG,EAAKxG,GAAgB,IAAXkH,EAAMlH,GAElB,OAAOwG,EA+DT,SAASuB,EAAShI,GAGhB,GAAIA,GAAUqG,IACZ,MAAM,IAAIK,WAAW,0DACaL,IAAakC,SAAS,IAAM,UAEhE,OAAgB,EAATvI,EAsFT,SAASqH,EAAYI,EAAQ/G,GAC3B,GAAI4F,EAAOwB,SAASL,GAClB,OAAOA,EAAOzH,OAEhB,GAA2B,oBAAhBkH,aAA6D,mBAAvBA,YAAYsB,SACxDtB,YAAYsB,OAAOf,IAAWA,aAAkBP,aACnD,OAAOO,EAAOJ,WAEM,iBAAXI,IACTA,EAAS,GAAKA,GAGhB,IAAIM,EAAMN,EAAOzH,OACjB,GAAY,IAAR+H,EAAW,OAAO,EAItB,IADA,IAAIU,GAAc,IAEhB,OAAQ/H,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOqH,EACT,IAAK,OACL,IAAK,QACL,UAAKT,EACH,OAAOoB,EAAYjB,GAAQzH,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAAN+H,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOY,EAAclB,GAAQzH,OAC/B,QACE,GAAIyI,EAAa,OAAOC,EAAYjB,GAAQzH,OAC5CU,GAAY,GAAKA,GAAUkI,cAC3BH,GAAc,GAMtB,SAASI,EAAcnI,EAAUoI,EAAOC,GACtC,IAAIN,GAAc,EAclB,SALcnB,IAAVwB,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQhC,KAAK9G,OACf,MAAO,GAOT,SAJYsH,IAARyB,GAAqBA,EAAMjC,KAAK9G,UAClC+I,EAAMjC,KAAK9G,QAGT+I,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKpI,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOsI,EAASlC,KAAMgC,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOE,EAAUnC,KAAMgC,EAAOC,GAEhC,IAAK,QACH,OAAOG,EAAWpC,KAAMgC,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOI,EAAYrC,KAAMgC,EAAOC,GAElC,IAAK,SACH,OAAOK,EAAYtC,KAAMgC,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOM,EAAavC,KAAMgC,EAAOC,GAEnC,QACE,GAAIN,EAAa,MAAM,IAAIxB,UAAU,qBAAuBvG,GAC5DA,GAAYA,EAAW,IAAIkI,cAC3BH,GAAc,GAStB,SAASa,EAAMtI,EAAGuI,EAAGC,GACnB,IAAIvJ,EAAIe,EAAEuI,GACVvI,EAAEuI,GAAKvI,EAAEwI,GACTxI,EAAEwI,GAAKvJ,EAmIT,SAASwJ,EAAsBvB,EAAQrG,EAAKuF,EAAY1G,EAAUgJ,GAEhE,GAAsB,IAAlBxB,EAAOlI,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfoH,GACT1G,EAAW0G,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACVuC,MAAMvC,KAERA,EAAasC,EAAM,EAAKxB,EAAOlI,OAAS,GAItCoH,EAAa,IAAGA,EAAac,EAAOlI,OAASoH,GAC7CA,GAAcc,EAAOlI,OAAQ,CAC/B,GAAI0J,EAAK,OAAQ,EACZtC,EAAac,EAAOlI,OAAS,OAC7B,GAAIoH,EAAa,EAAG,CACzB,IAAIsC,EACC,OAAQ,EADJtC,EAAa,EAUxB,GALmB,iBAARvF,IACTA,EAAMyE,EAAOU,KAAKnF,EAAKnB,IAIrB4F,EAAOwB,SAASjG,GAElB,OAAmB,IAAfA,EAAI7B,QACE,EAEH4J,EAAa1B,EAAQrG,EAAKuF,EAAY1G,EAAUgJ,GAClD,GAAmB,iBAAR7H,EAEhB,OADAA,GAAY,IACRyE,EAAOC,qBACiC,mBAAjC1G,WAAW+G,UAAU1D,QAC1BwG,EACK7J,WAAW+G,UAAU1D,QAAQ2G,KAAK3B,EAAQrG,EAAKuF,GAE/CvH,WAAW+G,UAAUkD,YAAYD,KAAK3B,EAAQrG,EAAKuF,GAGvDwC,EAAa1B,EAAQ,CAAErG,GAAOuF,EAAY1G,EAAUgJ,GAG7D,MAAM,IAAIzC,UAAU,wCAGtB,SAAS2C,EAAcG,EAAKlI,EAAKuF,EAAY1G,EAAUgJ,GACrD,IA0BIzJ,EA1BA+J,EAAY,EACZC,EAAYF,EAAI/J,OAChBkK,EAAYrI,EAAI7B,OAEpB,QAAiBsH,IAAb5G,IAEe,UADjBA,EAAWyJ,OAAOzJ,GAAUkI,gBACY,UAAblI,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIqJ,EAAI/J,OAAS,GAAK6B,EAAI7B,OAAS,EACjC,OAAQ,EAEVgK,EAAY,EACZC,GAAa,EACbC,GAAa,EACb9C,GAAc,EAIlB,SAASgD,EAAMC,EAAKpK,GAClB,OAAkB,IAAd+J,EACKK,EAAIpK,GAEJoK,EAAIC,aAAarK,EAAI+J,GAKhC,GAAIN,EAAK,CACP,IAAIa,GAAc,EAClB,IAAKtK,EAAImH,EAAYnH,EAAIgK,EAAWhK,IAClC,GAAImK,EAAKL,EAAK9J,KAAOmK,EAAKvI,GAAqB,IAAhB0I,EAAoB,EAAItK,EAAIsK,IAEzD,IADoB,IAAhBA,IAAmBA,EAAatK,GAChCA,EAAIsK,EAAa,IAAML,EAAW,OAAOK,EAAaP,OAEtC,IAAhBO,IAAmBtK,GAAKA,EAAIsK,GAChCA,GAAc,OAKlB,IADInD,EAAa8C,EAAYD,IAAW7C,EAAa6C,EAAYC,GAC5DjK,EAAImH,EAAYnH,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIuK,GAAQ,EACH9F,EAAI,EAAGA,EAAIwF,EAAWxF,IAC7B,GAAI0F,EAAKL,EAAK9J,EAAIyE,KAAO0F,EAAKvI,EAAK6C,GAAI,CACrC8F,GAAQ,EACR,MAGJ,GAAIA,EAAO,OAAOvK,EAItB,OAAQ,EAeV,SAASwK,EAAUJ,EAAK5C,EAAQiD,EAAQ1K,GACtC0K,EAASC,OAAOD,IAAW,EAC3B,IAAIE,EAAYP,EAAIrK,OAAS0K,EACxB1K,GAGHA,EAAS2K,OAAO3K,IACH4K,IACX5K,EAAS4K,GAJX5K,EAAS4K,EASX,IAAIC,EAASpD,EAAOzH,OACpB,GAAI6K,EAAS,GAAM,EAAG,MAAM,IAAI5D,UAAU,sBAEtCjH,EAAS6K,EAAS,IACpB7K,EAAS6K,EAAS,GAEpB,IAAK,IAAI5K,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAC/B,IAAI6K,EAASC,SAAStD,EAAOuD,OAAW,EAAJ/K,EAAO,GAAI,IAC/C,GAAI0J,MAAMmB,GAAS,OAAO7K,EAC1BoK,EAAIK,EAASzK,GAAK6K,EAEpB,OAAO7K,EAGT,SAASgL,EAAWZ,EAAK5C,EAAQiD,EAAQ1K,GACvC,OAAOkL,EAAWxC,EAAYjB,EAAQ4C,EAAIrK,OAAS0K,GAASL,EAAKK,EAAQ1K,GAG3E,SAASmL,EAAYd,EAAK5C,EAAQiD,EAAQ1K,GACxC,OAAOkL,EAq6BT,SAAuBE,GAErB,IADA,IAAIC,EAAY,GACPpL,EAAI,EAAGA,EAAImL,EAAIpL,SAAUC,EAEhCoL,EAAU5J,KAAyB,IAApB2J,EAAIE,WAAWrL,IAEhC,OAAOoL,EA36BWE,CAAa9D,GAAS4C,EAAKK,EAAQ1K,GAGvD,SAASwL,EAAanB,EAAK5C,EAAQiD,EAAQ1K,GACzC,OAAOmL,EAAWd,EAAK5C,EAAQiD,EAAQ1K,GAGzC,SAASyL,EAAapB,EAAK5C,EAAQiD,EAAQ1K,GACzC,OAAOkL,EAAWvC,EAAclB,GAAS4C,EAAKK,EAAQ1K,GAGxD,SAAS0L,EAAWrB,EAAK5C,EAAQiD,EAAQ1K,GACvC,OAAOkL,EAk6BT,SAAyBE,EAAKO,GAG5B,IAFA,IAAIC,EAAGC,EAAIC,EACPT,EAAY,GACPpL,EAAI,EAAGA,EAAImL,EAAIpL,WACjB2L,GAAS,GAAK,KADa1L,EAIhC4L,GADAD,EAAIR,EAAIE,WAAWrL,KACT,EACV6L,EAAKF,EAAI,IACTP,EAAU5J,KAAKqK,GACfT,EAAU5J,KAAKoK,GAGjB,OAAOR,EA/6BWU,CAAetE,EAAQ4C,EAAIrK,OAAS0K,GAASL,EAAKK,EAAQ1K,GAkF9E,SAASoJ,EAAaiB,EAAKvB,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQsB,EAAIrK,OACtBmG,EAAO6F,cAAc3B,GAErBlE,EAAO6F,cAAc3B,EAAI9H,MAAMuG,EAAOC,IAIjD,SAASE,EAAWoB,EAAKvB,EAAOC,GAC9BA,EAAM7I,KAAK+L,IAAI5B,EAAIrK,OAAQ+I,GAI3B,IAHA,IAAImD,EAAM,GAENjM,EAAI6I,EACD7I,EAAI8I,GAAK,CACd,IAQMoD,EAAYC,EAAWC,EAAYC,EARrCC,EAAYlC,EAAIpK,GAChBuM,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,EAEJ,GAAItM,EAAIwM,GAAoB1D,EAG1B,OAAQ0D,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,MAAV,KADlBJ,EAAa9B,EAAIpK,EAAI,OAEnBqM,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa9B,EAAIpK,EAAI,GACrBmM,EAAY/B,EAAIpK,EAAI,GACQ,MAAV,IAAbkM,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa9B,EAAIpK,EAAI,GACrBmM,EAAY/B,EAAIpK,EAAI,GACpBoM,EAAahC,EAAIpK,EAAI,GACO,MAAV,IAAbkM,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAIzK,KAAK+K,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAIzK,KAAK+K,GACTvM,GAAKwM,EAGP,OAQF,SAAgCC,GAC9B,IAAI3E,EAAM2E,EAAW1M,OACrB,GAAI+H,GAAO4E,EACT,OAAOxC,OAAOyC,aAAaC,MAAM1C,OAAQuC,GAI3C,IAAIR,EAAM,GACNjM,EAAI,EACR,KAAOA,EAAI8H,GACTmE,GAAO/B,OAAOyC,aAAaC,MACzB1C,OACAuC,EAAWnK,MAAMtC,EAAGA,GAAK0M,IAG7B,OAAOT,EAvBAY,CAAsBZ,GA98B/Ba,EAAQzG,OAASA,EACjByG,EAAQC,WAoTR,SAAqBhN,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAOsG,EAAO2G,OAAOjN,IAvTvB+M,EAAQG,kBAAoB,GA0B5B5G,EAAOC,yBAAqDe,IAA/B6F,EAAO5G,oBAChC4G,EAAO5G,oBAQX,WACE,IACE,IAAIwD,EAAM,IAAIlK,WAAW,GAEzB,OADAkK,EAAIpD,UAAY,CAACA,UAAW9G,WAAW+G,UAAWwG,IAAK,WAAc,OAAO,KACvD,KAAdrD,EAAIqD,OACiB,mBAAjBrD,EAAIsD,UACuB,IAAlCtD,EAAIsD,SAAS,EAAG,GAAGhG,WACvB,MAAOiG,GACP,OAAO,GAfPC,GAKJR,EAAQ1G,WAAaA,IAkErBC,EAAOkH,SAAW,KAGlBlH,EAAOmH,SAAW,SAAU1D,GAE1B,OADAA,EAAIpD,UAAYL,EAAOM,UAChBmD,GA2BTzD,EAAOU,KAAO,SAAU9H,EAAO2H,EAAkB7G,GAC/C,OAAOgH,EAAK,KAAM9H,EAAO2H,EAAkB7G,IAGzCsG,EAAOC,sBACTD,EAAOM,UAAUD,UAAY9G,WAAW+G,UACxCN,EAAOK,UAAY9G,WACG,oBAAX6N,QAA0BA,OAAOC,SACxCrH,EAAOoH,OAAOC,WAAarH,GAE7BlB,OAAOwI,eAAetH,EAAQoH,OAAOC,QAAS,CAC5CzO,MAAO,KACP2O,cAAc,KAiCpBvH,EAAO2G,MAAQ,SAAU3E,EAAMwF,EAAMpN,GACnC,OArBF,SAAgB+F,EAAM6B,EAAMwF,EAAMpN,GAEhC,OADA2H,EAAWC,GACPA,GAAQ,EACH9B,EAAaC,EAAM6B,QAEfhB,IAATwG,EAIyB,iBAAbpN,EACV8F,EAAaC,EAAM6B,GAAMwF,KAAKA,EAAMpN,GACpC8F,EAAaC,EAAM6B,GAAMwF,KAAKA,GAE7BtH,EAAaC,EAAM6B,GAQnB2E,CAAM,KAAM3E,EAAMwF,EAAMpN,IAiBjC4F,EAAOS,YAAc,SAAUuB,GAC7B,OAAOvB,EAAY,KAAMuB,IAK3BhC,EAAOyH,gBAAkB,SAAUzF,GACjC,OAAOvB,EAAY,KAAMuB,IAiH3BhC,EAAOwB,SAAW,SAAmB9G,GACnC,QAAe,MAALA,IAAaA,EAAEgN,YAG3B1H,EAAO2H,QAAU,SAAkB3O,EAAG0B,GACpC,IAAKsF,EAAOwB,SAASxI,KAAOgH,EAAOwB,SAAS9G,GAC1C,MAAM,IAAIiG,UAAU,6BAGtB,GAAI3H,IAAM0B,EAAG,OAAO,EAKpB,IAHA,IAAI+B,EAAIzD,EAAEU,OACNgE,EAAIhD,EAAEhB,OAEDC,EAAI,EAAG8H,EAAM7H,KAAK+L,IAAIlJ,EAAGiB,GAAI/D,EAAI8H,IAAO9H,EAC/C,GAAIX,EAAEW,KAAOe,EAAEf,GAAI,CACjB8C,EAAIzD,EAAEW,GACN+D,EAAIhD,EAAEf,GACN,MAIJ,OAAI8C,EAAIiB,GAAW,EACfA,EAAIjB,EAAU,EACX,GAGTuD,EAAOoB,WAAa,SAAqBhH,GACvC,OAAQyJ,OAAOzJ,GAAUkI,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IAIbtC,EAAO9D,OAAS,SAAiBpB,EAAMpB,GACrC,IAAKP,EAAQ2B,GACX,MAAM,IAAI6F,UAAU,+CAGtB,GAAoB,IAAhB7F,EAAKpB,OACP,OAAOsG,EAAO2G,MAAM,GAGtB,IAAIhN,EACJ,QAAeqH,IAAXtH,EAEF,IADAA,EAAS,EACJC,EAAI,EAAGA,EAAImB,EAAKpB,SAAUC,EAC7BD,GAAUoB,EAAKnB,GAAGD,OAItB,IAAIkI,EAAS5B,EAAOS,YAAY/G,GAC5BkO,EAAM,EACV,IAAKjO,EAAI,EAAGA,EAAImB,EAAKpB,SAAUC,EAAG,CAChC,IAAIoK,EAAMjJ,EAAKnB,GACf,IAAKqG,EAAOwB,SAASuC,GACnB,MAAM,IAAIpD,UAAU,+CAEtBoD,EAAIpC,KAAKC,EAAQgG,GACjBA,GAAO7D,EAAIrK,OAEb,OAAOkI,GA8CT5B,EAAOe,WAAaA,EA0EpBf,EAAOM,UAAUoH,WAAY,EAQ7B1H,EAAOM,UAAUuH,OAAS,WACxB,IAAIpG,EAAMjB,KAAK9G,OACf,GAAI+H,EAAM,GAAM,EACd,MAAM,IAAIrB,WAAW,6CAEvB,IAAK,IAAIzG,EAAI,EAAGA,EAAI8H,EAAK9H,GAAK,EAC5BqJ,EAAKxC,KAAM7G,EAAGA,EAAI,GAEpB,OAAO6G,MAGTR,EAAOM,UAAUwH,OAAS,WACxB,IAAIrG,EAAMjB,KAAK9G,OACf,GAAI+H,EAAM,GAAM,EACd,MAAM,IAAIrB,WAAW,6CAEvB,IAAK,IAAIzG,EAAI,EAAGA,EAAI8H,EAAK9H,GAAK,EAC5BqJ,EAAKxC,KAAM7G,EAAGA,EAAI,GAClBqJ,EAAKxC,KAAM7G,EAAI,EAAGA,EAAI,GAExB,OAAO6G,MAGTR,EAAOM,UAAUyH,OAAS,WACxB,IAAItG,EAAMjB,KAAK9G,OACf,GAAI+H,EAAM,GAAM,EACd,MAAM,IAAIrB,WAAW,6CAEvB,IAAK,IAAIzG,EAAI,EAAGA,EAAI8H,EAAK9H,GAAK,EAC5BqJ,EAAKxC,KAAM7G,EAAGA,EAAI,GAClBqJ,EAAKxC,KAAM7G,EAAI,EAAGA,EAAI,GACtBqJ,EAAKxC,KAAM7G,EAAI,EAAGA,EAAI,GACtBqJ,EAAKxC,KAAM7G,EAAI,EAAGA,EAAI,GAExB,OAAO6G,MAGTR,EAAOM,UAAU2B,SAAW,WAC1B,IAAIvI,EAAuB,EAAd8G,KAAK9G,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArBsO,UAAUtO,OAAqBiJ,EAAUnC,KAAM,EAAG9G,GAC/C6I,EAAagE,MAAM/F,KAAMwH,YAGlChI,EAAOM,UAAU2H,OAAS,SAAiBvN,GACzC,IAAKsF,EAAOwB,SAAS9G,GAAI,MAAM,IAAIiG,UAAU,6BAC7C,OAAIH,OAAS9F,GACsB,IAA5BsF,EAAO2H,QAAQnH,KAAM9F,IAG9BsF,EAAOM,UAAU4H,QAAU,WACzB,IAAIpD,EAAM,GACNqD,EAAM1B,EAAQG,kBAKlB,OAJIpG,KAAK9G,OAAS,IAChBoL,EAAMtE,KAAKyB,SAAS,MAAO,EAAGkG,GAAKC,MAAM,SAASrM,KAAK,KACnDyE,KAAK9G,OAASyO,IAAKrD,GAAO,UAEzB,WAAaA,EAAM,KAG5B9E,EAAOM,UAAUqH,QAAU,SAAkBU,EAAQ7F,EAAOC,EAAK6F,EAAWC,GAC1E,IAAKvI,EAAOwB,SAAS6G,GACnB,MAAM,IAAI1H,UAAU,6BAgBtB,QAbcK,IAAVwB,IACFA,EAAQ,QAEExB,IAARyB,IACFA,EAAM4F,EAASA,EAAO3O,OAAS,QAEfsH,IAAdsH,IACFA,EAAY,QAEEtH,IAAZuH,IACFA,EAAU/H,KAAK9G,QAGb8I,EAAQ,GAAKC,EAAM4F,EAAO3O,QAAU4O,EAAY,GAAKC,EAAU/H,KAAK9G,OACtE,MAAM,IAAI0G,WAAW,sBAGvB,GAAIkI,GAAaC,GAAW/F,GAASC,EACnC,OAAO,EAET,GAAI6F,GAAaC,EACf,OAAQ,EAEV,GAAI/F,GAASC,EACX,OAAO,EAQT,GAAIjC,OAAS6H,EAAQ,OAAO,EAS5B,IAPA,IAAI5L,GAJJ8L,KAAa,IADbD,KAAe,GAMX5K,GAPJ+E,KAAS,IADTD,KAAW,GASPf,EAAM7H,KAAK+L,IAAIlJ,EAAGiB,GAElB8K,EAAWhI,KAAKvE,MAAMqM,EAAWC,GACjCE,EAAaJ,EAAOpM,MAAMuG,EAAOC,GAE5B9I,EAAI,EAAGA,EAAI8H,IAAO9H,EACzB,GAAI6O,EAAS7O,KAAO8O,EAAW9O,GAAI,CACjC8C,EAAI+L,EAAS7O,GACb+D,EAAI+K,EAAW9O,GACf,MAIJ,OAAI8C,EAAIiB,GAAW,EACfA,EAAIjB,EAAU,EACX,GA6HTuD,EAAOM,UAAUoI,SAAW,SAAmBnN,EAAKuF,EAAY1G,GAC9D,OAAoD,IAA7CoG,KAAK5D,QAAQrB,EAAKuF,EAAY1G,IAGvC4F,EAAOM,UAAU1D,QAAU,SAAkBrB,EAAKuF,EAAY1G,GAC5D,OAAO+I,EAAqB3C,KAAMjF,EAAKuF,EAAY1G,GAAU,IAG/D4F,EAAOM,UAAUkD,YAAc,SAAsBjI,EAAKuF,EAAY1G,GACpE,OAAO+I,EAAqB3C,KAAMjF,EAAKuF,EAAY1G,GAAU,IAkD/D4F,EAAOM,UAAUgB,MAAQ,SAAgBH,EAAQiD,EAAQ1K,EAAQU,GAE/D,QAAe4G,IAAXoD,EACFhK,EAAW,OACXV,EAAS8G,KAAK9G,OACd0K,EAAS,OAEJ,QAAepD,IAAXtH,GAA0C,iBAAX0K,EACxChK,EAAWgK,EACX1K,EAAS8G,KAAK9G,OACd0K,EAAS,MAEJ,KAAIuE,SAASvE,GAWlB,MAAM,IAAInL,MACR,2EAXFmL,GAAkB,EACduE,SAASjP,IACXA,GAAkB,OACDsH,IAAb5G,IAAwBA,EAAW,UAEvCA,EAAWV,EACXA,OAASsH,GASb,IAAIsD,EAAY9D,KAAK9G,OAAS0K,EAG9B,SAFepD,IAAXtH,GAAwBA,EAAS4K,KAAW5K,EAAS4K,GAEpDnD,EAAOzH,OAAS,IAAMA,EAAS,GAAK0K,EAAS,IAAOA,EAAS5D,KAAK9G,OACrE,MAAM,IAAI0G,WAAW,0CAGlBhG,IAAUA,EAAW,QAG1B,IADA,IAAI+H,GAAc,IAEhB,OAAQ/H,GACN,IAAK,MACH,OAAO+J,EAAS3D,KAAMW,EAAQiD,EAAQ1K,GAExC,IAAK,OACL,IAAK,QACH,OAAOiL,EAAUnE,KAAMW,EAAQiD,EAAQ1K,GAEzC,IAAK,QACH,OAAOmL,EAAWrE,KAAMW,EAAQiD,EAAQ1K,GAE1C,IAAK,SACL,IAAK,SACH,OAAOwL,EAAY1E,KAAMW,EAAQiD,EAAQ1K,GAE3C,IAAK,SAEH,OAAOyL,EAAY3E,KAAMW,EAAQiD,EAAQ1K,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO0L,EAAU5E,KAAMW,EAAQiD,EAAQ1K,GAEzC,QACE,GAAIyI,EAAa,MAAM,IAAIxB,UAAU,qBAAuBvG,GAC5DA,GAAY,GAAKA,GAAUkI,cAC3BH,GAAc,IAKtBnC,EAAOM,UAAUsI,OAAS,WACxB,MAAO,CACL/L,KAAM,SACNgF,KAAM3I,MAAMoH,UAAUrE,MAAMsH,KAAK/C,KAAKqI,MAAQrI,KAAM,KAwFxD,IAAI6F,EAAuB,KAoB3B,SAASzD,EAAYmB,EAAKvB,EAAOC,GAC/B,IAAIqG,EAAM,GACVrG,EAAM7I,KAAK+L,IAAI5B,EAAIrK,OAAQ+I,GAE3B,IAAK,IAAI9I,EAAI6I,EAAO7I,EAAI8I,IAAO9I,EAC7BmP,GAAOjF,OAAOyC,aAAsB,IAATvC,EAAIpK,IAEjC,OAAOmP,EAGT,SAASjG,EAAakB,EAAKvB,EAAOC,GAChC,IAAIqG,EAAM,GACVrG,EAAM7I,KAAK+L,IAAI5B,EAAIrK,OAAQ+I,GAE3B,IAAK,IAAI9I,EAAI6I,EAAO7I,EAAI8I,IAAO9I,EAC7BmP,GAAOjF,OAAOyC,aAAavC,EAAIpK,IAEjC,OAAOmP,EAGT,SAASpG,EAAUqB,EAAKvB,EAAOC,GAC7B,IAAIhB,EAAMsC,EAAIrK,SAET8I,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMhB,KAAKgB,EAAMhB,GAGxC,IADA,IAAIsH,EAAM,GACDpP,EAAI6I,EAAO7I,EAAI8I,IAAO9I,EAC7BoP,GAAOC,EAAMjF,EAAIpK,IAEnB,OAAOoP,EAGT,SAAShG,EAAcgB,EAAKvB,EAAOC,GAGjC,IAFA,IAAIlI,EAAQwJ,EAAI9H,MAAMuG,EAAOC,GACzBmD,EAAM,GACDjM,EAAI,EAAGA,EAAIY,EAAMb,OAAQC,GAAK,EACrCiM,GAAO/B,OAAOyC,aAAa/L,EAAMZ,GAAoB,IAAfY,EAAMZ,EAAI,IAElD,OAAOiM,EA0CT,SAASqD,EAAa7E,EAAQ8E,EAAKxP,GACjC,GAAK0K,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAIhE,WAAW,sBAC3D,GAAIgE,EAAS8E,EAAMxP,EAAQ,MAAM,IAAI0G,WAAW,yCA+JlD,SAAS+I,EAAUpF,EAAKnL,EAAOwL,EAAQ8E,EAAKf,EAAKxC,GAC/C,IAAK3F,EAAOwB,SAASuC,GAAM,MAAM,IAAIpD,UAAU,+CAC/C,GAAI/H,EAAQuP,GAAOvP,EAAQ+M,EAAK,MAAM,IAAIvF,WAAW,qCACrD,GAAIgE,EAAS8E,EAAMnF,EAAIrK,OAAQ,MAAM,IAAI0G,WAAW,sBAkDtD,SAASgJ,EAAmBrF,EAAKnL,EAAOwL,EAAQiF,GAC1CzQ,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GACxC,IAAK,IAAIe,EAAI,EAAGyE,EAAIxE,KAAK+L,IAAI5B,EAAIrK,OAAS0K,EAAQ,GAAIzK,EAAIyE,IAAKzE,EAC7DoK,EAAIK,EAASzK,IAAMf,EAAS,KAAS,GAAKyQ,EAAe1P,EAAI,EAAIA,MAClC,GAA5B0P,EAAe1P,EAAI,EAAIA,GA8B9B,SAAS2P,EAAmBvF,EAAKnL,EAAOwL,EAAQiF,GAC1CzQ,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,IAAK,IAAIe,EAAI,EAAGyE,EAAIxE,KAAK+L,IAAI5B,EAAIrK,OAAS0K,EAAQ,GAAIzK,EAAIyE,IAAKzE,EAC7DoK,EAAIK,EAASzK,GAAMf,IAAuC,GAA5ByQ,EAAe1P,EAAI,EAAIA,GAAU,IAmJnE,SAAS4P,EAAcxF,EAAKnL,EAAOwL,EAAQ8E,EAAKf,EAAKxC,GACnD,GAAIvB,EAAS8E,EAAMnF,EAAIrK,OAAQ,MAAM,IAAI0G,WAAW,sBACpD,GAAIgE,EAAS,EAAG,MAAM,IAAIhE,WAAW,sBAGvC,SAASoJ,EAAYzF,EAAKnL,EAAOwL,EAAQiF,EAAcI,GAKrD,OAJKA,GACHF,EAAaxF,EAAKnL,EAAOwL,EAAQ,GAEnCtE,EAAQwB,MAAMyC,EAAKnL,EAAOwL,EAAQiF,EAAc,GAAI,GAC7CjF,EAAS,EAWlB,SAASsF,EAAa3F,EAAKnL,EAAOwL,EAAQiF,EAAcI,GAKtD,OAJKA,GACHF,EAAaxF,EAAKnL,EAAOwL,EAAQ,GAEnCtE,EAAQwB,MAAMyC,EAAKnL,EAAOwL,EAAQiF,EAAc,GAAI,GAC7CjF,EAAS,EA/clBpE,EAAOM,UAAUrE,MAAQ,SAAgBuG,EAAOC,GAC9C,IAoBIkH,EApBAlI,EAAMjB,KAAK9G,OAqBf,IApBA8I,IAAUA,GAGE,GACVA,GAASf,GACG,IAAGe,EAAQ,GACdA,EAAQf,IACjBe,EAAQf,IANVgB,OAAczB,IAARyB,EAAoBhB,IAAQgB,GASxB,GACRA,GAAOhB,GACG,IAAGgB,EAAM,GACVA,EAAMhB,IACfgB,EAAMhB,GAGJgB,EAAMD,IAAOC,EAAMD,GAGnBxC,EAAOC,qBACT0J,EAASnJ,KAAKuG,SAASvE,EAAOC,IACvBpC,UAAYL,EAAOM,cACrB,CACL,IAAIsJ,EAAWnH,EAAMD,EACrBmH,EAAS,IAAI3J,EAAO4J,OAAU5I,GAC9B,IAAK,IAAIrH,EAAI,EAAGA,EAAIiQ,IAAYjQ,EAC9BgQ,EAAOhQ,GAAK6G,KAAK7G,EAAI6I,GAIzB,OAAOmH,GAWT3J,EAAOM,UAAUuJ,WAAa,SAAqBzF,EAAQrD,EAAY0I,GACrErF,GAAkB,EAClBrD,GAA0B,EACrB0I,GAAUR,EAAY7E,EAAQrD,EAAYP,KAAK9G,QAKpD,IAHA,IAAI6B,EAAMiF,KAAK4D,GACX0F,EAAM,EACNnQ,EAAI,IACCA,EAAIoH,IAAe+I,GAAO,MACjCvO,GAAOiF,KAAK4D,EAASzK,GAAKmQ,EAG5B,OAAOvO,GAGTyE,EAAOM,UAAUyJ,WAAa,SAAqB3F,EAAQrD,EAAY0I,GACrErF,GAAkB,EAClBrD,GAA0B,EACrB0I,GACHR,EAAY7E,EAAQrD,EAAYP,KAAK9G,QAKvC,IAFA,IAAI6B,EAAMiF,KAAK4D,IAAWrD,GACtB+I,EAAM,EACH/I,EAAa,IAAM+I,GAAO,MAC/BvO,GAAOiF,KAAK4D,IAAWrD,GAAc+I,EAGvC,OAAOvO,GAGTyE,EAAOM,UAAU0J,UAAY,SAAoB5F,EAAQqF,GAEvD,OADKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QACpC8G,KAAK4D,IAGdpE,EAAOM,UAAU2J,aAAe,SAAuB7F,EAAQqF,GAE7D,OADKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QACpC8G,KAAK4D,GAAW5D,KAAK4D,EAAS,IAAM,GAG7CpE,EAAOM,UAAU0D,aAAe,SAAuBI,EAAQqF,GAE7D,OADKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QACnC8G,KAAK4D,IAAW,EAAK5D,KAAK4D,EAAS,IAG7CpE,EAAOM,UAAU4J,aAAe,SAAuB9F,EAAQqF,GAG7D,OAFKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,SAElC8G,KAAK4D,GACT5D,KAAK4D,EAAS,IAAM,EACpB5D,KAAK4D,EAAS,IAAM,IACD,SAAnB5D,KAAK4D,EAAS,IAGrBpE,EAAOM,UAAU6J,aAAe,SAAuB/F,EAAQqF,GAG7D,OAFKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QAEpB,SAAf8G,KAAK4D,IACT5D,KAAK4D,EAAS,IAAM,GACrB5D,KAAK4D,EAAS,IAAM,EACrB5D,KAAK4D,EAAS,KAGlBpE,EAAOM,UAAU8J,UAAY,SAAoBhG,EAAQrD,EAAY0I,GACnErF,GAAkB,EAClBrD,GAA0B,EACrB0I,GAAUR,EAAY7E,EAAQrD,EAAYP,KAAK9G,QAKpD,IAHA,IAAI6B,EAAMiF,KAAK4D,GACX0F,EAAM,EACNnQ,EAAI,IACCA,EAAIoH,IAAe+I,GAAO,MACjCvO,GAAOiF,KAAK4D,EAASzK,GAAKmQ,EAM5B,OAFIvO,IAFJuO,GAAO,OAESvO,GAAO3B,KAAKyQ,IAAI,EAAG,EAAItJ,IAEhCxF,GAGTyE,EAAOM,UAAUgK,UAAY,SAAoBlG,EAAQrD,EAAY0I,GACnErF,GAAkB,EAClBrD,GAA0B,EACrB0I,GAAUR,EAAY7E,EAAQrD,EAAYP,KAAK9G,QAKpD,IAHA,IAAIC,EAAIoH,EACJ+I,EAAM,EACNvO,EAAMiF,KAAK4D,IAAWzK,GACnBA,EAAI,IAAMmQ,GAAO,MACtBvO,GAAOiF,KAAK4D,IAAWzK,GAAKmQ,EAM9B,OAFIvO,IAFJuO,GAAO,OAESvO,GAAO3B,KAAKyQ,IAAI,EAAG,EAAItJ,IAEhCxF,GAGTyE,EAAOM,UAAUiK,SAAW,SAAmBnG,EAAQqF,GAErD,OADKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QACtB,IAAf8G,KAAK4D,IAC0B,GAA5B,IAAO5D,KAAK4D,GAAU,GADK5D,KAAK4D,IAI3CpE,EAAOM,UAAUkK,YAAc,SAAsBpG,EAAQqF,GACtDA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QAC3C,IAAI6B,EAAMiF,KAAK4D,GAAW5D,KAAK4D,EAAS,IAAM,EAC9C,OAAc,MAAN7I,EAAsB,WAANA,EAAmBA,GAG7CyE,EAAOM,UAAUmK,YAAc,SAAsBrG,EAAQqF,GACtDA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QAC3C,IAAI6B,EAAMiF,KAAK4D,EAAS,GAAM5D,KAAK4D,IAAW,EAC9C,OAAc,MAAN7I,EAAsB,WAANA,EAAmBA,GAG7CyE,EAAOM,UAAUoK,YAAc,SAAsBtG,EAAQqF,GAG3D,OAFKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QAEnC8G,KAAK4D,GACV5D,KAAK4D,EAAS,IAAM,EACpB5D,KAAK4D,EAAS,IAAM,GACpB5D,KAAK4D,EAAS,IAAM,IAGzBpE,EAAOM,UAAUqK,YAAc,SAAsBvG,EAAQqF,GAG3D,OAFKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QAEnC8G,KAAK4D,IAAW,GACrB5D,KAAK4D,EAAS,IAAM,GACpB5D,KAAK4D,EAAS,IAAM,EACpB5D,KAAK4D,EAAS,IAGnBpE,EAAOM,UAAUsK,YAAc,SAAsBxG,EAAQqF,GAE3D,OADKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QACpCoG,EAAQgE,KAAKtD,KAAM4D,GAAQ,EAAM,GAAI,IAG9CpE,EAAOM,UAAUuK,YAAc,SAAsBzG,EAAQqF,GAE3D,OADKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QACpCoG,EAAQgE,KAAKtD,KAAM4D,GAAQ,EAAO,GAAI,IAG/CpE,EAAOM,UAAUwK,aAAe,SAAuB1G,EAAQqF,GAE7D,OADKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QACpCoG,EAAQgE,KAAKtD,KAAM4D,GAAQ,EAAM,GAAI,IAG9CpE,EAAOM,UAAUyK,aAAe,SAAuB3G,EAAQqF,GAE7D,OADKA,GAAUR,EAAY7E,EAAQ,EAAG5D,KAAK9G,QACpCoG,EAAQgE,KAAKtD,KAAM4D,GAAQ,EAAO,GAAI,IAS/CpE,EAAOM,UAAU0K,YAAc,SAAsBpS,EAAOwL,EAAQrD,EAAY0I,IAC9E7Q,GAASA,EACTwL,GAAkB,EAClBrD,GAA0B,EACrB0I,IAEHN,EAAS3I,KAAM5H,EAAOwL,EAAQrD,EADfnH,KAAKyQ,IAAI,EAAG,EAAItJ,GAAc,EACO,GAGtD,IAAI+I,EAAM,EACNnQ,EAAI,EAER,IADA6G,KAAK4D,GAAkB,IAARxL,IACNe,EAAIoH,IAAe+I,GAAO,MACjCtJ,KAAK4D,EAASzK,GAAMf,EAAQkR,EAAO,IAGrC,OAAO1F,EAASrD,GAGlBf,EAAOM,UAAU2K,YAAc,SAAsBrS,EAAOwL,EAAQrD,EAAY0I,IAC9E7Q,GAASA,EACTwL,GAAkB,EAClBrD,GAA0B,EACrB0I,IAEHN,EAAS3I,KAAM5H,EAAOwL,EAAQrD,EADfnH,KAAKyQ,IAAI,EAAG,EAAItJ,GAAc,EACO,GAGtD,IAAIpH,EAAIoH,EAAa,EACjB+I,EAAM,EAEV,IADAtJ,KAAK4D,EAASzK,GAAa,IAARf,IACVe,GAAK,IAAMmQ,GAAO,MACzBtJ,KAAK4D,EAASzK,GAAMf,EAAQkR,EAAO,IAGrC,OAAO1F,EAASrD,GAGlBf,EAAOM,UAAU4K,WAAa,SAAqBtS,EAAOwL,EAAQqF,GAMhE,OALA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,IAAM,GACjDpE,EAAOC,sBAAqBrH,EAAQgB,KAAKuR,MAAMvS,IACpD4H,KAAK4D,GAAmB,IAARxL,EACTwL,EAAS,GAWlBpE,EAAOM,UAAU8K,cAAgB,SAAwBxS,EAAOwL,EAAQqF,GAUtE,OATA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,MAAQ,GACpDpE,EAAOC,qBACTO,KAAK4D,GAAmB,IAARxL,EAChB4H,KAAK4D,EAAS,GAAMxL,IAAU,GAE9BwQ,EAAkB5I,KAAM5H,EAAOwL,GAAQ,GAElCA,EAAS,GAGlBpE,EAAOM,UAAU+K,cAAgB,SAAwBzS,EAAOwL,EAAQqF,GAUtE,OATA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,MAAQ,GACpDpE,EAAOC,qBACTO,KAAK4D,GAAWxL,IAAU,EAC1B4H,KAAK4D,EAAS,GAAc,IAARxL,GAEpBwQ,EAAkB5I,KAAM5H,EAAOwL,GAAQ,GAElCA,EAAS,GAUlBpE,EAAOM,UAAUgL,cAAgB,SAAwB1S,EAAOwL,EAAQqF,GAYtE,OAXA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,WAAY,GACxDpE,EAAOC,qBACTO,KAAK4D,EAAS,GAAMxL,IAAU,GAC9B4H,KAAK4D,EAAS,GAAMxL,IAAU,GAC9B4H,KAAK4D,EAAS,GAAMxL,IAAU,EAC9B4H,KAAK4D,GAAmB,IAARxL,GAEhB0Q,EAAkB9I,KAAM5H,EAAOwL,GAAQ,GAElCA,EAAS,GAGlBpE,EAAOM,UAAUiL,cAAgB,SAAwB3S,EAAOwL,EAAQqF,GAYtE,OAXA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,WAAY,GACxDpE,EAAOC,qBACTO,KAAK4D,GAAWxL,IAAU,GAC1B4H,KAAK4D,EAAS,GAAMxL,IAAU,GAC9B4H,KAAK4D,EAAS,GAAMxL,IAAU,EAC9B4H,KAAK4D,EAAS,GAAc,IAARxL,GAEpB0Q,EAAkB9I,KAAM5H,EAAOwL,GAAQ,GAElCA,EAAS,GAGlBpE,EAAOM,UAAUkL,WAAa,SAAqB5S,EAAOwL,EAAQrD,EAAY0I,GAG5E,GAFA7Q,GAASA,EACTwL,GAAkB,GACbqF,EAAU,CACb,IAAIgC,EAAQ7R,KAAKyQ,IAAI,EAAG,EAAItJ,EAAa,GAEzCoI,EAAS3I,KAAM5H,EAAOwL,EAAQrD,EAAY0K,EAAQ,GAAIA,GAGxD,IAAI9R,EAAI,EACJmQ,EAAM,EACN4B,EAAM,EAEV,IADAlL,KAAK4D,GAAkB,IAARxL,IACNe,EAAIoH,IAAe+I,GAAO,MAC7BlR,EAAQ,GAAa,IAAR8S,GAAsC,IAAzBlL,KAAK4D,EAASzK,EAAI,KAC9C+R,EAAM,GAERlL,KAAK4D,EAASzK,IAAOf,EAAQkR,GAAQ,GAAK4B,EAAM,IAGlD,OAAOtH,EAASrD,GAGlBf,EAAOM,UAAUqL,WAAa,SAAqB/S,EAAOwL,EAAQrD,EAAY0I,GAG5E,GAFA7Q,GAASA,EACTwL,GAAkB,GACbqF,EAAU,CACb,IAAIgC,EAAQ7R,KAAKyQ,IAAI,EAAG,EAAItJ,EAAa,GAEzCoI,EAAS3I,KAAM5H,EAAOwL,EAAQrD,EAAY0K,EAAQ,GAAIA,GAGxD,IAAI9R,EAAIoH,EAAa,EACjB+I,EAAM,EACN4B,EAAM,EAEV,IADAlL,KAAK4D,EAASzK,GAAa,IAARf,IACVe,GAAK,IAAMmQ,GAAO,MACrBlR,EAAQ,GAAa,IAAR8S,GAAsC,IAAzBlL,KAAK4D,EAASzK,EAAI,KAC9C+R,EAAM,GAERlL,KAAK4D,EAASzK,IAAOf,EAAQkR,GAAQ,GAAK4B,EAAM,IAGlD,OAAOtH,EAASrD,GAGlBf,EAAOM,UAAUsL,UAAY,SAAoBhT,EAAOwL,EAAQqF,GAO9D,OANA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,KAAO,KAClDpE,EAAOC,sBAAqBrH,EAAQgB,KAAKuR,MAAMvS,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtC4H,KAAK4D,GAAmB,IAARxL,EACTwL,EAAS,GAGlBpE,EAAOM,UAAUuL,aAAe,SAAuBjT,EAAOwL,EAAQqF,GAUpE,OATA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,OAAS,OACrDpE,EAAOC,qBACTO,KAAK4D,GAAmB,IAARxL,EAChB4H,KAAK4D,EAAS,GAAMxL,IAAU,GAE9BwQ,EAAkB5I,KAAM5H,EAAOwL,GAAQ,GAElCA,EAAS,GAGlBpE,EAAOM,UAAUwL,aAAe,SAAuBlT,EAAOwL,EAAQqF,GAUpE,OATA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,OAAS,OACrDpE,EAAOC,qBACTO,KAAK4D,GAAWxL,IAAU,EAC1B4H,KAAK4D,EAAS,GAAc,IAARxL,GAEpBwQ,EAAkB5I,KAAM5H,EAAOwL,GAAQ,GAElCA,EAAS,GAGlBpE,EAAOM,UAAUyL,aAAe,SAAuBnT,EAAOwL,EAAQqF,GAYpE,OAXA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,YAAa,YACzDpE,EAAOC,qBACTO,KAAK4D,GAAmB,IAARxL,EAChB4H,KAAK4D,EAAS,GAAMxL,IAAU,EAC9B4H,KAAK4D,EAAS,GAAMxL,IAAU,GAC9B4H,KAAK4D,EAAS,GAAMxL,IAAU,IAE9B0Q,EAAkB9I,KAAM5H,EAAOwL,GAAQ,GAElCA,EAAS,GAGlBpE,EAAOM,UAAU0L,aAAe,SAAuBpT,EAAOwL,EAAQqF,GAapE,OAZA7Q,GAASA,EACTwL,GAAkB,EACbqF,GAAUN,EAAS3I,KAAM5H,EAAOwL,EAAQ,EAAG,YAAa,YACzDxL,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxCoH,EAAOC,qBACTO,KAAK4D,GAAWxL,IAAU,GAC1B4H,KAAK4D,EAAS,GAAMxL,IAAU,GAC9B4H,KAAK4D,EAAS,GAAMxL,IAAU,EAC9B4H,KAAK4D,EAAS,GAAc,IAARxL,GAEpB0Q,EAAkB9I,KAAM5H,EAAOwL,GAAQ,GAElCA,EAAS,GAgBlBpE,EAAOM,UAAU2L,aAAe,SAAuBrT,EAAOwL,EAAQqF,GACpE,OAAOD,EAAWhJ,KAAM5H,EAAOwL,GAAQ,EAAMqF,IAG/CzJ,EAAOM,UAAU4L,aAAe,SAAuBtT,EAAOwL,EAAQqF,GACpE,OAAOD,EAAWhJ,KAAM5H,EAAOwL,GAAQ,EAAOqF,IAWhDzJ,EAAOM,UAAU6L,cAAgB,SAAwBvT,EAAOwL,EAAQqF,GACtE,OAAOC,EAAYlJ,KAAM5H,EAAOwL,GAAQ,EAAMqF,IAGhDzJ,EAAOM,UAAU8L,cAAgB,SAAwBxT,EAAOwL,EAAQqF,GACtE,OAAOC,EAAYlJ,KAAM5H,EAAOwL,GAAQ,EAAOqF,IAIjDzJ,EAAOM,UAAUqB,KAAO,SAAe0G,EAAQgE,EAAa7J,EAAOC,GAQjE,GAPKD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMjC,KAAK9G,QAC9B2S,GAAehE,EAAO3O,SAAQ2S,EAAchE,EAAO3O,QAClD2S,IAAaA,EAAc,GAC5B5J,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlB6F,EAAO3O,QAAgC,IAAhB8G,KAAK9G,OAAc,OAAO,EAGrD,GAAI2S,EAAc,EAChB,MAAM,IAAIjM,WAAW,6BAEvB,GAAIoC,EAAQ,GAAKA,GAAShC,KAAK9G,OAAQ,MAAM,IAAI0G,WAAW,6BAC5D,GAAIqC,EAAM,EAAG,MAAM,IAAIrC,WAAW,2BAG9BqC,EAAMjC,KAAK9G,SAAQ+I,EAAMjC,KAAK9G,QAC9B2O,EAAO3O,OAAS2S,EAAc5J,EAAMD,IACtCC,EAAM4F,EAAO3O,OAAS2S,EAAc7J,GAGtC,IACI7I,EADA8H,EAAMgB,EAAMD,EAGhB,GAAIhC,OAAS6H,GAAU7F,EAAQ6J,GAAeA,EAAc5J,EAE1D,IAAK9I,EAAI8H,EAAM,EAAG9H,GAAK,IAAKA,EAC1B0O,EAAO1O,EAAI0S,GAAe7L,KAAK7G,EAAI6I,QAEhC,GAAIf,EAAM,MAASzB,EAAOC,oBAE/B,IAAKtG,EAAI,EAAGA,EAAI8H,IAAO9H,EACrB0O,EAAO1O,EAAI0S,GAAe7L,KAAK7G,EAAI6I,QAGrCjJ,WAAW+G,UAAUgM,IAAI/I,KACvB8E,EACA7H,KAAKuG,SAASvE,EAAOA,EAAQf,GAC7B4K,GAIJ,OAAO5K,GAOTzB,EAAOM,UAAUkH,KAAO,SAAejM,EAAKiH,EAAOC,EAAKrI,GAEtD,GAAmB,iBAARmB,EAAkB,CAS3B,GARqB,iBAAViH,GACTpI,EAAWoI,EACXA,EAAQ,EACRC,EAAMjC,KAAK9G,QACa,iBAAR+I,IAChBrI,EAAWqI,EACXA,EAAMjC,KAAK9G,QAEM,IAAf6B,EAAI7B,OAAc,CACpB,IAAI6S,EAAOhR,EAAIyJ,WAAW,GACtBuH,EAAO,MACThR,EAAMgR,GAGV,QAAiBvL,IAAb5G,GAA8C,iBAAbA,EACnC,MAAM,IAAIuG,UAAU,6BAEtB,GAAwB,iBAAbvG,IAA0B4F,EAAOoB,WAAWhH,GACrD,MAAM,IAAIuG,UAAU,qBAAuBvG,OAErB,iBAARmB,IAChBA,GAAY,KAId,GAAIiH,EAAQ,GAAKhC,KAAK9G,OAAS8I,GAAShC,KAAK9G,OAAS+I,EACpD,MAAM,IAAIrC,WAAW,sBAGvB,GAAIqC,GAAOD,EACT,OAAOhC,KAQT,IAAI7G,EACJ,GANA6I,KAAkB,EAClBC,OAAczB,IAARyB,EAAoBjC,KAAK9G,OAAS+I,IAAQ,EAE3ClH,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAK5B,EAAI6I,EAAO7I,EAAI8I,IAAO9I,EACzB6G,KAAK7G,GAAK4B,MAEP,CACL,IAAIhB,EAAQyF,EAAOwB,SAASjG,GACxBA,EACA6G,EAAY,IAAIpC,EAAOzE,EAAKnB,GAAU6H,YACtCR,EAAMlH,EAAMb,OAChB,IAAKC,EAAI,EAAGA,EAAI8I,EAAMD,IAAS7I,EAC7B6G,KAAK7G,EAAI6I,GAASjI,EAAMZ,EAAI8H,GAIhC,OAAOjB,MAMT,IAAIgM,EAAoB,qBAmBxB,SAASxD,EAAO/F,GACd,OAAIA,EAAI,GAAW,IAAMA,EAAEhB,SAAS,IAC7BgB,EAAEhB,SAAS,IAGpB,SAASG,EAAajB,EAAQkE,GAE5B,IAAIa,EADJb,EAAQA,GAASoH,IAMjB,IAJA,IAAI/S,EAASyH,EAAOzH,OAChBgT,EAAgB,KAChBnS,EAAQ,GAEHZ,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAI/B,IAHAuM,EAAY/E,EAAO6D,WAAWrL,IAGd,OAAUuM,EAAY,MAAQ,CAE5C,IAAKwG,EAAe,CAElB,GAAIxG,EAAY,MAAQ,EAEjBb,GAAS,IAAM,GAAG9K,EAAMY,KAAK,IAAM,IAAM,KAC9C,SACK,GAAIxB,EAAI,IAAMD,EAAQ,EAEtB2L,GAAS,IAAM,GAAG9K,EAAMY,KAAK,IAAM,IAAM,KAC9C,SAIFuR,EAAgBxG,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBb,GAAS,IAAM,GAAG9K,EAAMY,KAAK,IAAM,IAAM,KAC9CuR,EAAgBxG,EAChB,SAIFA,EAAkE,OAArDwG,EAAgB,OAAU,GAAKxG,EAAY,YAC/CwG,IAEJrH,GAAS,IAAM,GAAG9K,EAAMY,KAAK,IAAM,IAAM,KAMhD,GAHAuR,EAAgB,KAGZxG,EAAY,IAAM,CACpB,IAAKb,GAAS,GAAK,EAAG,MACtB9K,EAAMY,KAAK+K,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKb,GAAS,GAAK,EAAG,MACtB9K,EAAMY,KACJ+K,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKb,GAAS,GAAK,EAAG,MACtB9K,EAAMY,KACJ+K,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,MAAIA,EAAY,SASrB,MAAM,IAAIjN,MAAM,sBARhB,IAAKoM,GAAS,GAAK,EAAG,MACtB9K,EAAMY,KACJ+K,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAO3L,EA4BT,SAAS8H,EAAeyC,GACtB,OAAOjF,EAAO8M,YAhIhB,SAAsB7H,GAIpB,IAFAA,EAUF,SAAqBA,GACnB,OAAIA,EAAI8H,KAAa9H,EAAI8H,OAClB9H,EAAI+H,QAAQ,aAAc,IAZ3BC,CAAWhI,GAAK+H,QAAQL,EAAmB,KAEzC9S,OAAS,EAAG,MAAO,GAE3B,KAAOoL,EAAIpL,OAAS,GAAM,GACxBoL,GAAY,IAEd,OAAOA,EAuHmBiI,CAAYjI,IAGxC,SAASF,EAAYoI,EAAKC,EAAK7I,EAAQ1K,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAID,KACbC,EAAIyK,GAAU6I,EAAIvT,QAAYC,GAAKqT,EAAItT,UADhBC,EAE5BsT,EAAItT,EAAIyK,GAAU4I,EAAIrT,GAExB,OAAOA,K,yQChuDF,SAASuT,EAAeC,EAAMvR,EAAO/C,EAAOuU,GAC/C,MAAMC,EAAU,YAAezR,GACzB0R,EAaV,SAAiCH,EAAMvR,EAAO/C,EAAOwU,GACjD,MAAMpK,EAAI,YAAcrH,GAClB2R,EAAUF,EAAQA,EAAQ3T,OAAS,GACnC4T,EAAY,IAAIpU,MAAMqU,GAAS/F,KAAK,GACpCgG,EAAO5R,EAAMlC,OACb+T,EAA2B,cAAV5U,EAAwB6U,EAAoBP,GAAQA,EAC3E,GAAIK,EAAO,EACP,IAAK,IAAIG,EAAM,EAAGA,EAAM1K,EAAIsK,EAASI,IAAO,CACxC,MAAMvJ,EAASuJ,EAAMJ,EACrB,IAAK,IAAInP,EAAI,EAAGA,EAAImP,EAASnP,IACzBkP,EAAUlP,GAAKxE,KAAKuO,IAAImF,EAAUlP,GAAIwP,EAAYH,EAAerJ,EAAShG,GAAI,EAAGvF,GAAOa,QAIpG,OAAO4T,EA3BWO,CAAwBV,EAAMvR,EAAO/C,EAAOwU,GACxDG,EAAO5R,EAAMlC,OACboU,EAAYC,EAAkBZ,EAAMvR,EAAO/C,EAAOwU,EAASC,GAC3DU,EAAQ,CAAC,UAQf,OAPIZ,IACAY,EAAM7S,KAAK,YAAYtC,KACvBmV,EAAM7S,KAAK,WAAWqS,KACtBQ,EAAM7S,KAAK,aAAaS,MACxBoS,EAAM7S,KAAK,cAEf6S,EAAM7S,KAAK2S,EAAUzQ,KAAI4Q,GAAK,OAASA,IAAGlS,KAAK,OACxCiS,EAAMjS,KAAK,MAkBtB,SAAS6R,EAAYrS,EAAK2S,EAAKrV,GAC3B,IAAIsV,EAcJ,OAZIA,EADAjV,MAAMC,QAAQoC,GACL,GAAG6S,WAAW7S,EAAI,GAAG8S,QAnCR,SAoCfD,WAAW7S,EAAI,GAAG8S,QApCH,OAsCjB,YAAS9S,GACL,IAAIA,KAEE,SAAV1C,EACIyV,EAAgB/S,GAGhB6S,WAAW7S,EAAI8S,QA7CF,IA6CkCpM,WAErD,YAASkM,EAAQD,GAE5B,SAASI,EAAgBC,GACrB,OAAa,IAANA,EAAU,QAAU,OAE/B,SAASR,EAAkBZ,EAAMvR,EAAO/C,EAAOwU,EAASC,EAAWkB,GAAS,GACxE,MAAMC,EAA8B,cAAV5V,EAAwB,EAAI,EAChDmJ,EAAOpG,EAAM,GACb4R,EAAO5R,EAAMlC,OACnB,GAAa,IAAT8T,EAAY,CACZ,GAAc,cAAV3U,EAAuB,CAEvB,MAAO,CAAC+U,EADaF,EAAoBP,GACR,GAAI,EAAGtU,IAE5C,MAAc,SAAVA,EACO,CAACyV,EAAgBnB,EAAK,KAE1B,CAACA,EAAK,GAAGlL,YAEpB,GAAa,IAATuL,EAAY,CACZ,GAAIxL,EAvEkB,GAuEY,CAC9B,MAAM0M,EAtEiB,EAsE4BD,EACnD,IAAIE,EAAYzV,MAAMwH,KAAKyM,EAAKlR,MAAM,EAAGyS,IACrCE,EAAW1V,MAAMwH,KAAKyM,EAAKlR,OAAO+F,EAxEf,GAwEoDyM,EAAmBzM,EAAOyM,IAKrG,MAJc,cAAV5V,IACA8V,EAAYjB,EAAoBiB,GAChCC,EAAWlB,EAAoBkB,IAE5B,CACH,IACID,EAAUtR,KAAI,CAACZ,EAAG9C,IAAMiU,EAAYnR,EAAG6Q,EAAU3T,GAAId,KAChDkD,KAAK,MACV,UACA6S,EACKvR,KAAI,CAACZ,EAAG9C,IAAMiU,EAAYnR,EAAG6Q,EAAUtL,EAnF7B,EAmFiErI,GAAId,KAC/EkD,KAAK,MACV,KAKZ,MAAO,CACH,KAH0B,cAAVlD,EAAwB6U,EAAoBP,GAC5DjU,MAAMwH,KAAKyM,IAGK9P,KAAI,CAACZ,EAAG9C,IAAMiU,EAAYnR,EAAG6Q,EAAU3T,GAAId,KAClDkD,KAAK,MACV,KAIZ,MAAM8S,EAAWjT,EAAMK,MAAM,GACvB6S,EAAazB,EAAQpR,MAAM,GAC3B8S,EAAS1B,EAAQ,GAAKoB,EACtBT,EAAQ,GACd,GAAIhM,EAxGsB,GAwGQ,CAC9B,IAAK,IAAIrI,EAAI,EAAGA,EAvGW,EAuGqBA,IAAK,CACjD,MAAM6I,EAAQ7I,EAAIoV,EACZtM,EAAMD,EAAQuM,EACpBf,EAAM7S,QAAQ4S,EAAkBZ,EAAKlR,MAAMuG,EAAOC,GAAMoM,EAAUhW,EAAOiW,EAAYxB,GAAW,IAEpGU,EAAM7S,KAAK,OACX,IAAK,IAAIxB,EAAIqI,EA7Gc,EA6GqBrI,EAAIqI,EAAMrI,IAAK,CAC3D,MAAM6I,EAAQ7I,EAAIoV,EACZtM,EAAMD,EAAQuM,EACpBf,EAAM7S,QAAQ4S,EAAkBZ,EAAKlR,MAAMuG,EAAOC,GAAMoM,EAAUhW,EAAOiW,EAAYxB,EAAW3T,IAAMqI,EAAO,UAIjH,IAAK,IAAIrI,EAAI,EAAGA,EAAIqI,EAAMrI,IAAK,CAC3B,MAAM6I,EAAQ7I,EAAIoV,EACZtM,EAAMD,EAAQuM,EACpBf,EAAM7S,QAAQ4S,EAAkBZ,EAAKlR,MAAMuG,EAAOC,GAAMoM,EAAUhW,EAAOiW,EAAYxB,EAAW3T,IAAMqI,EAAO,IAGrH,MAAMgN,EAAe,IAATxB,EAAa,IAAM,GAC/BQ,EAAM,GAAK,IAAMA,EAAM,GAAKgB,EAC5B,IAAK,IAAIrV,EAAI,EAAGA,EAAIqU,EAAMtU,OAAS,EAAGC,IAClCqU,EAAMrU,GAAK,IAAMqU,EAAMrU,GAAKqV,EAEhC,IAAIC,EAAa,MACjB,IAAK,IAAItV,EAAI,EAAGA,EAAI6T,EAAM7T,IACtBsV,GAAc,KAIlB,OAFAjB,EAAMA,EAAMtU,OAAS,GACjB,IAAMsU,EAAMA,EAAMtU,OAAS,GAAK,KAAO8U,EAAS,GAAKS,GAClDjB,EAEX,SAASN,EAAoBP,GACzB,MAAM+B,EAAgB,GACtB,IAAK,IAAIvV,EAAI,EAAGA,EAAIwT,EAAKzT,OAAQC,GAAK,EAClCuV,EAAc/T,KAAK,CAACgS,EAAKxT,GAAIwT,EAAKxT,EAAI,KAE1C,OAAOuV,E,YCrIJ,MAAM,EACT,YAAYtT,EAAO/C,EAAOoE,GAItB,GAHAuD,KAAK3H,MAAQA,EACb2H,KAAK5E,MAAQA,EAAMK,QACnBuE,KAAKwB,KAAO,IAAmBpG,GACjB,MAAVqB,EAAgB,CAChB,MAAMgG,EAAIhG,EAAOvD,OACjB,IAAYuJ,IAAMzC,KAAKwB,MAAM,IAAM,qBAAqBiB,qDAC1BzC,KAAKwB,WAEvC,GAAc,cAAVnJ,EACA,MAAM,IAAII,MAAM,8JAIpBuH,KAAKvD,OAASA,GAAU,IAAuBpE,EAAO2H,KAAKwB,MAC3DxB,KAAK6M,QAAU,YAAezR,GAUlC,IAAIhD,KAAUuW,GACU,IAAhBA,EAAKzV,SACLyV,EAAO,CAAC,IAEZ,IAAYA,EAAKzV,SAAW8G,KAAKgN,MAAM,IAAM,uCAAuC2B,EAAKzV,gCAClE8G,KAAKgN,UAC5B,MAAM4B,EAAQ5O,KAAK6O,WAAWF,GAC9B3O,KAAKvD,OAAOmS,GAASxW,EASzB,OAAOuW,GACiB,IAAhBA,EAAKzV,SACLyV,EAAO,CAAC,IAEZ,IAAIxV,EAAI,EACR,IAAK,MAAM2V,KAAOH,EAAM,CACpB,GAAIG,EAAM,GAAKA,GAAO9O,KAAK5E,MAAMjC,GAAI,CACjC,MAAM4V,EAAM,qCAAqCJ,qBAC3B3O,KAAK5E,QAC3B,MAAM,IAAI3C,MAAMsW,GAEpB5V,IAEJ,IAAIyV,EAAQD,EAAKA,EAAKzV,OAAS,GAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIwV,EAAKzV,OAAS,IAAKC,EACnCyV,GAAS5O,KAAK6M,QAAQ1T,GAAKwV,EAAKxV,GAEpC,OAAO6G,KAAKvD,OAAOmS,GAEvB,WAAWD,GACP,GAAkB,IAAd3O,KAAKgN,KACL,OAAO,EAEN,GAAkB,IAAdhN,KAAKgN,KACV,OAAO2B,EAAK,GAEhB,IAAIC,EAAQD,EAAKA,EAAKzV,OAAS,GAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIwV,EAAKzV,OAAS,IAAKC,EACnCyV,GAAS5O,KAAK6M,QAAQ1T,GAAKwV,EAAKxV,GAEpC,OAAOyV,EAEX,WAAWA,GACP,GAAkB,IAAd5O,KAAKgN,KACL,MAAO,GAEN,GAAkB,IAAdhN,KAAKgN,KACV,MAAO,CAAC4B,GAEZ,MAAMD,EAAO,IAAIjW,MAAMsH,KAAK5E,MAAMlC,QAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIwV,EAAKzV,OAAS,IAAKC,EACnCwV,EAAKxV,GAAKC,KAAKuR,MAAMiE,EAAQ5O,KAAK6M,QAAQ1T,IAC1CyV,GAASD,EAAKxV,GAAK6G,KAAK6M,QAAQ1T,GAGpC,OADAwV,EAAKA,EAAKzV,OAAS,GAAK0V,EACjBD,EAEX,WACI,OAAO3O,KAAK5E,MAAMlC,OAOtB,WACI,OAAO8V,IAAYtS,WAAWsD,KAAKvD,OAAQuD,KAAK5E,MAAO4E,KAAK3H,QAIpE,IAAI2W,EAAY,KAEZC,EAAY,KAEZC,EAAuB,KAUpB,SAASC,EAAiBC,GAC7BJ,EAAYI,EAOT,SAASC,EAAaC,GACzBL,EAAYK,EAMT,SAASC,EAAwBH,GACpCF,EAAuBE,EAUpB,MAAM,EACT,YAAYhU,EAAO/C,EAAOmX,EAAQnS,GAE9B2C,KAAKyP,MAAO,EACZzP,KAAK0P,oBAAqB,EAC1B1P,KAAK5E,MAAQA,EAAMK,QACnBuE,KAAK3H,MAAQA,GAAS,UACtB2H,KAAKwB,KAAO,IAAmBpG,GAC/B4E,KAAK6M,QAAU,YAAezR,GAC9B4E,KAAKwP,OAASA,EACdxP,KAAK3C,GAAKA,EACV2C,KAAK2P,SAAY3P,KAAKgN,KAAO,EAAIhN,KAAKgN,KAAKvL,WAAa,SAE5D,WACI,OAAOzB,KAAK5E,MAAMlC,OAOtB,eACI,MAAMyT,QAAa3M,KAAKqB,OACxB,OAAO4N,EAAU7N,OAAOpB,KAAK5E,MAAO4E,KAAK3H,MAAOsU,GAMpD,aACI,OAAOsC,EAAU7N,OAAOpB,KAAK5E,MAAO4E,KAAK3H,MAAO2H,KAAK4P,YAQzD,cACI,MAAMjD,QAAa3M,KAAKqB,OACxB,OAAO,YAAcrB,KAAK5E,MAAOuR,GAQrC,YACI,OAAO,YAAc3M,KAAK5E,MAAO4E,KAAK4P,YAQ1C,aACI5P,KAAK6P,kBACL,MAAMxO,EAAO2N,IAAY1L,KAAKtD,KAAKwP,QACnC,GAAmB,WAAfxP,KAAK3H,MAAoB,CACzB,MAAM0B,QAAcsH,EACpB,IACI,OAAOtH,EAAM8C,KAAI3C,GAAK4V,EAAA,aAAkB5V,KAE5C,MAAO6V,GACH,MAAM,IAAItX,MAAM,kGAIxB,OAAO4I,EAQX,WACIrB,KAAK6P,kBACL,MAAMxO,EAAO2N,IAAYgB,SAAShQ,KAAKwP,QACvC,GAAmB,WAAfxP,KAAK3H,MACL,IACI,OAAOgJ,EAAKxE,KAAI3C,GAAK4V,EAAA,aAAkB5V,KAE3C,MAAO6V,GACH,MAAM,IAAItX,MAAM,iGAIxB,OAAO4I,EAGX,cACIrB,KAAK6P,kBACL,MAAMxO,QAAa2N,IAAY1L,KAAKtD,KAAKwP,QACzC,MAAmB,WAAfxP,KAAK3H,MACEgJ,EAGA,IAAItI,WAAWsI,EAAKD,QAQnC,UACQpB,KAAKiQ,aAGTjB,IAAYkB,cAAclQ,MAC1BA,KAAK0P,oBAAqB,GAE9B,iBACI,OAAO1P,KAAK0P,mBAEhB,kBACI,GAAI1P,KAAKiQ,WACL,MAAM,IAAIxX,MAAM,uBAWxB,MAAMmU,GAAU,GACZ,OAAOqC,EAAUkB,MAAMnQ,KAAM4M,GAMjC,QAEI,OADA5M,KAAK6P,kBACEZ,EAAUmB,MAAMpQ,MAO3B,SAAS4M,GAAU,GAEf,OAAOF,EADM1M,KAAK4P,WACU5P,KAAK5E,MAAO4E,KAAK3H,MAAOuU,GAExD,KAAKvU,GAED,OADA2H,KAAK6P,kBACEZ,EAAU9U,KAAK6F,KAAM3H,GAEhC,SAASgY,GAAY,EAAM9T,EAAMlE,GAE7B,OADA2H,KAAK6P,kBACEb,IAAYsB,aAAatQ,KAAMqQ,EAAW9T,EAAMlE,IAG/DiG,OAAOwI,eAAe,EAAQF,OAAO2J,YAAa,CAC9CnY,MAAQoY,KAMKA,GAA6B,MAAjBA,EAASnP,MAAqC,MAArBmP,EAASZ,UACvB,MAA5BY,EAASX,kBAQd,MAAM,UAAiB,EAC1B,YAAYY,EAAcJ,EAAW9T,EAAMmU,GACvCC,MAAMF,EAAarV,MAAOqV,EAAapY,MAAOoY,EAAajB,OAAQkB,GACnE1Q,KAAKqQ,UAAYA,EACjBrQ,KAAKzD,KAAOA,EAUhB,OAAOqU,GACH,GAAIA,EAASvY,QAAU2H,KAAK3H,MACxB,MAAM,IAAII,MAAM,2BAA2BmY,EAASvY,8BAC7B2H,KAAK3H,qBAEhC,IAAK,IAAiBuY,EAASxV,MAAO4E,KAAK5E,OACvC,MAAM,IAAI3C,MAAM,2BAA2BmY,EAASxV,8BAC7B4E,KAAK5E,qBAEhC4T,IAAYkB,cAAclQ,MAC1BA,KAAKwP,OAASoB,EAASpB,OACvBR,IAAY6B,OAAO7Q,KAAM,MAE7B,UACIgP,IAAY8B,gBAAgB9Q,MAC5BA,KAAK0P,oBAAqB,GAGlCpR,OAAOwI,eAAe,EAAUF,OAAO2J,YAAa,CAChDnY,MAAQoY,GACGA,aAAoB,GAA6B,MAAnBA,EAASjS,QAC1CiS,EAASjS,kBAAkBwS,Y,iCC1XvC9K,EAAQ1F,WAuCR,SAAqByQ,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClDnL,EAAQkG,YAiDR,SAAsB6E,GACpB,IAAIK,EAcAlY,EAbA8X,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBhO,EAAM,IAAIqO,EAVhB,SAAsBN,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BG,CAAYP,EAAKG,EAAUC,IAEzCI,EAAU,EAGVvQ,EAAMmQ,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKhY,EAAI,EAAGA,EAAI8H,EAAK9H,GAAK,EACxBkY,EACGI,EAAUT,EAAIxM,WAAWrL,KAAO,GAChCsY,EAAUT,EAAIxM,WAAWrL,EAAI,KAAO,GACpCsY,EAAUT,EAAIxM,WAAWrL,EAAI,KAAO,EACrCsY,EAAUT,EAAIxM,WAAWrL,EAAI,IAC/B8J,EAAIuO,KAAcH,GAAO,GAAM,IAC/BpO,EAAIuO,KAAcH,GAAO,EAAK,IAC9BpO,EAAIuO,KAAmB,IAANH,EAGK,IAApBD,IACFC,EACGI,EAAUT,EAAIxM,WAAWrL,KAAO,EAChCsY,EAAUT,EAAIxM,WAAWrL,EAAI,KAAO,EACvC8J,EAAIuO,KAAmB,IAANH,GAGK,IAApBD,IACFC,EACGI,EAAUT,EAAIxM,WAAWrL,KAAO,GAChCsY,EAAUT,EAAIxM,WAAWrL,EAAI,KAAO,EACpCsY,EAAUT,EAAIxM,WAAWrL,EAAI,KAAO,EACvC8J,EAAIuO,KAAcH,GAAO,EAAK,IAC9BpO,EAAIuO,KAAmB,IAANH,GAGnB,OAAOpO,GA3FTgD,EAAQf,cAkHR,SAAwBwM,GAQtB,IAPA,IAAIL,EACApQ,EAAMyQ,EAAMxY,OACZyY,EAAa1Q,EAAM,EACnB2Q,EAAQ,GACRC,EAAiB,MAGZ1Y,EAAI,EAAG2Y,EAAO7Q,EAAM0Q,EAAYxY,EAAI2Y,EAAM3Y,GAAK0Y,EACtDD,EAAMjX,KAAKoX,EACTL,EAAOvY,EAAIA,EAAI0Y,EAAkBC,EAAOA,EAAQ3Y,EAAI0Y,IAKrC,IAAfF,GACFN,EAAMK,EAAMzQ,EAAM,GAClB2Q,EAAMjX,KACJqX,EAAOX,GAAO,GACdW,EAAQX,GAAO,EAAK,IACpB,OAEsB,IAAfM,IACTN,GAAOK,EAAMzQ,EAAM,IAAM,GAAKyQ,EAAMzQ,EAAM,GAC1C2Q,EAAMjX,KACJqX,EAAOX,GAAO,IACdW,EAAQX,GAAO,EAAK,IACpBW,EAAQX,GAAO,EAAK,IACpB,MAIJ,OAAOO,EAAMrW,KAAK,KA3IpB,IALA,IAAIyW,EAAS,GACTP,EAAY,GACZH,EAA4B,oBAAfvY,WAA6BA,WAAaL,MAEvDqT,EAAO,mEACF5S,EAAI,EAAG8H,EAAM8K,EAAK7S,OAAQC,EAAI8H,IAAO9H,EAC5C6Y,EAAO7Y,GAAK4S,EAAK5S,GACjBsY,EAAU1F,EAAKvH,WAAWrL,IAAMA,EAQlC,SAAS+X,EAASF,GAChB,IAAI/P,EAAM+P,EAAI9X,OAEd,GAAI+H,EAAM,EAAI,EACZ,MAAM,IAAIxI,MAAM,kDAKlB,IAAI0Y,EAAWH,EAAI5U,QAAQ,KAO3B,OANkB,IAAd+U,IAAiBA,EAAWlQ,GAMzB,CAACkQ,EAJcA,IAAalQ,EAC/B,EACA,EAAKkQ,EAAW,GAsEtB,SAASY,EAAaL,EAAO1P,EAAOC,GAGlC,IAFA,IAAIoP,EARoBY,EASpBlU,EAAS,GACJ5E,EAAI6I,EAAO7I,EAAI8I,EAAK9I,GAAK,EAChCkY,GACIK,EAAMvY,IAAM,GAAM,WAClBuY,EAAMvY,EAAI,IAAM,EAAK,QACP,IAAfuY,EAAMvY,EAAI,IACb4E,EAAOpD,KAdFqX,GADiBC,EAeMZ,IAdT,GAAK,IACxBW,EAAOC,GAAO,GAAK,IACnBD,EAAOC,GAAO,EAAI,IAClBD,EAAa,GAANC,IAaT,OAAOlU,EAAOxC,KAAK,IAjGrBkW,EAAU,IAAIjN,WAAW,IAAM,GAC/BiN,EAAU,IAAIjN,WAAW,IAAM,I,+BCWxB,SAAS0N,EAAQ7R,GACpB,IAAI8R,EAAU9R,EAAMnH,OAChBkZ,EAAO,EACPxD,EAAQ,EAEZ,KAAOuD,EAAU,GAEbvD,EAASxV,KAAKiZ,SAAWF,EAAW,EAEpCA,IAEAC,EAAO/R,EAAM8R,GACb9R,EAAM8R,GAAW9R,EAAMuO,GACvBvO,EAAMuO,GAASwD,EAIhB,SAASE,EAAMnN,EAAKlJ,EAAG0L,GAC1B,OAAOvO,KAAKuO,IAAIxC,EAAK/L,KAAK+L,IAAIlJ,EAAG0L,IAE9B,SAAS4K,EAAkBxX,GAC9B,OAAOA,EAAM,GAAM,EAAIA,EAAMA,EAAM,EAEhC,SAASyX,EAAIvP,GAChB,IAAIuP,EAAM,EACV,IAAK,IAAIrZ,EAAI,EAAGA,EAAI8J,EAAI/J,OAAQC,IAC5BqZ,GAAOvP,EAAI9J,GAEf,OAAOqZ,EASJ,SAASC,EAAYja,EAAG0B,GAC3B,MAAMwY,EAAItZ,KAAKiZ,SACf,OAAQnY,EAAIwY,GAAM,EAAIA,GAAKla,EAGxB,SAASma,EAAYna,EAAG0B,GAC3B,IAAIG,EAAS,EACb,IAAK,IAAIlB,EAAI,EAAGA,EAAIX,EAAEU,OAAQC,IAAK,CAC/B,MAAMyZ,EAAO/O,OAAOrL,EAAEW,IAAM0K,OAAO3J,EAAEf,IACrCkB,GAAUuY,EAAOA,EAErB,OAAOvY,EAiBJ,SAASwY,EAAOC,EAAM/D,GACzB,IAAK+D,EACD,MAAM,IAAIra,MAAqB,iBAARsW,EAAmBA,EAAMA,KAGjD,SAASgE,EAAkBC,EAAQC,EAAQC,EAAqB,IACnEL,EAAOM,EAAYH,EAAQC,IAAS,IAAMC,EAAqB,WAAWF,SAAcC,iBAErF,SAASG,EAAc5a,GAC1Bqa,EAAY,MAALra,GAAW,IAAM,kEAqBrB,SAAS6a,EAAQpQ,EAAK5I,EAAS,GAAIiZ,GAAiB,GAIvD,GAHc,MAAVjZ,IACAA,EAAS,IAET3B,MAAMC,QAAQsK,IAAQsQ,EAAatQ,KAASqQ,EAC5C,IAAK,IAAIna,EAAI,EAAGA,EAAI8J,EAAI/J,SAAUC,EAC9Bka,EAAQpQ,EAAI9J,GAAIkB,EAAQiZ,QAI5BjZ,EAAOM,KAAKsI,GAEhB,OAAO5I,EAaJ,SAASmZ,EAAcpY,GAC1B,GAAqB,IAAjBA,EAAMlC,OAEN,OAAO,EAEX,IAAIsI,EAAOpG,EAAM,GACjB,IAAK,IAAIjC,EAAI,EAAGA,EAAIiC,EAAMlC,OAAQC,IAC9BqI,GAAQpG,EAAMjC,GAElB,OAAOqI,EAEJ,SAASiS,EAAcrY,GAC1B,OAAwB,IAAjBA,EAAMlC,OAEV,SAASia,EAAYO,EAAIC,GAC5B,GAAID,IAAOC,EACP,OAAO,EAEX,GAAU,MAAND,GAAoB,MAANC,EACd,OAAO,EAEX,GAAID,EAAGxa,SAAWya,EAAGza,OACjB,OAAO,EAEX,IAAK,IAAIC,EAAI,EAAGA,EAAIua,EAAGxa,OAAQC,IAC3B,GAAIua,EAAGva,KAAOwa,EAAGxa,GACb,OAAO,EAGf,OAAO,EAEJ,SAASya,EAAMpb,GAClB,OAAOA,EAAI,GAAM,EAEd,SAASqb,EAAK5X,GAEjB,GAAiB,MAAb7C,KAAKya,KAEL,OAAOza,KAAKya,KAAK5X,GAErB,GAAIA,IAAMgQ,IACN,OAAO,EAEN,GAAIhQ,KAAOgQ,IACZ,OAAQ,EAEP,CACD,MAAM6H,EAAM1a,KAAK2a,IAAI,EAAI9X,GACzB,OAAQ6X,EAAM,IAAMA,EAAM,IAG3B,SAASE,EAAoBxS,GAChC,MAAMyS,EAAQ7a,KAAK8a,KAAK9a,KAAK+a,KAAK3S,IAClC,MAAO,CAACyS,EAAO7a,KAAK8a,KAAK1S,EAAOyS,IAc7B,SAASG,EAAsB3R,GAClC,MAAM4R,EAAkB,IAAIC,YAAY7R,GACxC,IAAK,IAAItJ,EAAI,EAAGA,EAAIsJ,IAAKtJ,EACrBkb,EAAgBlb,GAAKA,EAGzB,OADA+Y,EAAQmC,GACDA,EAEJ,SAASE,EAAS/b,EAAGgJ,GACxB,OAAIA,GAAQhJ,EAAEU,OACHV,EAEJA,EAAI,IAAIgc,OAAOhT,EAAOhJ,EAAEU,QAE5B,SAASub,EAAYC,EAASC,EAAU,CAACxC,GAAY,GAAGyC,GAC3D,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,IAAIC,EAAW,EACf,MAAMC,EAAQ,KACV,GAAIP,IAEA,YADAI,IAGJE,IACA,MAAME,EAAcP,EAAQK,GACV,MAAdJ,GAAsBI,GAAYJ,EAClCG,IAGJI,WAAWF,EAAOC,IAEtBD,OAYD,SAASG,EAAuBha,EAAOoG,GAC1C,IAAI6T,EAAY,EACZC,GAAe,EACnB,IAAK,IAAInc,EAAI,EAAGA,EAAIiC,EAAMlC,SAAUC,EAChC,GAAIiC,EAAMjC,IAAM,EACZkc,GAAaja,EAAMjC,QAElB,IAAkB,IAAdiC,EAAMjC,GAAW,CACtB,IAAqB,IAAjBmc,EACA,MAAM7c,MACF,yDAAmB6c,aAAuBnc,KAElDmc,EAAcnc,OAEb,GAAIiC,EAAMjC,GAAK,EAChB,MAAMV,MAAM,gCAAgC2C,EAAMjC,aAAaA,KAGvE,IAAqB,IAAjBmc,EAAoB,CACpB,GAAI9T,EAAO,GAAKA,IAAS6T,EACrB,MAAM5c,MAAM,QAAQ+I,sCAAyCpG,KAEjE,OAAOA,EAEX,GAAkB,IAAdia,EACA,MAAM5c,MAAM,qCAAqC2C,gCAGrD,GAAIoG,EAAO6T,GAAc,EACrB,MAAM5c,MACF,wDAAO+I,OAAU6T,KAEzB,MAAME,EAAWna,EAAMK,QAEvB,OADA8Z,EAASD,GAAe9T,EAAO6T,EACxBE,EAEJ,SAASC,EAAeC,EAAMra,GACjC,MAAM4R,EAAO5R,EAAMlC,OAUnB,OANA2Z,GAFA4C,EAAe,MAARA,EAAera,EAAMyB,KAAI,CAAClD,EAAGR,IAAMA,IAAK,GAAGuC,OAAO+Z,IAE7CC,OAAMC,GAAMA,IAAO3I,GAAQ2I,EAAK3I,KAAO,IAAM,+CAA+CA,MAASA,mBACjGyI,MAEhB5C,EAAO4C,EAAKC,OAAMC,GAAM/B,EAAM+B,MAAM,IAChC,0DAAYF,MAETA,EAAK5Y,KAAIrE,GAAKA,EAAI,EAAIwU,EAAOxU,EAAIA,IAGrC,SAASod,EAAaxa,EAAOqa,GAChC,MAAMF,EAAW,GACXM,EAAW,GACXC,EAAuB,MAARL,GAAgB/c,MAAMC,QAAQ8c,IAAyB,IAAhBA,EAAKvc,OAC3D6c,EAAgB,MAARN,GAAgBK,EAC1B,KACAN,EAAeC,EAAMra,GAAO4a,OAChC,IAAIpY,EAAI,EACR,IAAK,IAAIzE,EAAI,EAAGA,EAAIiC,EAAMlC,SAAUC,EAAG,CACnC,GAAY,MAAR4c,EAAc,CACd,GAAIA,EAAKnY,KAAOzE,GAAkB,IAAbiC,EAAMjC,GACvB,MAAM,IAAIV,MAAM,sBAAsBU,oBAAoBiC,EAAMjC,iBAEpD,MAAX4c,EAAKnY,IAAcmY,EAAKnY,GAAKzE,IAAmB,IAAbiC,EAAMjC,KAC1Coc,EAAS5a,KAAKS,EAAMjC,IACpB0c,EAASlb,KAAKxB,IAEd4c,EAAKnY,IAAMzE,GACXyE,IAGS,IAAbxC,EAAMjC,KACNoc,EAAS5a,KAAKS,EAAMjC,IACpB0c,EAASlb,KAAKxB,IAGtB,MAAO,CAAEoc,WAAUM,YAEhB,SAASI,EAAuB5d,EAAOmJ,GAC1C,IAAI/E,EAAS,KACb,GAAa,MAATpE,GAA2B,YAAVA,EACjBoE,EAAS,IAAI5D,aAAa2I,QAEzB,GAAc,UAAVnJ,EACLoE,EAAS,IAAI3D,WAAW0I,OAEvB,IAAc,SAAVnJ,EAIL,MAAM,IAAII,MAAM,qBAAqBJ,KAHrCoE,EAAS,IAAI1D,WAAWyI,GAK5B,OAAO/E,EAEJ,SAASyZ,EAAkB7d,EAAOmJ,GACrC,IAAI/E,EAAS,KACb,GAAa,MAATpE,GAA2B,YAAVA,EACjBoE,EAAS,IAAI5D,aAAa2I,QAEzB,GAAc,UAAVnJ,EACLoE,EAAS,IAAI3D,WAAW0I,QAEvB,GAAc,SAAVnJ,EACLoE,EAAS,IAAI1D,WAAWyI,OAEvB,IAAc,WAAVnJ,EAIL,MAAM,IAAII,MAAM,qBAAqBJ,KAHrCoE,EAAS,IAAI/D,MAAM8I,GAKvB,OAAO/E,EAEJ,SAAS0Z,EAAyBxJ,EAAMtU,GAC3C,IAAK,IAAIc,EAAI,EAAGA,EAAIwT,EAAKzT,OAAQC,IAAK,CAClC,MAAM8Y,EAAMtF,EAAKxT,GACjB,GAAI0J,MAAMoP,KAAS9J,SAAS8J,GACxB,MAAMxZ,MAAM,oBAAoBJ,6BAAiC4Z,OAKtE,SAASmE,EAAa/d,GACzB,MAAiB,SAAVA,GAA8B,cAAVA,GAAmC,YAAVA,GACtC,UAAVA,GAA+B,WAAVA,EAMtB,SAASge,EAAgBC,EAASC,GACrC,MAAgB,cAAZA,KAGY,YAAZA,GAAqC,cAAZD,MAGb,UAAZC,GAAmC,YAAZD,GAAqC,cAAZA,KAGpC,SAAZC,GAAkC,SAAZD,KAKvB,SAAS/C,EAAa/a,GACzB,OAAOA,aAAaK,cAAgBL,aAAaM,YAC7CN,aAAaO,WAEd,SAASyd,EAAgBne,GAC5B,GAAc,YAAVA,GAAiC,UAAVA,EACvB,OAAO,EAEN,GAAc,cAAVA,EACL,OAAO,EAEN,GAAc,SAAVA,EACL,OAAO,EAGP,MAAM,IAAII,MAAM,iBAAiBJ,KASlC,SAASoe,EAAqBxT,GACjC,GAAW,MAAPA,EACA,OAAO,EAEX,IAAIlJ,EAAQ,EAEZ,OADAkJ,EAAInF,SAAQ7B,GAAKlC,GAASkC,EAAE/C,SACrBa,EAGJ,SAAS2c,EAASte,GACrB,MAAwB,iBAAVA,GAAsBA,aAAiBiL,OAElD,SAASsT,EAAUve,GACtB,MAAwB,kBAAVA,EAEX,SAASwe,EAASxe,GACrB,MAAwB,iBAAVA,EAEX,SAASye,EAAWpa,GACvB,OAAI/D,MAAMC,QAAQ8D,GACPoa,EAAWpa,EAAO,IAEzBA,aAAkB5D,aACX,UAEF4D,aAAkB3D,YAAc2D,aAAkB1D,WAChD,QAEF6d,EAASna,GACP,UAEFia,EAASja,GACP,SAEFka,EAAUla,GACR,OAEJ,UAEJ,SAASqa,EAAWC,GACvB,SAAUA,GAAKA,EAAEza,aAAeya,EAAEhU,MAAQgU,EAAEhR,OAEzC,SAASiR,EAAexV,EAAMQ,GACjC,IAAK,IAAI7I,EAAI6I,EAAO7I,EAAIqI,IAAQrI,EAC5B,GAAIqI,EAAOrI,GAAM,EACb,OAAOA,EAGf,OAAOqI,EAEJ,SAASyV,EAAe7b,GAC3B,MAAM4R,EAAO5R,EAAMlC,OACnB,GAAI8T,EAAO,EACP,MAAO,GAIX,MAAMH,EAAU,IAAInU,MAAMsU,EAAO,GACjCH,EAAQG,EAAO,GAAK5R,EAAM4R,EAAO,GACjC,IAAK,IAAI7T,EAAI6T,EAAO,EAAG7T,GAAK,IAAKA,EAC7B0T,EAAQ1T,GAAK0T,EAAQ1T,EAAI,GAAKiC,EAAMjC,EAAI,GAE5C,OAAO0T,EAEX,SAASqK,EAAkBtT,EAAQxI,EAAO5C,GACtC,MAAM8P,EAAM,IAAI5P,MAChB,GAAqB,IAAjB0C,EAAMlC,OAAc,CACpB,MAAMie,EAAI/b,EAAM,GAChB,IAAK,IAAIjC,EAAI,EAAGA,EAAIge,EAAGhe,IACnBmP,EAAInP,GAAKX,EAAEoL,EAASzK,OAGvB,CACD,MAAMge,EAAI/b,EAAM,GACVgc,EAAOhc,EAAMK,MAAM,GACnBwF,EAAMmW,EAAKC,QAAO,CAACC,EAAKxS,IAAMwS,EAAMxS,IAC1C,IAAK,IAAI3L,EAAI,EAAGA,EAAIge,EAAGhe,IACnBmP,EAAInP,GAAK+d,EAAkBtT,EAASzK,EAAI8H,EAAKmW,EAAM5e,GAG3D,OAAO8P,EAGJ,SAASiP,EAAcnc,EAAO5C,GACjC,GAAqB,IAAjB4C,EAAMlC,OAEN,OAAOV,EAAE,GAEb,MAAMgJ,EAAOpG,EAAMic,QAAO,CAACC,EAAKxS,IAAMwS,EAAMxS,IAC5C,GAAa,IAATtD,EAEA,MAAO,GAEX,GAAIA,IAAShJ,EAAEU,OACX,MAAM,IAAIT,MAAM,IAAI2C,oCAAwC5C,EAAEU,WAElE,OAAOge,EAAkB,EAAG9b,EAAO5C,GAEhC,SAASgf,EAAmBhW,EAAMnJ,GACrC,MAAMgI,EAAQoX,EAAoBjW,EAAMnJ,GACxC,IAAK,IAAIc,EAAI,EAAGA,EAAIkH,EAAMnH,OAAQC,IAC9BkH,EAAMlH,GAAK,EAEf,OAAOkH,EAEJ,SAASoX,EAAoBjW,EAAMnJ,GACtC,GAAa,MAATA,GAA2B,YAAVA,GAAiC,cAAVA,EACxC,OAAO,IAAIQ,aAAa2I,GAEvB,GAAc,UAAVnJ,EACL,OAAO,IAAIS,WAAW0I,GAErB,GAAc,SAAVnJ,EACL,OAAO,IAAIU,WAAWyI,GAGtB,MAAM,IAAI/I,MAAM,qBAAqBJ,KAQtC,SAASqf,EAA0Btc,EAAO/C,GAC7C,MAAMmJ,EAAOpG,EAAMic,QAAO,CAACM,EAAMC,IAASD,EAAOC,GAAM,GACvD,GAAa,MAATvf,GAA2B,YAAVA,EACjB,OAAOkf,EAAcnc,EAAO,IAAIvC,aAAa2I,IAE5C,GAAc,UAAVnJ,EACL,OAAOkf,EAAcnc,EAAO,IAAItC,WAAW0I,IAE1C,GAAc,SAAVnJ,EACL,OAAOkf,EAAcnc,EAAO,IAAIrC,WAAWyI,IAG3C,MAAM,IAAI/I,MAAM,qBAAqBJ,KAGtC,SAASwf,EAAmCzc,GAC/CA,EAAM0C,SAAQga,IACVjF,EAAOhP,OAAOkU,UAAUD,IAAYA,GAAW,GAAG,IAC9C,0EAAU1c,WAWf,SAASyT,EAAWF,EAAM3B,EAAMH,GACnC,GAAa,IAATG,EACA,OAAO,EAEN,GAAa,IAATA,EACL,OAAO2B,EAAK,GAEhB,IAAIC,EAAQD,EAAKA,EAAKzV,OAAS,GAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIwV,EAAKzV,OAAS,IAAKC,EACnCyV,GAAS/B,EAAQ1T,GAAKwV,EAAKxV,GAE/B,OAAOyV,EAUJ,SAASoJ,EAAWpJ,EAAO5B,EAAMH,GACpC,GAAa,IAATG,EACA,MAAO,GAEN,GAAa,IAATA,EACL,MAAO,CAAC4B,GAEZ,MAAMD,EAAO,IAAIjW,MAAMsU,GACvB,IAAK,IAAI7T,EAAI,EAAGA,EAAIwV,EAAKzV,OAAS,IAAKC,EACnCwV,EAAKxV,GAAKC,KAAKuR,MAAMiE,EAAQ/B,EAAQ1T,IACrCyV,GAASD,EAAKxV,GAAK0T,EAAQ1T,GAG/B,OADAwV,EAAKA,EAAKzV,OAAS,GAAK0V,EACjBD,EAOJ,SAASsJ,EAAUC,GAOtB,OAAOA,GAAUA,EAAOC,MAA+B,mBAAhBD,EAAOC,KArnBlD,2/C,gCCgBO,IAAIC,EAYPC,EAOAC,EAOAC,EAOAC,EAjDJ,kCAiBA,SAAWJ,GACPA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KAPjB,CAQGA,IAASA,EAAO,KAInB,SAAWC,GACPA,EAA2B,QAAI,UAC/BA,EAAyB,MAAI,QAC7BA,EAAwB,KAAI,QAC5BA,EAA6B,UAAI,YAJrC,CAKGA,IAAsBA,EAAoB,KAE7C,SAAWC,GACPA,EAA0B,QAAI,UAC9BA,EAAwB,MAAI,QAC5BA,EAAuB,KAAI,OAC3BA,EAA4B,UAAI,YAJpC,CAKGA,IAAqBA,EAAmB,KAE3C,SAAWC,GACPA,EAA6B,QAAI,UACjCA,EAA2B,MAAI,UAC/BA,EAA0B,KAAI,UAC9BA,EAA+B,UAAI,YAJvC,CAKGA,IAAwBA,EAAsB,KAEjD,SAAWC,GACPA,EAA+B,QAAI,YACnCA,EAA6B,MAAI,YACjCA,EAA4B,KAAI,YAChCA,EAAiC,UAAI,YAJzC,CAKGA,IAA0BA,EAAwB,KACrD,MAAMC,EAAgB,CAClB,QAAWF,EACX,MAASF,EACT,KAAQC,EACR,UAAaE,GAEV,SAASE,EAAWC,EAAOC,GAC9B,GAAc,WAAVD,GAAgC,WAAVC,EAAoB,CAC1C,GAAc,WAAVD,GAAgC,WAAVC,EACtB,MAAO,SAEX,MAAM,IAAIngB,MAAM,kBAAkBkgB,UAAcC,KAEpD,OAAOH,EAAcE,GAAOC","file":"js/bundle~bundle~253ae210.29ca1ab7.js","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as base from './util_base';\nexport * from './util_base';\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\nexport function createScalarValue(value, dtype) {\n    if (dtype === 'string') {\n        return encodeString(value);\n    }\n    return toTypedArray([value], dtype);\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\nexport function toTypedArray(a, dtype) {\n    if (dtype === 'string') {\n        throw new Error('Cannot convert a string[] to a TypedArray');\n    }\n    if (Array.isArray(a)) {\n        a = base.flatten(a);\n    }\n    if (env().getBool('DEBUG')) {\n        base.checkConversionForErrors(a, dtype);\n    }\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(a);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(a);\n    }\n    else if (dtype === 'bool') {\n        const bool = new Uint8Array(a.length);\n        for (let i = 0; i < bool.length; ++i) {\n            if (Math.round(a[i]) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function now() {\n    return env().platform.now();\n}\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\nexport function fetch(path, requestInits) {\n    return env().platform.fetch(path, requestInits);\n}\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function encodeString(s, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return env().platform.encode(s, encoding);\n}\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function decodeString(bytes, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return env().platform.decode(bytes, encoding);\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tensor } from './tensor';\nimport { upcastType } from './types';\nimport { assert } from './util';\nexport function makeTypesMatch(a, b) {\n    if (a.dtype === b.dtype) {\n        return [a, b];\n    }\n    const dtype = upcastType(a.dtype, b.dtype);\n    return [a.cast(dtype), b.cast(dtype)];\n}\nexport function assertTypesMatch(a, b) {\n    assert(a.dtype === b.dtype, () => `The dtypes of the first(${a.dtype}) and` +\n        ` second(${b.dtype}) input must match`);\n}\nexport function isTensorInList(tensor, tensorList) {\n    return tensorList.some(x => x.id === tensor.id);\n}\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nexport function getTensorsInContainer(result) {\n    const list = [];\n    const seen = new Set();\n    walkTensorContainer(result, list, seen);\n    return list;\n}\nfunction walkTensorContainer(container, list, seen) {\n    if (container == null) {\n        return;\n    }\n    if (container instanceof Tensor) {\n        list.push(container);\n        return;\n    }\n    if (!isIterable(container)) {\n        return;\n    }\n    // Iteration over keys works also for arrays.\n    const iterable = container;\n    for (const k in iterable) {\n        const val = iterable[k];\n        if (!seen.has(val)) {\n            seen.add(val);\n            walkTensorContainer(val, list, seen);\n        }\n    }\n}\n// tslint:disable-next-line:no-any\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n//# sourceMappingURL=tensor_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { env } from './environment';\nimport { Tensor } from './tensor';\nimport { assert, flatten, inferDtype, isTypedArray, toTypedArray } from './util';\nexport function inferShape(val, dtype) {\n    let firstElem = val;\n    if (isTypedArray(val)) {\n        return dtype === 'string' ? [] : [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return []; // Scalar.\n    }\n    const shape = [];\n    while (Array.isArray(firstElem) ||\n        isTypedArray(firstElem) && dtype !== 'string') {\n        shape.push(firstElem.length);\n        firstElem = firstElem[0];\n    }\n    if (Array.isArray(val) &&\n        env().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n        deepAssertShapeConsistency(val, shape, []);\n    }\n    return shape;\n}\nfunction deepAssertShapeConsistency(val, shape, indices) {\n    indices = indices || [];\n    if (!(Array.isArray(val)) && !isTypedArray(val)) {\n        assert(shape.length === 0, () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n        return;\n    }\n    assert(shape.length > 0, () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n        `but is an array of ${val.length} elements`);\n    assert(val.length === shape[0], () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n        `elements, but has ${val.length} elements`);\n    const subShape = shape.slice(1);\n    for (let i = 0; i < val.length; ++i) {\n        deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n    }\n}\nfunction assertDtype(expectedDtype, actualDType, argName, functionName) {\n    if (expectedDtype === 'string_or_numeric') {\n        return;\n    }\n    if (expectedDtype == null) {\n        throw new Error(`Expected dtype cannot be null.`);\n    }\n    if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n        expectedDtype === 'numeric' && actualDType === 'string') {\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must ` +\n            `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n    }\n}\nexport function convertToTensor(x, argName, functionName, parseAsDtype = 'numeric') {\n    if (x instanceof Tensor) {\n        assertDtype(parseAsDtype, x.dtype, argName, functionName);\n        return x;\n    }\n    let inferredDtype = inferDtype(x);\n    // If the user expects a bool/int/float, use that info to update the\n    // inferredDtype when it is not a string.\n    if (inferredDtype !== 'string' &&\n        ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n        inferredDtype = parseAsDtype;\n    }\n    assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n    if ((x == null) ||\n        (!isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' &&\n            typeof x !== 'boolean' && typeof x !== 'string')) {\n        const type = x == null ? 'null' : x.constructor.name;\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must be a ` +\n            `Tensor or TensorLike, but got '${type}'`);\n    }\n    const inferredShape = inferShape(x, inferredDtype);\n    if (!isTypedArray(x) && !Array.isArray(x)) {\n        x = [x];\n    }\n    const skipTypedArray = true;\n    const values = inferredDtype !== 'string' ?\n        toTypedArray(x, inferredDtype) :\n        flatten(x, [], skipTypedArray);\n    return ENGINE.makeTensor(values, inferredShape, inferredDtype);\n}\nexport function convertToTensorArray(arg, argName, functionName, parseAsDtype = 'numeric') {\n    if (!Array.isArray(arg)) {\n        throw new Error(`Argument ${argName} passed to ${functionName} must be a ` +\n            '`Tensor[]` or `TensorLike[]`');\n    }\n    const tensors = arg;\n    return tensors.map((t, i) => convertToTensor(t, `${argName}[${i}]`, functionName, parseAsDtype));\n}\n//# sourceMappingURL=tensor_util_env.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from './util';\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nexport function getFilteredNodesXToY(tape, xs, y) {\n    // Forward pass to compute all the nodes and Tensors that are transitively a\n    // function of x.\n    const tensorsFromX = {};\n    const nodesFromX = {};\n    for (let i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        for (const inputName in nodeInputs) {\n            const input = nodeInputs[inputName];\n            let anyInputFromX = false;\n            for (let j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(output => tensorsFromX[output.id] = true);\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    // Backward pass to find all of the nodes and Tensors that lead to y.\n    const tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    const nodesToY = {};\n    for (let i = tape.length - 1; i >= 0; i--) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        // If any of the outputs lead to y, mark all of the inputs as leading to y.\n        for (let j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (const inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    // Return the paths that come from x and lead to y.\n    const filteredTape = [];\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            // Prune the inputs from the node that aren't a function of x.\n            const prunedInputs = {};\n            for (const inputName in node.inputs) {\n                const nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            // Copy the node and overwrite inputsAndArgs to the pruned version.\n            const prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nexport function backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy, add) {\n    // Walk the tape backward and keep a map of Tensor to its gradient.\n    for (let i = filteredTape.length - 1; i >= 0; i--) {\n        const node = filteredTape[i];\n        const dys = [];\n        node.outputs.forEach(o => {\n            const gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                // This particular output is not in the back-propagation subgraph, so it\n                // does not affect the final output, thus we put null for its dy.\n                dys.push(null);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(`Cannot compute gradient: gradient function not found ` +\n                `for ${node.kernelName}.`);\n        }\n        // Backprop dy through this node and accumulate gradients over the inputs.\n        const inputGradients = node.gradient(dys);\n        for (const inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(`Cannot backprop through input ${inputName}. ` +\n                    `Available gradients found: ${Object.keys(inputGradients)}.`);\n            }\n            // Call the gradient function.\n            const dx = tidy(() => inputGradients[inputName]());\n            if (dx.dtype !== 'float32') {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n            }\n            const x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `'${inputName}' has shape '${dx.shape}', which does not match ` +\n                    `the shape of the input '${x.shape}'`);\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                const curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\n//# sourceMappingURL=tape.js.map","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { computeStrides, isString, rightPad, sizeFromShape } from './util';\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\nexport function tensorToString(vals, shape, dtype, verbose) {\n    const strides = computeStrides(shape);\n    const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n    const rank = shape.length;\n    const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n    const lines = ['Tensor'];\n    if (verbose) {\n        lines.push(`  dtype: ${dtype}`);\n        lines.push(`  rank: ${rank}`);\n        lines.push(`  shape: [${shape}]`);\n        lines.push(`  values:`);\n    }\n    lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n    return lines.join('\\n');\n}\nfunction computeMaxSizePerColumn(vals, shape, dtype, strides) {\n    const n = sizeFromShape(shape);\n    const numCols = strides[strides.length - 1];\n    const padPerCol = new Array(numCols).fill(0);\n    const rank = shape.length;\n    const valuesOrTuples = dtype === 'complex64' ? createComplexTuples(vals) : vals;\n    if (rank > 1) {\n        for (let row = 0; row < n / numCols; row++) {\n            const offset = row * numCols;\n            for (let j = 0; j < numCols; j++) {\n                padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad, dtype) {\n    let valStr;\n    if (Array.isArray(val)) {\n        valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n            `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n    }\n    else if (isString(val)) {\n        valStr = `'${val}'`;\n    }\n    else if (dtype === 'bool') {\n        valStr = boolNumToString(val);\n    }\n    else {\n        valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n    }\n    return rightPad(valStr, pad);\n}\nfunction boolNumToString(v) {\n    return v === 0 ? 'false' : 'true';\n}\nfunction subTensorToString(vals, shape, dtype, strides, padPerCol, isLast = true) {\n    const storagePerElement = dtype === 'complex64' ? 2 : 1;\n    const size = shape[0];\n    const rank = shape.length;\n    if (rank === 0) {\n        if (dtype === 'complex64') {\n            const complexTuple = createComplexTuples(vals);\n            return [valToString(complexTuple[0], 0, dtype)];\n        }\n        if (dtype === 'bool') {\n            return [boolNumToString(vals[0])];\n        }\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n            let firstVals = Array.from(vals.slice(0, firstValsSize));\n            let lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));\n            if (dtype === 'complex64') {\n                firstVals = createComplexTuples(firstVals);\n                lastVals = createComplexTuples(lastVals);\n            }\n            return [\n                '[' +\n                    firstVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                        .join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map((x, i) => valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        const displayVals = dtype === 'complex64' ? createComplexTuples(vals) :\n            Array.from(vals);\n        return [\n            '[' +\n                displayVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                    .join(', ') +\n                ']'\n        ];\n    }\n    // The array is rank 2 or more.\n    const subshape = shape.slice(1);\n    const substrides = strides.slice(1);\n    const stride = strides[0] * storagePerElement;\n    const lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false /* isLast */));\n        }\n        lines.push('...');\n        for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    else {\n        for (let i = 0; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    const sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (let i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    let newLineSep = ',\\n';\n    for (let i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\nfunction createComplexTuples(vals) {\n    const complexTuples = [];\n    for (let i = 0; i < vals.length; i += 2) {\n        complexTuples.push([vals[i], vals[i + 1]]);\n    }\n    return complexTuples;\n}\n//# sourceMappingURL=tensor_format.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tensorToString } from './tensor_format';\nimport * as util from './util';\nimport { computeStrides, toNestedArray } from './util';\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class TensorBuffer {\n    constructor(shape, dtype, values) {\n        this.dtype = dtype;\n        this.shape = shape.slice();\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            const n = values.length;\n            util.assert(n === this.size, () => `Length of values '${n}' does not match the size ` +\n                `inferred by the shape '${this.size}'.`);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(`complex64 dtype TensorBuffers are not supported. Please create ` +\n                `a TensorBuffer for the real and imaginary parts separately and ` +\n                `call tf.complex(real, imag).`);\n        }\n        this.values = values || util.getArrayFromDType(dtype, this.size);\n        this.strides = computeStrides(shape);\n    }\n    /**\n     * Sets a value in the buffer at a given location.\n     *\n     * @param value The value to set.\n     * @param locs  The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    set(value, ...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        util.assert(locs.length === this.rank, () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n        const index = this.locToIndex(locs);\n        this.values[index] = value;\n    }\n    /**\n     * Returns the value in the buffer at the provided location.\n     *\n     * @param locs The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    get(...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        let i = 0;\n        for (const loc of locs) {\n            if (loc < 0 || loc >= this.shape[i]) {\n                const msg = `Requested out of range element at ${locs}. ` +\n                    `  Buffer shape=${this.shape}`;\n                throw new Error(msg);\n            }\n            i++;\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.values[index];\n    }\n    locToIndex(locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    }\n    indexToLoc(index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        const locs = new Array(this.shape.length);\n        for (let i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Creates an immutable `tf.Tensor` object from the buffer.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    toTensor() {\n        return trackerFn().makeTensor(this.values, this.shape, this.dtype);\n    }\n}\n// For tracking tensor creation and disposal.\nlet trackerFn = null;\n// Used by chaining methods to call into ops.\nlet opHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nexport function setTensorTracker(fn) {\n    trackerFn = fn;\n}\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nexport function setOpHandler(handler) {\n    opHandler = handler;\n}\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nexport function setDeprecationWarningFn(fn) {\n    deprecationWarningFn = fn;\n}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Tensor {\n    constructor(shape, dtype, dataId, id) {\n        /** Whether this tensor has been globally kept. */\n        this.kept = false;\n        this.isDisposedInternal = false;\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.size = util.sizeFromShape(shape);\n        this.strides = computeStrides(shape);\n        this.dataId = dataId;\n        this.id = id;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async buffer() {\n        const vals = await this.data();\n        return opHandler.buffer(this.shape, this.dtype, vals);\n    }\n    /**\n     * Returns a `tf.TensorBuffer` that holds the underlying data.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    bufferSync() {\n        return opHandler.buffer(this.shape, this.dtype, this.dataSync());\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * asynchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async array() {\n        const vals = await this.data();\n        return toNestedArray(this.shape, vals);\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * synchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    arraySync() {\n        return toNestedArray(this.shape, this.dataSync());\n    }\n    /**\n     * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n     * promise of `TypedArray` that resolves when the computation has finished.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async data() {\n        this.throwIfDisposed();\n        const data = trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            const bytes = await data;\n            try {\n                return bytes.map(b => util.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /**\n     * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n     * UI thread until the values are ready, which can cause performance issues.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dataSync() {\n        this.throwIfDisposed();\n        const data = trackerFn().readSync(this.dataId);\n        if (this.dtype === 'string') {\n            try {\n                return data.map(b => util.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /** Returns the underlying bytes of the tensor's data. */\n    async bytes() {\n        this.throwIfDisposed();\n        const data = await trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            return data;\n        }\n        else {\n            return new Uint8Array(data.buffer);\n        }\n    }\n    /**\n     * Disposes `tf.Tensor` from memory.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        trackerFn().disposeTensor(this);\n        this.isDisposedInternal = true;\n    }\n    get isDisposed() {\n        return this.isDisposedInternal;\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error(`Tensor is disposed.`);\n        }\n    }\n    /**\n     * Prints the `tf.Tensor`. See `tf.print` for details.\n     *\n     * @param verbose Whether to print verbose information about the tensor,\n     *    including dtype and size.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    print(verbose = false) {\n        return opHandler.print(this, verbose);\n    }\n    /**\n     * Returns a copy of the tensor. See `tf.clone` for details.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    clone() {\n        this.throwIfDisposed();\n        return opHandler.clone(this);\n    }\n    /**\n     * Returns a human-readable description of the tensor. Useful for logging.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    toString(verbose = false) {\n        const vals = this.dataSync();\n        return tensorToString(vals, this.shape, this.dtype, verbose);\n    }\n    cast(dtype) {\n        this.throwIfDisposed();\n        return opHandler.cast(this, dtype);\n    }\n    variable(trainable = true, name, dtype) {\n        this.throwIfDisposed();\n        return trackerFn().makeVariable(this, trainable, name, dtype);\n    }\n}\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n    value: (instance) => {\n        // Implementation note: we should use properties of the object that will be\n        // defined before the constructor body has finished executing (methods).\n        // This is because when this code is transpiled by babel, babel will call\n        // classCallCheck before the constructor body is run.\n        // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n        return !!instance && instance.data != null && instance.dataSync != null &&\n            instance.throwIfDisposed != null;\n    }\n});\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Variable extends Tensor {\n    constructor(initialValue, trainable, name, tensorId) {\n        super(initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n        this.trainable = trainable;\n        this.name = name;\n    }\n    /**\n     * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n     * the same shape and dtype as the old `tf.Tensor`.\n     *\n     * @param newValue New tensor to be assigned to this variable.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    assign(newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(`dtype of the new value (${newValue.dtype}) and ` +\n                `previous value (${this.dtype}) must match`);\n        }\n        if (!util.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(`shape of the new value (${newValue.shape}) and ` +\n                `previous value (${this.shape}) must match`);\n        }\n        trackerFn().disposeTensor(this);\n        this.dataId = newValue.dataId;\n        trackerFn().incRef(this, null /* backend */);\n    }\n    dispose() {\n        trackerFn().disposeVariable(this);\n        this.isDisposedInternal = true;\n    }\n}\nObject.defineProperty(Variable, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance instanceof Tensor && instance.assign != null &&\n            instance.assign instanceof Function;\n    }\n});\n//# sourceMappingURL=tensor.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nexport function shuffle(array) {\n    let counter = array.length;\n    let temp = 0;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n}\n/** Clamps a value to a specified range. */\nexport function clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nexport function nearestLargerEven(val) {\n    return val % 2 === 0 ? val : val + 1;\n}\nexport function sum(arr) {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n    }\n    return sum;\n}\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nexport function randUniform(a, b) {\n    const r = Math.random();\n    return (b * r) + (1 - r) * a;\n}\n/** Returns the squared Euclidean distance between two vectors. */\nexport function distSquared(a, b) {\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        const diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function assert(expr, msg) {\n    if (!expr) {\n        throw new Error(typeof msg === 'string' ? msg : msg());\n    }\n}\nexport function assertShapesMatch(shapeA, shapeB, errorMessagePrefix = '') {\n    assert(arraysEqual(shapeA, shapeB), () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\nexport function assertNonNull(a) {\n    assert(a != null, () => `The input to the tensor constructor must be a non-null value.`);\n}\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function flatten(arr, result = [], skipTypedArray = false) {\n    if (result == null) {\n        result = [];\n    }\n    if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n        for (let i = 0; i < arr.length; ++i) {\n            flatten(arr[i], result, skipTypedArray);\n        }\n    }\n    else {\n        result.push(arr);\n    }\n    return result;\n}\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function sizeFromShape(shape) {\n    if (shape.length === 0) {\n        // Scalar.\n        return 1;\n    }\n    let size = shape[0];\n    for (let i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nexport function isScalarShape(shape) {\n    return shape.length === 0;\n}\nexport function arraysEqual(n1, n2) {\n    if (n1 === n2) {\n        return true;\n    }\n    if (n1 == null || n2 == null) {\n        return false;\n    }\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isInt(a) {\n    return a % 1 === 0;\n}\nexport function tanh(x) {\n    // tslint:disable-next-line:no-any\n    if (Math.tanh != null) {\n        // tslint:disable-next-line:no-any\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        const e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nexport function sizeToSquarishShape(size) {\n    const width = Math.ceil(Math.sqrt(size));\n    return [width, Math.ceil(size / width)];\n}\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function createShuffledIndices(n) {\n    const shuffledIndices = new Uint32Array(n);\n    for (let i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nexport function rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nexport function repeatedTry(checkFn, delayFn = (counter) => 0, maxCounter) {\n    return new Promise((resolve, reject) => {\n        let tryCount = 0;\n        const tryFn = () => {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            const nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        tryFn();\n    });\n}\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nexport function inferFromImplicitShape(shape, size) {\n    let shapeProd = 1;\n    let implicitIdx = -1;\n    for (let i = 0; i < shape.length; ++i) {\n        if (shape[i] >= 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(`Shapes can only have 1 implicit size. ` +\n                    `Found -1 at dim ${implicitIdx} and dim ${i}`);\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] < 0) {\n            throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(`Size(${size}) must match the product of shape ${shape}`);\n        }\n        return shape;\n    }\n    if (shapeProd === 0) {\n        throw Error(`Cannot infer the missing size in [${shape}] when ` +\n            `there are 0 elements`);\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(`The implicit shape can't be a fractional number. ` +\n            `Got ${size} / ${shapeProd}`);\n    }\n    const newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nexport function parseAxisParam(axis, shape) {\n    const rank = shape.length;\n    // Normalize input\n    axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n    // Check for valid range\n    assert(axis.every(ax => ax >= -rank && ax < rank), () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n        `got axis ${axis}`);\n    // Check for only integers\n    assert(axis.every(ax => isInt(ax)), () => `All values in axis param must be integers but ` +\n        `got axis ${axis}`);\n    // Handle negative axis.\n    return axis.map(a => a < 0 ? rank + a : a);\n}\n/** Reduces the shape by removing all dimensions of shape 1. */\nexport function squeezeShape(shape, axis) {\n    const newShape = [];\n    const keptDims = [];\n    const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n    const axes = (axis == null || isEmptyArray) ?\n        null :\n        parseAxisParam(axis, shape).sort();\n    let j = 0;\n    for (let i = 0; i < shape.length; ++i) {\n        if (axes != null) {\n            if (axes[j] === i && shape[i] !== 1) {\n                throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n            }\n            if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n                newShape.push(shape[i]);\n                keptDims.push(i);\n            }\n            if (axes[j] <= i) {\n                j++;\n            }\n        }\n        if (shape[i] !== 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape, keptDims };\n}\nexport function getTypedArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nexport function getArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else if (dtype === 'string') {\n        values = new Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nexport function checkConversionForErrors(vals, dtype) {\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n        }\n    }\n}\n/** Returns true if the dtype is valid. */\nexport function isValidDtype(dtype) {\n    return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n        dtype === 'int32' || dtype === 'string';\n}\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nexport function hasEncodingLoss(oldType, newType) {\n    if (newType === 'complex64') {\n        return false;\n    }\n    if (newType === 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'bool' && oldType === 'bool') {\n        return false;\n    }\n    return true;\n}\nexport function isTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nexport function bytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32') {\n        return 4;\n    }\n    else if (dtype === 'complex64') {\n        return 8;\n    }\n    else if (dtype === 'bool') {\n        return 1;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nexport function bytesFromStringArray(arr) {\n    if (arr == null) {\n        return 0;\n    }\n    let bytes = 0;\n    arr.forEach(x => bytes += x.length);\n    return bytes;\n}\n/** Returns true if the value is a string. */\nexport function isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexport function isBoolean(value) {\n    return typeof value === 'boolean';\n}\nexport function isNumber(value) {\n    return typeof value === 'number';\n}\nexport function inferDtype(values) {\n    if (Array.isArray(values)) {\n        return inferDtype(values[0]);\n    }\n    if (values instanceof Float32Array) {\n        return 'float32';\n    }\n    else if (values instanceof Int32Array || values instanceof Uint8Array) {\n        return 'int32';\n    }\n    else if (isNumber(values)) {\n        return 'float32';\n    }\n    else if (isString(values)) {\n        return 'string';\n    }\n    else if (isBoolean(values)) {\n        return 'bool';\n    }\n    return 'float32';\n}\nexport function isFunction(f) {\n    return !!(f && f.constructor && f.call && f.apply);\n}\nexport function nearestDivisor(size, start) {\n    for (let i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\nexport function computeStrides(shape) {\n    const rank = shape.length;\n    if (rank < 2) {\n        return [];\n    }\n    // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n    // strides.\n    const strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n        strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n}\nfunction createNestedArray(offset, shape, a) {\n    const ret = new Array();\n    if (shape.length === 1) {\n        const d = shape[0];\n        for (let i = 0; i < d; i++) {\n            ret[i] = a[offset + i];\n        }\n    }\n    else {\n        const d = shape[0];\n        const rest = shape.slice(1);\n        const len = rest.reduce((acc, c) => acc * c);\n        for (let i = 0; i < d; i++) {\n            ret[i] = createNestedArray(offset + i * len, rest, a);\n        }\n    }\n    return ret;\n}\n// Provide a nested array of TypedArray in given shape.\nexport function toNestedArray(shape, a) {\n    if (shape.length === 0) {\n        // Scalar type should return a single number.\n        return a[0];\n    }\n    const size = shape.reduce((acc, c) => acc * c);\n    if (size === 0) {\n        // A tensor with shape zero should be turned into empty list.\n        return [];\n    }\n    if (size !== a.length) {\n        throw new Error(`[${shape}] does not match the input size ${a.length}.`);\n    }\n    return createNestedArray(0, shape, a);\n}\nexport function makeOnesTypedArray(size, dtype) {\n    const array = makeZerosTypedArray(size, dtype);\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\nexport function makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\nexport function makeZerosNestedTypedArray(shape, dtype) {\n    const size = shape.reduce((prev, curr) => prev * curr, 1);\n    if (dtype == null || dtype === 'float32') {\n        return toNestedArray(shape, new Float32Array(size));\n    }\n    else if (dtype === 'int32') {\n        return toNestedArray(shape, new Int32Array(size));\n    }\n    else if (dtype === 'bool') {\n        return toNestedArray(shape, new Uint8Array(size));\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\nexport function assertNonNegativeIntegerDimensions(shape) {\n    shape.forEach(dimSize => {\n        assert(Number.isInteger(dimSize) && dimSize >= 0, () => `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n    });\n}\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\nexport function locToIndex(locs, rank, strides) {\n    if (rank === 0) {\n        return 0;\n    }\n    else if (rank === 1) {\n        return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n        index += strides[i] * locs[i];\n    }\n    return index;\n}\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\nexport function indexToLoc(index, rank, strides) {\n    if (rank === 0) {\n        return [];\n    }\n    else if (rank === 1) {\n        return [index];\n    }\n    const locs = new Array(rank);\n    for (let i = 0; i < locs.length - 1; ++i) {\n        locs[i] = Math.floor(index / strides[i]);\n        index -= locs[i] * strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n}\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\nexport function isPromise(object) {\n    //  We chose to not use 'obj instanceOf Promise' for two reasons:\n    //  1. It only reliably works for es6 Promise, not other Promise\n    //  implementations.\n    //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n    //  the async calls, so it is possible the obj (patched) is comparing to a\n    //  pre-patched Promise.\n    return object && object.then && typeof object.then === 'function';\n}\n//# sourceMappingURL=util_base.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n    Rank[\"R5\"] = \"R5\";\n    Rank[\"R6\"] = \"R6\";\n})(Rank || (Rank = {}));\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n    UpcastInt32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n    UpcastBoolAndMap[\"complex64\"] = \"complex64\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n    UpcastFloat32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar UpcastComplex64AndMap;\n(function (UpcastComplex64AndMap) {\n    UpcastComplex64AndMap[\"float32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"int32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"bool\"] = \"complex64\";\n    UpcastComplex64AndMap[\"complex64\"] = \"complex64\";\n})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));\nconst upcastTypeMap = {\n    'float32': UpcastFloat32AndMap,\n    'int32': UpcastInt32AndMap,\n    'bool': UpcastBoolAndMap,\n    'complex64': UpcastComplex64AndMap\n};\nexport function upcastType(typeA, typeB) {\n    if (typeA === 'string' || typeB === 'string') {\n        if (typeA === 'string' && typeB === 'string') {\n            return 'string';\n        }\n        throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n    }\n    return upcastTypeMap[typeA][typeB];\n}\n/** Returns the output type after summation. */\nexport function sumOutType(type) {\n    return upcastType(type, 'int32');\n}\n//# sourceMappingURL=types.js.map"],"sourceRoot":""}