{"version":3,"sources":["webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/tfjs-backend-wasm.wasm","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/tfjs-backend-wasm-simd.wasm","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/tfjs-backend-wasm-threaded-simd.wasm","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/types.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/_FusedMatMul.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/unary_kernel.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Abs.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/binary_kernel.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Add.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/AddN.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Identity.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Transpose.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/kernel_utils.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/All.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Any.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ArgMax.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/AvgPool.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Reshape.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/BatchMatMul.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Cast.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Ceil.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ClipByValue.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Concat.js","webpack:///./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Conv2D.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Conv2DBackpropInput.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Cos.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/CropAndResize.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Cumsum.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/DepthToSpace.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/DepthwiseConv2dNative.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Equal.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Exp.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ExpandDims.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Fill.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FlipLeftRight.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Floor.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FloorDiv.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FusedBatchNorm.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FusedConv2D.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FusedDepthwiseConv2D.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/GatherNd.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/GatherV2.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Greater.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/GreaterEqual.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LeakyRelu.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Less.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LessEqual.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Log.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LogicalAnd.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Max.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Maximum.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/MaxPool.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Mean.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Min.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Minimum.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/MirrorPad.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Multiply.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Neg.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppression_util.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppressionV3.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppressionV4.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppressionV5.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NotEqual.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/OneHot.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/OnesLike.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Pack.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/PadV2.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Pow.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Prelu.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Prod.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Range.js","webpack:///./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/RealDiv.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Relu.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Relu6.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ResizeBilinear.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Reverse.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/RotateWithOffset.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Round.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Rsqrt.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ScatterNd.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Select.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sigmoid.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sin.js","webpack:///./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Slice.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Softmax.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Step.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/StridedSlice.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sum.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Tile.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/TopK.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Transform.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ZerosLike.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/register_all_kernels.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SplitV.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sqrt.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Square.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SquaredDifference.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sub.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Tan.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Tanh.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Unpack.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/flags_wasm.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/backend_wasm.js","webpack:///./node_modules/@tensorflow/tfjs-backend-wasm/dist/base.js","webpack:///./node_modules/@emotion/memoize/dist/memoize.browser.esm.js","webpack:///./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js","webpack:///./node_modules/@emotion/stylis/dist/stylis.browser.esm.js","webpack:///./node_modules/@emotion/unitless/dist/unitless.browser.esm.js"],"names":["CppDType","FusableActivation","wasmFusedMatMul","fusedMatMulConfig","kernelName","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","a","b","bias","preluActivationWeights","dtype","Error","transposeA","transposeB","activation","leakyreluAlpha","aId","dataIdMap","get","dataId","id","bId","biasId","biasData","shape","length","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDim","out","makeOutput","outId","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","createUnaryKernelConfig","wasmFunc","x","xId","sizeFromShape","absConfig","createBinaryKernelConfig","supportsFullBroadcast","outputType","newShape","assertAndGetBroadcastShape","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","addConfig","addNConfig","inputIds","map","inputIdsBytes","identity","inVals","typedArrayFromHeap","set","identityConfig","wasmTranspose","transpose","reducedShape","perm","newPerm","push","minValIdx","j","removeOneSizeDims","permIsNoOp","outShape","inShape","Array","computeOutShape","cloned","permBytes","xShapeBytes","transposeConfig","permuteAxesAndTranspose","axis","xShape","xRank","originalAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","xTransposed","inputWasTransposed","getInnerMostAxes","transposed","wasmAll","allConfig","keepDims","inputId","input","inputRank","assertAxesAreInnerMostDims","reduceShape","computeOutAndReduceShapes","reduceSize","disposeData","expandShapeToKeepDim","wasmAny","anyConfig","argMaxConfig","transposedId","slice","outerSize","innerSize","wasmAvgPool","avgPoolConfig","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","reshape","xSize","$shape","inferFromImplicitShape","assert","incRef","reshapeConfig","wasmBatchMatMul","batchMatMulConfig","aRank","bRank","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","batchDimsCompatible","concat","b3dShape","a3d","b3d","a3dId","b3dId","Math","max","cast","castConfig","ceilConfig","wasmClip","clipByValueConfig","clipValueMin","clipValueMax","t","$inputs","filter","shapes","assertParamsConsistent","inputs2D","inputsValShapes","vals","readSync","simplyConcat","outVals","getArrayFromDType","offset","forEach","size","colOffset","decodedData","fromUint8ToStringArray","tIdx","row","resIdx","col","concatImpl","finalOutShape","stringBytes","fromStringArrayToUint8","sumInnerDims","innerDims","innerDim","outOffset","inOffset","subarray","concatConfig","wasmConv2d","conv2DConfig","filterId","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","wasmConv2DBackpropInput","conv2DBackpropInputConfig","dy","inputShape","batchSize","inHeight","inWidth","outHeight","outWidth","topPad","leftPad","isChannelsLast","dxStrides","computeStrides","dyStrides","fltS0","fltS1","fltS2","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","dyId","cosConfig","InterpolationMethod","wasmCropAndResize","cropAndResizeConfig","method","extrapolationValue","cropSize","image","boxes","boxInd","numBoxes","cropHeight","cropWidth","castedData","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","wasmCumsum","cumsumConfig","exclusive","reverse","permutation","permutedX","permutedAxis","permutedOut","finalDim","permutedXId","permutedOutId","getUndoAxesPermutation","wasmDepthToSpace","depthToSpaceConfig","blockSize","inputHeight","inputWidth","inputDepth","outputHeight","outputWidth","outputDepth","outputShape","xStridesBytes","outputShapeBytes","outStridesBytes","wasmDepthwiseConv2d","depthwiseConv2dNativeConfig","$dilations","equalConfig","expConfig","expandDims","dim","$dim","splice","expandDimsConfig","fillConfig","value","fill","wasmFlipLeftRight","flipLeftRightConfig","imageId","batch","imageHeight","imageWidth","numChannels","floorConfig","floorDivConfig","wasmBatchNorm","fusedBatchNormConfig","varianceEpsilon","mean","variance","scale","meanId","varianceId","offsetId","scaleId","wasmFusedConv2d","fusedConv2DConfig","wasmFusedDepthwiseConv2d","fusedDepthwiseConv2DConfig","wasmGatherNd","gatherNdConfig","params","indices","resultShape","numSlices","sliceSize","prepareAndValidate","indicesShape","sliceRank","indicesId","stridesBytes","wasmGather","gatherV2Config","batchDims","parsedAxis","shapeInfo","segment_util","collectGatherOpShapeInfo","flattenX","dimSize","indicesSize","flattenIndex","flattenOutputShape","stridesSize","greaterConfig","greaterEqualConfig","leakyReluConfig","alpha","lessConfig","lessEqualConfig","logConfig","logicalAndConfig","wasmMax","maxConfig","reductionIndices","maximumConfig","wasmMaxPool","maxPoolConfig","wasmMean","meanConfig","reductionAxes","castedInput","wasmMin","minConfig","minimumConfig","MirrorPaddingMode","wasmMirrorPad","mirrorPadConfig","paddings","mode","p","prePaddingsFlat","padTuple","postPaddingsFlat","prePaddingsBytes","postPaddingsBytes","multiplyConfig","negConfig","parseResultStruct","resOffset","result","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","nonMaxSuppressionV3Config","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","nonMaxSuppressionV4Config","padToMaxOutputSize","nonMaxSuppressionV5Config","softNmsSigma","notEqualConfig","wasmOneHot","oneHotConfig","depth","onValue","offValue","onesLikeConfig","packConfig","assertShapesMatch","intermediateTensorInfos","expandedT","wasmPadV2","padV2Config","constantValue","powConfig","wasmPrelu","preluConfig","weightsId","wasmProd","prodConfig","rangeConfig","start","stop","step","values","makeZerosTypedArray","numElements","abs","ceil","rangeImpl","realDivConfig","reluConfig","relu6Config","wasmResizeBilinear","resizeBilinearConfig","images","alignCorners","halfPixelCenters","newHeight","newWidth","oldHeight","oldWidth","xData","wasmReverse","reverseConfig","dims","axesBytes","outShapeBytes","reshaped","wasmRotate","rotateWithOffsetConfig","radians","fillValue","center","centerX","centerY","getImageCenter","fillValues","fillBytes","roundConfig","rsqrtConfig","wasmScatterNd","scatterNdConfig","updates","numUpdates","outputSize","calculateShapes","updatesId","wasmSelect","selectConfig","condition","e","conditionId","tId","eId","cRank","tRank","sigmoidConfig","sinConfig","sliceImpl","begin","isContinous","isSliceContinous","xStrides","flatOffset","computeFlatOffset","inBuf","outBuf","outLoc","indexToLoc","inLoc","idx","begin_","size_","parseSliceParams","xVals","outData","res","rank","xStride","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","slice3d","xStride3","endK","beginL","k","slice4d","wasmStep","wasmStridedSlice","wasmSum","wasmTile","wasmTopK","wasmTransform","kernelConfigs","logits","numOrSizeSplits","$axis","splitSizes","prepareSplitSize","s","xSliceSize","xSlice","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","ellipsisAxes","slice_util","maskToAxes","numInterpolatedAxes","expandAxes","xReshaped","normalizedBegin","normalizedEnd","normalizedStrides","getNormalizedAxes","shrinkAxes","_","indexOf","xSliced","some","beginBytes","endBytes","reps","newShapeBytes","sorted","outValues","outValuesId","outIndices","outIndicesId","transforms","interpolation","fillMode","transformsId","interpolationModeId","fillModeId","numOutputs","outIndex","outs","kernelConfig","ENV","registerFlag","async","WebAssembly","validate","MessageChannel","port1","postMessage","SharedArrayBuffer","super","this","dataIdNextNumber","tfjs","init","move","numDataIds","f","now","kernelMs","refCount","memoryOffset","numBytes","bytesPerElement","_malloc","registerTensor","byteOffset","Float32Array","typedArrayFromBuffer","force","has","data","delete","dispose","PThread","terminateAllThreads","unreliable","write","getPathToWasmBinary","simdSupported","threadsSupported","wasmModuleFolder","wasmPath","path","wasmFileMap","Promise","all","getAsync","resolve","reject","factoryConfig","locateFile","prefix","endsWith","response","blob","Blob","URL","createObjectURL","wasmPathPrefix","customFetch","instantiateWasm","imports","callback","fetch","credentials","then","env","arrayBuffer","binary","instantiate","output","instance","module","initialized","onAbort","initAborted","message","mainScriptUrlOrBlob","toString","wasmBinaryNames","setWasmPaths","prefixOrFileMap","usePlatformFetch","missingPaths","name","join","reactPropsRegex","index","fn","cache","arg","undefined","prop","test","charCodeAt","W","M","d","c","h","q","g","y","C","m","n","K","u","l","r","I","B","J","F","G","replace","N","trim","charAt","substring","ca","O","A","H","X","D","z","da","ea","fa","w","L","P","Y","E","ha","Q","split","ia","Z","ja","ka","aa","ba","la","ma","R","na","oa","S","call","U","use","T","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth"],"mappings":"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","file":"js/bundle~bundle~748942c6.e5bbad19.js","sourcesContent":["export default __webpack_public_path__ + \"wasm/tfjs-backend-wasm.23f1afb1.wasm\";","export default __webpack_public_path__ + \"wasm/tfjs-backend-wasm-simd.6ceec37b.wasm\";","export default __webpack_public_path__ + \"wasm/tfjs-backend-wasm-threaded-simd.7a3d6568.wasm\";","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// This enum must align with the enum defined in cc/backend.h.\nexport var CppDType;\n(function (CppDType) {\n    CppDType[CppDType[\"float32\"] = 0] = \"float32\";\n    CppDType[CppDType[\"int32\"] = 1] = \"int32\";\n    CppDType[CppDType[\"bool\"] = 2] = \"bool\";\n    CppDType[CppDType[\"string\"] = 3] = \"string\";\n    CppDType[CppDType[\"complex64\"] = 4] = \"complex64\";\n})(CppDType || (CppDType = {}));\n// Must match enum in cc/fusable_activations.h.\nexport var FusableActivation;\n(function (FusableActivation) {\n    FusableActivation[FusableActivation[\"linear\"] = 0] = \"linear\";\n    FusableActivation[FusableActivation[\"relu\"] = 1] = \"relu\";\n    FusableActivation[FusableActivation[\"relu6\"] = 2] = \"relu6\";\n    FusableActivation[FusableActivation[\"prelu\"] = 3] = \"prelu\";\n    FusableActivation[FusableActivation[\"leakyrelu\"] = 4] = \"leakyrelu\";\n    FusableActivation[FusableActivation[\"sigmoid\"] = 5] = \"sigmoid\";\n})(FusableActivation || (FusableActivation = {}));\n//# sourceMappingURL=types.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { FusableActivation } from './types';\nlet wasmFusedMatMul;\nfunction setup(backend) {\n    wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction fusedBatchMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b, bias, preluActivationWeights } = inputs;\n    if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n        throw new Error(`_FusedMatMul for non non-float32 tensors not yet supported.`);\n    }\n    const { transposeA, transposeB, activation, leakyreluAlpha } = attrs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n    let biasId = 0;\n    if (bias != null) {\n        const biasData = backend.dataIdMap.get(bias.dataId);\n        if (biasData.shape.length !== 1) {\n            throw new Error(`_FusedMatMul only supports rank-1 bias but got ` +\n                `rank ${biasData.shape.length}.`);\n        }\n        biasId = biasData.id;\n    }\n    const preluActivationWeightsId = preluActivationWeights == null ?\n        0 :\n        backend.dataIdMap.get(preluActivationWeights.dataId).id;\n    const fusedActivation = FusableActivation[activation];\n    if (fusedActivation == null) {\n        throw new Error(`${activation} activation not yet supported for FusedConv2D ` +\n            `in the wasm backend.`);\n    }\n    const leftDim = transposeA ? a.shape[2] : a.shape[1];\n    const rightDim = transposeB ? b.shape[1] : b.shape[2];\n    const batchDim = a.shape[0];\n    const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    wasmFusedMatMul(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n    return out;\n}\nexport const fusedMatMulConfig = {\n    kernelName: _FusedMatMul,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedBatchMatMul\n};\n//# sourceMappingURL=_FusedMatMul.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function createUnaryKernelConfig(kernelName) {\n    let wasmFunc;\n    function setupFunc(backend) {\n        wasmFunc =\n            backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\n    }\n    function kernelFunc(args) {\n        const { backend, inputs: { x } } = args;\n        const xId = backend.dataIdMap.get(x.dataId).id;\n        const out = backend.makeOutput(x.shape, x.dtype);\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        // Short-circuit zero-sized tensors.\n        if (util.sizeFromShape(out.shape) === 0) {\n            return out;\n        }\n        wasmFunc(xId, outId);\n        return out;\n    }\n    return { kernelName, backendName: 'wasm', setupFunc, kernelFunc };\n}\n//# sourceMappingURL=unary_kernel.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const absConfig = createUnaryKernelConfig(Abs);\n//# sourceMappingURL=Abs.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nexport function createBinaryKernelConfig(kernelName, supportsFullBroadcast, dtype) {\n    let wasmFunc;\n    function setupFunc(backend) {\n        wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n            'number',\n            'array',\n            'number',\n            'number',\n            'array',\n            'number',\n            'number',\n            'number' // out_id\n        ]);\n    }\n    function kernelFunc(args) {\n        const { backend, inputs } = args;\n        const { a, b } = inputs;\n        const aId = backend.dataIdMap.get(a.dataId).id;\n        const bId = backend.dataIdMap.get(b.dataId).id;\n        const outputType = dtype != null ? dtype : a.dtype;\n        const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        const out = backend.makeOutput(newShape, outputType);\n        // Short-circuit zero-sized tensors.\n        if (util.sizeFromShape(newShape) === 0) {\n            return out;\n        }\n        const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n        const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        const kernelFunc = () => wasmFunc(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, CppDType[a.dtype], outId);\n        // Currently only some float operations support full broadcast.\n        if (supportsFullBroadcast && a.dtype === 'float32') {\n            kernelFunc();\n            return out;\n        }\n        const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n        const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n        const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n        const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n        if (loopsOverAllOfA && loopsOverAllOfB) {\n            kernelFunc();\n            return out;\n        }\n        else {\n            throw new Error(`Broadcasting along outer dims is not yet ` +\n                `supported for ${a.dtype} ${kernelName}.`);\n        }\n    }\n    return { kernelName, backendName: 'wasm', setupFunc, kernelFunc };\n}\n//# sourceMappingURL=binary_kernel.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const addConfig = createBinaryKernelConfig(Add, supportsFullBroadcast);\n//# sourceMappingURL=Add.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmFunc;\nfunction setupFunc(backend) {\n    wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n        'array',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction addn(args) {\n    const { inputs, backend } = args;\n    const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n        return out;\n    }\n    const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n    const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n    return out;\n}\nexport const addNConfig = {\n    kernelName: AddN,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc: addn,\n};\n//# sourceMappingURL=AddN.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Identity } from '@tensorflow/tfjs-core';\nexport function identity(args) {\n    const { inputs: { x }, backend } = args;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const inVals = backend.typedArrayFromHeap(x);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.set(inVals);\n    return out;\n}\nexport const identityConfig = {\n    kernelName: Identity,\n    backendName: 'wasm',\n    kernelFunc: identity,\n};\n//# sourceMappingURL=Identity.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nimport { CppDType } from './types';\nlet wasmTranspose;\nfunction setup(backend) {\n    wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n    ]);\n}\nexport function transpose(args) {\n    const { inputs, backend, attrs } = args;\n    // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n    // better due to simpler memory access pattern.\n    const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n    let permIsNoOp = true;\n    for (let i = 0; i < perm.length; i++) {\n        if (perm[i] !== i) {\n            permIsNoOp = false;\n        }\n    }\n    const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n    const x = {\n        dataId: inputs.x.dataId,\n        shape: reducedShape,\n        dtype: inputs.x.dtype\n    };\n    if (permIsNoOp) {\n        const cloned = identity({ inputs, backend });\n        cloned.shape = outShape;\n        return cloned;\n    }\n    const out = backend.makeOutput(outShape, x.dtype);\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n    const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    wasmTranspose(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes, perm.length);\n    return out;\n}\nfunction computeOutShape(inShape, perm) {\n    const outShape = new Array(inShape.length);\n    for (let i = 0; i < outShape.length; i++) {\n        outShape[i] = inShape[perm[i]];\n    }\n    return outShape;\n}\nfunction removeOneSizeDims(shape, perm) {\n    const newShape = [];\n    const newPerm = [];\n    for (let i = 0; i < shape.length; ++i) {\n        if (shape[i] !== 1) {\n            newShape.push(shape[i]);\n        }\n        if (shape[perm[i]] !== 1) {\n            newPerm.push(perm[i]);\n        }\n    }\n    for (let i = 0; i < newPerm.length; ++i) {\n        let minValIdx = -1;\n        for (let j = 0; j < newPerm.length; ++j) {\n            if (newPerm[j] >= i &&\n                (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n                minValIdx = j;\n            }\n        }\n        newPerm[minValIdx] = i;\n    }\n    return [newShape, newPerm];\n}\nexport const transposeConfig = {\n    kernelName: Transpose,\n    backendName: 'wasm',\n    kernelFunc: transpose,\n    setupFunc: setup,\n};\n//# sourceMappingURL=Transpose.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { transpose } from './Transpose';\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(x, axis, backend) {\n    const xShape = x.shape;\n    const xRank = x.shape.length;\n    const originalAxes = util.parseAxisParam(axis, xShape);\n    let axes = originalAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let xTransposed = null;\n    let inputWasTransposed = false;\n    if (permutedAxes != null) {\n        const newShape = new Array(xRank);\n        for (let i = 0; i < newShape.length; i++) {\n            newShape[i] = xShape[permutedAxes[i]];\n        }\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n        xTransposed =\n            transpose({ inputs: { x }, attrs: { perm: permutedAxes }, backend });\n        const xId = backend.dataIdMap.get(x.dataId).id;\n        const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n        if (transposedId !== xId) {\n            inputWasTransposed = true;\n        }\n    }\n    return { transposed: xTransposed, originalAxes, axes, inputWasTransposed };\n}\n//# sourceMappingURL=kernel_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmAll;\nfunction setup(backend) {\n    wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\nfunction all(args) {\n    const { backend, inputs, attrs } = args;\n    const { axis, keepDims } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, originalAxes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        input = transposed;\n        inputId = transposedId;\n    }\n    const inputRank = input.shape.length;\n    backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, x.dtype);\n    if (util.sizeFromShape(input.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmAll(inputId, reduceSize, outId);\n    }\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    if (keepDims) {\n        // reshape\n        const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n        out.shape = newShape;\n    }\n    return out;\n}\nexport const allConfig = {\n    kernelName: All,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: all\n};\n//# sourceMappingURL=All.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any, backend_util, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmAny;\nfunction setup(backend) {\n    wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\nfunction any(args) {\n    const { backend, inputs, attrs } = args;\n    const { axis, keepDims } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, originalAxes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        input = transposed;\n        inputId = transposedId;\n    }\n    const inputRank = input.shape.length;\n    backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, x.dtype);\n    if (util.sizeFromShape(input.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmAny(inputId, reduceSize, outId);\n    }\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    if (keepDims) {\n        // reshape\n        const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n        out.shape = newShape;\n    }\n    return out;\n}\nexport const anyConfig = {\n    kernelName: Any,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: any\n};\n//# sourceMappingURL=Any.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nimport { CppDType } from './types';\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction argmax(args) {\n    const { backend, inputs, attrs } = args;\n    const { axis } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        if (transposedId !== xId) {\n            // transpose was not a no-op. We will need to dispose of this\n            // once we are done.\n            input = transposed;\n            inputId = transposedId;\n        }\n    }\n    const outShape = input.shape.slice(0, -1);\n    const out = backend.makeOutput(outShape, 'int32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const outerSize = util.sizeFromShape(out.shape);\n    const innerSize = input.shape[axes[0]];\n    wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    return out;\n}\nexport const argMaxConfig = {\n    kernelName: ArgMax,\n    backendName: 'wasm',\n    kernelFunc: argmax,\n    setupFunc: setup\n};\n//# sourceMappingURL=ArgMax.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util } from '@tensorflow/tfjs-core';\nlet wasmAvgPool;\nfunction setup(backend) {\n    wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction avgPool(args) {\n    const { inputs, attrs, backend } = args;\n    const x = inputs.x;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const channels = convInfo.inChannels;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n        throw new Error(`was backend only supports average pooling with dilation = [1, 1], ` +\n            `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAvgPool(xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels, outId);\n    return out;\n}\nexport const avgPoolConfig = {\n    kernelName: AvgPool,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: avgPool\n};\n//# sourceMappingURL=AvgPool.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nexport function reshape(args) {\n    const { inputs, attrs } = args;\n    const { x } = inputs;\n    const { shape } = attrs;\n    const xSize = util.sizeFromShape(x.shape);\n    const $shape = util.inferFromImplicitShape(shape, xSize);\n    util.assert(xSize === util.sizeFromShape($shape), () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n        `shape must have the same number of elements.`);\n    // Backend needs to track refCount for the dataId for reshape op\n    args.backend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: $shape, dtype: x.dtype };\n}\nexport const reshapeConfig = {\n    kernelName: Reshape,\n    backendName: 'wasm',\n    kernelFunc: reshape,\n};\n//# sourceMappingURL=Reshape.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nlet wasmBatchMatMul;\nfunction setup(backend) {\n    wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction batchMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b } = inputs;\n    const { transposeA, transposeB } = attrs;\n    if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n        throw new Error(`BatchMatMul for non non-float32 tensors not yet supported.`);\n    }\n    const aRank = a.shape.length;\n    const bRank = b.shape.length;\n    const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n    const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n    const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n    const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n    const outerDimsA = a.shape.slice(0, -2);\n    const outerDimsB = b.shape.slice(0, -2);\n    const batchDimA = util.sizeFromShape(outerDimsA);\n    const batchDimB = util.sizeFromShape(outerDimsB);\n    const batchDimsCompatible = batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n    util.assert(aRank >= 2 && bRank >= 2 && batchDimsCompatible, () => `Error in matMul: the input batch dimensions must either be the ` +\n        `same or at least one input batch dimension must be 1. Got input ` +\n        `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\n    const outShapeOuterDims = batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n    const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n    util.assert(innerShapeA === innerShapeB, () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n        `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n        `${b.shape} and transposeA=${transposeA}` +\n        ` and transposeB=${transposeB} must match.`);\n    const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n        [batchDimA, outerShapeA, innerShapeA];\n    const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n        [batchDimB, innerShapeB, outerShapeB];\n    // The rest of the implementation is designed to operate on rank-3 tensors\n    const a3d = reshape({ inputs: { x: a }, backend, attrs: { shape: a3dShape } });\n    const b3d = reshape({ inputs: { x: b }, backend, attrs: { shape: b3dShape } });\n    const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n    const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n    const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n    const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n    const batchDim = Math.max(batchDimA, batchDimB);\n    const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n    wasmBatchMatMul(a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes, b3d.shape.length, transposeA, transposeB, outId);\n    backend.disposeData(a3d.dataId);\n    backend.disposeData(b3d.dataId);\n    out.shape = outShape;\n    return out;\n}\nexport const batchMatMulConfig = {\n    kernelName: BatchMatMul,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: batchMatMul\n};\n//# sourceMappingURL=BatchMatMul.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cast } from '@tensorflow/tfjs-core';\nexport function cast(args) {\n    const { inputs: { x }, attrs: { dtype }, backend } = args;\n    const out = backend.makeOutput(x.shape, dtype);\n    const inVals = backend.typedArrayFromHeap(x);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.set(inVals);\n    return out;\n}\nexport const castConfig = {\n    kernelName: Cast,\n    backendName: 'wasm',\n    kernelFunc: cast,\n};\n//# sourceMappingURL=Cast.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Ceil } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const ceilConfig = createUnaryKernelConfig(Ceil);\n//# sourceMappingURL=Ceil.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '@tensorflow/tfjs-core';\nlet wasmClip;\nfunction setup(backend) {\n    wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction clip(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { clipValueMin, clipValueMax } = attrs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmClip(xId, clipValueMin, clipValueMax, outId);\n    return out;\n}\nexport const clipByValueConfig = {\n    kernelName: ClipByValue,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: clip\n};\n//# sourceMappingURL=ClipByValue.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Concat, util } from '@tensorflow/tfjs-core';\nimport { concatImplCPU } from '../kernel_utils/shared';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape';\nexport function concat(args) {\n    const { inputs, backend } = args;\n    const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n    let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n    // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n    const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n    if ($inputs.length === 1) {\n        return identity({ inputs: { x: $inputs[0] }, backend });\n    }\n    const out = backend.makeOutput(outShape, inputs[0].dtype);\n    if (util.sizeFromShape(outShape) === 0) {\n        return out;\n    }\n    const shapes = $inputs.map(t => t.shape);\n    backend_util.assertParamsConsistent(shapes, axis);\n    if ($inputs[0].dtype === 'string') {\n        // Any concat of n-dimensional tensors across any axis can be reduced to\n        // a concatenation of two-dimensional tensors across the axis 1 by first\n        // partitioning the axes of the original tensors into those less than the\n        // axis to be concatenated and the rest. Then reshape the tensors\n        // into a two-dimensional tensor by collapsing these two sets of axes and\n        // concatenate the resulting matrices across the axis 1, finally reshaping\n        // the result to have the proper shape.\n        const inputs2D = $inputs.map(t => {\n            const innerSize = util.sizeFromShape(t.shape.slice(axis));\n            const shape = [-1, innerSize];\n            return reshape({ inputs: { x: t }, backend, attrs: { shape } });\n        });\n        const inputsValShapes = inputs2D.map(t => {\n            return { vals: backend.readSync(t.dataId), shape: t.shape };\n        });\n        // Concats 2d tensors along axis=1.\n        outShape =\n            backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n        const simplyConcat = inputs2D[0].shape[0] === 1;\n        const outVals = concatImplCPU(inputsValShapes, outShape, inputs[0].dtype, simplyConcat);\n        const finalOutShape = backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n        out.shape = finalOutShape;\n        const outData = backend.dataIdMap.get(out.dataId);\n        outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n        inputs2D.forEach(t => backend.disposeData(t.dataId));\n        return out;\n    }\n    const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n    let sumInnerDims = 0;\n    const innerDims = $inputs.map(input => {\n        const innerDim = util.sizeFromShape(input.shape.slice(axis));\n        sumInnerDims += innerDim;\n        return innerDim;\n    });\n    const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n    const outVals = backend.typedArrayFromHeap(out);\n    for (let b = 0; b < batchDim; b++) {\n        let outOffset = b * sumInnerDims;\n        for (let i = 0; i < inVals.length; i++) {\n            const innerDim = innerDims[i];\n            const inOffset = b * innerDim;\n            const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n            outVals.set(vals, outOffset);\n            outOffset += innerDim;\n        }\n    }\n    return out;\n}\nexport const concatConfig = {\n    kernelName: Concat,\n    backendName: 'wasm',\n    kernelFunc: concat,\n};\n//# sourceMappingURL=Concat.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nexport function concatImpl(inputs, outShape, dtype, simplyConcat) {\n    const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n    if (simplyConcat && dtype !== 'string') {\n        // Use built-in TypedArray.set() method for speed.\n        let offset = 0;\n        inputs.forEach(input => {\n            const size = util.sizeFromShape(input.shape);\n            outVals.set(input.vals, offset);\n            offset += size;\n        });\n    }\n    else {\n        let colOffset = 0;\n        inputs.forEach(input => {\n            const decodedData = dtype === 'string' ?\n                backend_util.fromUint8ToStringArray(input.vals) :\n                input.vals;\n            let tIdx = 0;\n            for (let row = 0; row < input.shape[0]; ++row) {\n                const resIdx = row * outShape[1] + colOffset;\n                for (let col = 0; col < input.shape[1]; ++col) {\n                    outVals[resIdx + col] = decodedData[tIdx++];\n                }\n            }\n            colOffset += input.shape[1];\n        });\n    }\n    return outVals;\n}\n//# sourceMappingURL=Concat_impl.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2D } from '@tensorflow/tfjs-core';\nlet wasmConv2d;\nfunction setup(backend) {\n    wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction conv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { x, filter } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const { strides, dilations, pad, dimRoundingMode, dataFormat } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false, $dataFormat);\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const outputChannels = convInfo.outChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend Conv2D does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmConv2d(xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n    return out;\n}\nexport const conv2DConfig = {\n    kernelName: Conv2D,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: conv2d\n};\n//# sourceMappingURL=Conv2D.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput, util } from '@tensorflow/tfjs-core';\nlet wasmConv2DBackpropInput;\nfunction setup(backend) {\n    wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction conv2DBackpropInput(args) {\n    const { backend, inputs, attrs } = args;\n    const { dy, filter } = inputs;\n    const { strides, pad, dataFormat, dimRoundingMode, inputShape } = attrs;\n    const dilations = 1;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    const { batchSize, filterHeight, filterWidth, inChannels, inHeight, inWidth, outChannels, outHeight, outWidth, strideHeight, strideWidth } = convInfo;\n    const topPad = filterHeight - 1 - convInfo.padInfo.top;\n    const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n    const dxStrides = util.computeStrides(convInfo.inShape);\n    const dyStrides = util.computeStrides(dy.shape);\n    const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n    const xBatchStride = dxStrides[0];\n    const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n    const xColStride = isChannelsLast ? dxStrides[2] : 1;\n    const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n    const yBatchStride = dyStrides[0];\n    const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n    const yColStride = isChannelsLast ? dyStrides[2] : 1;\n    const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n    const out = backend.makeOutput(convInfo.inShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const dyId = backend.dataIdMap.get(dy.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    wasmConv2DBackpropInput(dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth, inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth, topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride, xColStride, xChannelStride, yBatchStride, yRowStride, yColStride, yChannelStride, outId);\n    return out;\n}\nexport const conv2DBackpropInputConfig = {\n    kernelName: Conv2DBackpropInput,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: conv2DBackpropInput\n};\n//# sourceMappingURL=Conv2DBackpropInput.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cos } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const cosConfig = createUnaryKernelConfig(Cos);\n//# sourceMappingURL=Cos.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { CropAndResize } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\n// Must match enum in CropAndResize.cc\nvar InterpolationMethod;\n(function (InterpolationMethod) {\n    InterpolationMethod[InterpolationMethod[\"bilinear\"] = 0] = \"bilinear\";\n    InterpolationMethod[InterpolationMethod[\"nearest\"] = 1] = \"nearest\";\n})(InterpolationMethod || (InterpolationMethod = {}));\nlet wasmCropAndResize;\nfunction setup(backend) {\n    wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // out id\n    ]);\n}\nfunction cropAndResize(args) {\n    const { backend, inputs, attrs } = args;\n    const { method, extrapolationValue, cropSize } = attrs;\n    const { image, boxes, boxInd } = inputs;\n    const numBoxes = boxes.shape[0];\n    const [cropHeight, cropWidth] = cropSize;\n    const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n    let imagesData = backend.dataIdMap.get(image.dataId);\n    let castedData;\n    if (image.dtype !== 'float32') {\n        castedData = cast({ backend, inputs: { x: image }, attrs: { dtype: 'float32' } });\n        imagesData = backend.dataIdMap.get(castedData.dataId);\n    }\n    const imagesId = imagesData.id;\n    const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n    const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n    const out = backend.makeOutput(outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n    wasmCropAndResize(imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight, cropWidth, InterpolationMethod[method], extrapolationValue, outId);\n    if (castedData != null) {\n        backend.disposeData(castedData.dataId);\n    }\n    return out;\n}\nexport const cropAndResizeConfig = {\n    kernelName: CropAndResize,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: cropAndResize\n};\n//# sourceMappingURL=CropAndResize.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Cumsum, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nimport { transpose } from './Transpose';\nlet wasmCumsum;\nfunction setup(backend) {\n    wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // dtype\n    ]);\n}\nexport function cumsum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, exclusive, reverse } = attrs;\n    const xRank = x.shape.length;\n    util.assert(x.dtype === 'float32' || x.dtype === 'int32', () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n    // permute required axis to inner most axis\n    const permutation = backend_util.getAxesPermutation([axis], xRank);\n    let permutedX = x;\n    if (permutation !== null) {\n        permutedX = transpose({ inputs: { x }, attrs: { perm: permutation }, backend });\n    }\n    const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n    backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n    const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n    const finalDim = permutedX.shape[permutedAxis];\n    const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n    const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n    wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim, permutedOutId, CppDType[x.dtype]);\n    // transpose data back if permuted\n    let out = permutedOut;\n    if (permutation !== null) {\n        const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n        out = transpose({ inputs: { x: permutedOut }, attrs: { perm: undoPermutation }, backend });\n        backend.disposeData(permutedX.dataId);\n        backend.disposeData(permutedOut.dataId);\n    }\n    return out;\n}\nexport const cumsumConfig = {\n    kernelName: Cumsum,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: cumsum\n};\n//# sourceMappingURL=Cumsum.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace, util } from '@tensorflow/tfjs-core';\nlet wasmDepthToSpace;\nfunction setup(backend) {\n    wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'array',\n        'array',\n        'number',\n        'number',\n    ]);\n}\nexport function depthToSpace(args) {\n    const { backend, inputs, attrs } = args;\n    const { x } = inputs;\n    const { blockSize, dataFormat } = attrs;\n    util.assert(blockSize > 1, () => `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n    const batchSize = x.shape[0];\n    const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n    const outputHeight = inputHeight * blockSize;\n    const outputWidth = inputWidth * blockSize;\n    const outputDepth = inputDepth / (blockSize * blockSize);\n    const outputShape = (dataFormat === 'NHWC') ?\n        [batchSize, outputHeight, outputWidth, outputDepth] :\n        [batchSize, outputDepth, outputHeight, outputWidth];\n    const out = backend.makeOutput(outputShape, 'float32');\n    const xData = backend.dataIdMap.get(x.dataId);\n    const xId = xData.id;\n    const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n    const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n    wasmDepthToSpace(xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1, outputShapeBytes, outStridesBytes, outputShape.length, outId);\n    return out;\n}\nexport const depthToSpaceConfig = {\n    kernelName: DepthToSpace,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: depthToSpace\n};\n//# sourceMappingURL=DepthToSpace.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNative } from '@tensorflow/tfjs-core';\nlet wasmDepthwiseConv2d;\nfunction setup(backend) {\n    wasmDepthwiseConv2d =\n        backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n        ]);\n}\nfunction depthwiseConv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { x, filter } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const { strides, dilations, pad, dimRoundingMode } = attrs;\n    const $dilations = dilations == null ? [1, 1] : dilations;\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const outputChannels = convInfo.outChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmDepthwiseConv2d(xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n    return out;\n}\nexport const depthwiseConv2dNativeConfig = {\n    kernelName: DepthwiseConv2dNative,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: depthwiseConv2d\n};\n//# sourceMappingURL=DepthwiseConv2dNative.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Equal } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const equalConfig = createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n//# sourceMappingURL=Equal.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const expConfig = createUnaryKernelConfig(Exp);\n//# sourceMappingURL=Exp.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ExpandDims, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nexport function expandDims(args) {\n    const { inputs, attrs, backend } = args;\n    const { input } = inputs;\n    const { dim } = attrs;\n    const inputRank = input.shape.length;\n    const newShape = input.shape.slice();\n    let $dim = dim;\n    if (dim < 0) {\n        // Negative value is counted from the tail of rank.\n        util.assert(-(inputRank + 1) <= dim, () => `Axis must be in the interval [${-(inputRank + 1)}, ${inputRank}]`);\n        $dim = inputRank + dim + 1;\n    }\n    newShape.splice($dim, 0, 1);\n    return reshape({ inputs: { x: input }, backend, attrs: { shape: newShape } });\n}\nexport const expandDimsConfig = {\n    kernelName: ExpandDims,\n    backendName: 'wasm',\n    kernelFunc: expandDims,\n};\n//# sourceMappingURL=ExpandDims.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill } from '@tensorflow/tfjs-core';\nfunction fill(args) {\n    const { attrs: { shape, value, dtype }, backend } = args;\n    const out = backend.makeOutput(shape, dtype);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.fill(value);\n    return out;\n}\nexport const fillConfig = {\n    kernelName: Fill,\n    backendName: 'wasm',\n    kernelFunc: fill,\n};\n//# sourceMappingURL=Fill.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FlipLeftRight } from '@tensorflow/tfjs-core';\nlet wasmFlipLeftRight;\nfunction setup(backend) {\n    wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nexport function flipLeftRight(args) {\n    const { inputs, backend } = args;\n    const { image } = inputs;\n    const out = backend.makeOutput(image.shape, image.dtype);\n    const imageId = backend.dataIdMap.get(image.dataId).id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    wasmFlipLeftRight(imageId, batch, imageHeight, imageWidth, numChannels, outId);\n    return out;\n}\nexport const flipLeftRightConfig = {\n    kernelName: FlipLeftRight,\n    backendName: 'wasm',\n    kernelFunc: flipLeftRight,\n    setupFunc: setup\n};\n//# sourceMappingURL=FlipLeftRight.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Floor } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const floorConfig = createUnaryKernelConfig(Floor);\n//# sourceMappingURL=Floor.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FloorDiv } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const floorDivConfig = createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n//# sourceMappingURL=FloorDiv.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedBatchNorm, util } from '@tensorflow/tfjs-core';\nlet wasmBatchNorm;\nfunction setup(backend) {\n    wasmBatchNorm = backend.wasm.cwrap(FusedBatchNorm, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\nfunction fusedBatchNorm(args) {\n    const { backend, inputs, attrs } = args;\n    const { varianceEpsilon } = attrs;\n    const { x, mean, variance, offset, scale } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const meanId = backend.dataIdMap.get(mean.dataId).id;\n    const varianceId = backend.dataIdMap.get(variance.dataId).id;\n    const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n    const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(x.shape) === 0) {\n        return out;\n    }\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmBatchNorm(xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n    return out;\n}\nexport const fusedBatchNormConfig = {\n    kernelName: FusedBatchNorm,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedBatchNorm\n};\n//# sourceMappingURL=FusedBatchNorm.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, FusedConv2D } from '@tensorflow/tfjs-core';\nimport { FusableActivation } from './types';\nlet wasmFusedConv2d;\nfunction setup(backend) {\n    wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction fusedConv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dilations, dataFormat, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode);\n    const fusedActivation = FusableActivation[activation];\n    if (fusedActivation == null) {\n        throw new Error(`${activation} activation not yet supported for FusedConv2D ` +\n            `in the wasm backend.`);\n    }\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const outputChannels = convInfo.outChannels;\n    let biasId = 0;\n    if (bias != null) {\n        const biasData = backend.dataIdMap.get(bias.dataId);\n        if (biasData.shape.length !== 1) {\n            throw new Error(`FusedConv2D only supports rank-1 bias but got ` +\n                `rank ${biasData.shape.length}.`);\n        }\n        if (biasData.shape[0] !== outputChannels) {\n            throw new Error(`FusedConv2D bias shape (${biasData.shape}) does not ` +\n                `match the number of output channels (${outputChannels})`);\n        }\n        biasId = biasData.id;\n    }\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    const batchSize = convInfo.batchSize;\n    const inHeight = convInfo.inHeight;\n    const inWidth = convInfo.inWidth;\n    if (dataFormat !== 'NHWC') {\n        throw new Error(`wasm backend FusedConv2D does not support dataFormat:'` +\n            `${dataFormat}'. Please use 'NHWC'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const preluActivationWeightsId = preluActivationWeights == null ?\n        0 :\n        backend.dataIdMap.get(preluActivationWeights.dataId).id;\n    wasmFusedConv2d(xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth, biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n    return out;\n}\nexport const fusedConv2DConfig = {\n    kernelName: FusedConv2D,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedConv2d\n};\n//# sourceMappingURL=FusedConv2D.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, FusedDepthwiseConv2D } from '@tensorflow/tfjs-core';\nimport { FusableActivation } from './types';\nlet wasmFusedDepthwiseConv2d;\nfunction setup(backend) {\n    wasmFusedDepthwiseConv2d =\n        backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n        ]);\n}\nfunction fusedDepthwiseConv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dilations, dataFormat, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const fusedActivation = FusableActivation[activation];\n    if (fusedActivation == null) {\n        throw new Error(`${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n            `in the wasm backend.`);\n    }\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const outputChannels = convInfo.outChannels;\n    let biasId = 0;\n    if (bias != null) {\n        const biasData = backend.dataIdMap.get(bias.dataId);\n        if (biasData.shape.length !== 1) {\n            throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n                `rank ${biasData.shape.length}.`);\n        }\n        if (biasData.shape[0] !== outputChannels) {\n            throw new Error(`FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n                `match the number of output channels (${outputChannels})`);\n        }\n        biasId = biasData.id;\n    }\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    const batchSize = convInfo.batchSize;\n    const inHeight = convInfo.inHeight;\n    const inWidth = convInfo.inWidth;\n    if (dataFormat !== 'NHWC') {\n        throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n            `${dataFormat}'. Please use 'NHWC'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const preluActivationWeightsId = preluActivationWeights == null ?\n        0 :\n        backend.dataIdMap.get(preluActivationWeights.dataId).id;\n    wasmFusedDepthwiseConv2d(xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth, biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n    return out;\n}\nexport const fusedDepthwiseConv2DConfig = {\n    kernelName: FusedDepthwiseConv2D,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedDepthwiseConv2d\n};\n//# sourceMappingURL=FusedDepthwiseConv2D.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { gather_util, GatherNd } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmGatherNd;\nfunction setup(backend) {\n    wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number' // outId\n    ]);\n}\nfunction gatherNd(args) {\n    const { backend, inputs } = args;\n    const { params, indices } = inputs;\n    const [resultShape, numSlices, sliceSize, strides] = gather_util.prepareAndValidate(params, indices);\n    const out = backend.makeOutput(resultShape, params.dtype);\n    if (numSlices === 0) {\n        return out;\n    }\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    const xData = backend.dataIdMap.get(params.dataId);\n    const xId = xData.id;\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmGatherNd(xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize, stridesBytes, outId);\n    return out;\n}\nexport const gatherNdConfig = {\n    kernelName: GatherNd,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: gatherNd\n};\n//# sourceMappingURL=GatherNd.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherV2, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { CppDType } from './types';\nlet wasmGather;\nfunction setup(backend) {\n    wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number' // outId\n    ]);\n}\nfunction gatherV2(args) {\n    const { backend, inputs, attrs } = args;\n    const { x, indices } = inputs;\n    const { axis, batchDims } = attrs;\n    const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n    const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, batchDims);\n    const flattenX = reshape({\n        inputs: { x },\n        attrs: {\n            shape: [\n                shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n                shapeInfo.sliceSize\n            ]\n        },\n        backend\n    });\n    const indicesSize = util.sizeFromShape(indices.shape);\n    const flattenIndex = reshape({\n        inputs: { x: indices },\n        attrs: { shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize] },\n        backend\n    });\n    const flattenOutputShape = [\n        shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n        shapeInfo.sliceSize\n    ];\n    const out = backend.makeOutput(flattenOutputShape, x.dtype);\n    if (util.sizeFromShape(x.shape) === 0) {\n        return out;\n    }\n    const stridesSize = flattenX.shape.length - 1;\n    const xData = backend.dataIdMap.get(flattenX.dataId);\n    const xId = xData.id;\n    const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n    const indicesId = indicesData.id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n    const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n    wasmGather(xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId, shapeInfo.batchSize, outStridesBytes, outId);\n    backend.disposeData(flattenX.dataId);\n    backend.disposeData(flattenIndex.dataId);\n    // reshape\n    out.shape = shapeInfo.outputShape;\n    return out;\n}\nexport const gatherV2Config = {\n    kernelName: GatherV2,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: gatherV2\n};\n//# sourceMappingURL=GatherV2.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Greater } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const greaterConfig = createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n//# sourceMappingURL=Greater.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GreaterEqual } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig = createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n//# sourceMappingURL=GreaterEqual.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu, util } from '@tensorflow/tfjs-core';\nlet wasmFunc;\nfunction setupFunc(backend) {\n    wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nexport function leakyRelu(args) {\n    const { inputs: { x }, attrs: { alpha }, backend } = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    if (util.sizeFromShape(x.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmFunc(xId, alpha, outId);\n    }\n    return out;\n}\nexport const leakyReluConfig = {\n    kernelName: LeakyRelu,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc: leakyRelu,\n};\n//# sourceMappingURL=LeakyRelu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Less } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig = createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n//# sourceMappingURL=Less.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LessEqual } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig = createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n//# sourceMappingURL=LessEqual.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const logConfig = createUnaryKernelConfig(Log);\n//# sourceMappingURL=Log.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalAnd } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig = createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n//# sourceMappingURL=LogicalAnd.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { Max } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmMax;\nfunction setup(backend) {\n    wasmMax = backend.wasm.cwrap(Max, null /*void*/, ['number, number, number']);\n}\nfunction max(args) {\n    const { backend, inputs, attrs } = args;\n    const { reductionIndices: axis, keepDims } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, originalAxes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        input = transposed;\n        inputId = transposedId;\n    }\n    const inputRank = input.shape.length;\n    backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, x.dtype);\n    if (util.sizeFromShape(input.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmMax(inputId, reduceSize, outId);\n    }\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    if (keepDims) {\n        // reshape\n        const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n        out.shape = newShape;\n    }\n    return out;\n}\nexport const maxConfig = {\n    kernelName: Max,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: max\n};\n//# sourceMappingURL=Max.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig = createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n//# sourceMappingURL=Maximum.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool } from '@tensorflow/tfjs-core';\nlet wasmMaxPool;\nfunction setup(backend) {\n    wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction maxPool(args) {\n    const { inputs, attrs, backend } = args;\n    const x = inputs.x;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const outputChannels = convInfo.outChannels;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMaxPool(xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n    return out;\n}\nexport const maxPoolConfig = {\n    kernelName: MaxPool,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: maxPool\n};\n//# sourceMappingURL=MaxPool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Mean, util } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmMean;\nfunction setup(backend) {\n    wasmMean =\n        backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\nexport function mean(args) {\n    const { backend, inputs, attrs } = args;\n    const { axis, keepDims } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, originalAxes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    let reductionAxes = axes;\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        if (transposedId !== xId) {\n            // transpose was not a no-op. We will need to dispose of this\n            // once we are done.\n            input = transposed;\n            inputId = transposedId;\n            reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, input.shape.length);\n        }\n    }\n    backend_util.assertAxesAreInnerMostDims('mean', reductionAxes, input.shape.length);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    let castedInput = input;\n    if (input.dtype !== 'float32') {\n        castedInput =\n            cast({ backend, inputs: { x: input }, attrs: { dtype: 'float32' } });\n        inputId = backend.dataIdMap.get(castedInput.dataId).id;\n    }\n    const out = backend.makeOutput(outShape, 'float32');\n    if (util.sizeFromShape(input.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmMean(inputId, reduceSize, outId);\n    }\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    if (keepDims) {\n        // reshape\n        const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n        out.shape = newShape;\n    }\n    if (input.dtype !== 'float32') {\n        backend.disposeData(castedInput.dataId);\n    }\n    return out;\n}\nexport const meanConfig = {\n    kernelName: Mean,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: mean\n};\n//# sourceMappingURL=Mean.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Min, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmMin;\nfunction setup(backend) {\n    wasmMin = backend.wasm.cwrap(Min, null /*void*/, ['number, number, number']);\n}\nfunction min(args) {\n    const { backend, inputs, attrs } = args;\n    const { axis, keepDims } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, originalAxes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        if (transposedId !== xId) {\n            // transpose was not a no-op. We will need to dispose of this\n            // once we are done.\n            input = transposed;\n            inputId = transposedId;\n        }\n    }\n    const inputRank = input.shape.length;\n    backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, input.dtype);\n    if (util.sizeFromShape(input.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmMin(inputId, reduceSize, outId);\n    }\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    if (keepDims) {\n        // reshape\n        const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n        out.shape = newShape;\n    }\n    return out;\n}\nexport const minConfig = {\n    kernelName: Min,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: min\n};\n//# sourceMappingURL=Min.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig = createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n//# sourceMappingURL=Minimum.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MirrorPad } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\n// Must match enum in MirrorPad.cc\nvar MirrorPaddingMode;\n(function (MirrorPaddingMode) {\n    MirrorPaddingMode[MirrorPaddingMode[\"reflect\"] = 0] = \"reflect\";\n    MirrorPaddingMode[MirrorPaddingMode[\"symmetric\"] = 1] = \"symmetric\";\n})(MirrorPaddingMode || (MirrorPaddingMode = {}));\nlet wasmMirrorPad;\nfunction setup(backend) {\n    wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'array',\n        'array',\n        'number',\n        'number',\n    ]);\n}\nfunction mirrorPad(args) {\n    const { inputs: { x }, backend, attrs: { paddings, mode } } = args;\n    const outShape = paddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(outShape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n    const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n    const prePaddingsBytes = new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n    const postPaddingsBytes = new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n    wasmMirrorPad(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes, postPaddingsBytes, MirrorPaddingMode[mode], outId);\n    return out;\n}\nexport const mirrorPadConfig = {\n    kernelName: MirrorPad,\n    backendName: 'wasm',\n    kernelFunc: mirrorPad,\n    setupFunc: setup\n};\n//# sourceMappingURL=MirrorPad.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multiply } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const multiplyConfig = createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n//# sourceMappingURL=Multiply.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const negConfig = createUnaryKernelConfig(Neg);\n//# sourceMappingURL=Neg.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(backend, resOffset) {\n    const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n    const pSelectedIndices = result[0];\n    const selectedSize = result[1];\n    const pSelectedScores = result[2];\n    const pValidOutputs = result[3];\n    // Since the result was allocated on the heap, we have to delete it.\n    backend.wasm._free(resOffset);\n    return { pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs };\n}\n//# sourceMappingURL=NonMaxSuppression_util.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nimport { parseResultStruct } from './NonMaxSuppression_util';\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap(NonMaxSuppressionV3, 'number', // Result*\n    [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction kernelFunc(args) {\n    const { backend, inputs, attrs } = args;\n    const { iouThreshold, maxOutputSize, scoreThreshold } = attrs;\n    const { boxes, scores } = inputs;\n    const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n    const scoresId = backend.dataIdMap.get(scores.dataId).id;\n    const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n    const { pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs } = parseResultStruct(backend, resOffset);\n    // Since we are not using scores for V3, we have to delete it from the heap.\n    backend.wasm._free(pSelectedScores);\n    backend.wasm._free(pValidOutputs);\n    const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n    return selectedIndicesTensor;\n}\nexport const nonMaxSuppressionV3Config = {\n    kernelName: NonMaxSuppressionV3,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: kernelFunc,\n};\n//# sourceMappingURL=NonMaxSuppressionV3.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nimport { parseResultStruct } from './NonMaxSuppression_util';\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap(NonMaxSuppressionV4, 'number', // Result*\n    [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'bool',\n    ]);\n}\nfunction nonMaxSuppressionV4(args) {\n    const { backend, inputs, attrs } = args;\n    const { iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize } = attrs;\n    const { boxes, scores } = inputs;\n    const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n    const scoresId = backend.dataIdMap.get(scores.dataId).id;\n    const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n    const { pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs } = parseResultStruct(backend, resOffset);\n    // Since we are not using scores for V4, we have to delete it from the heap.\n    backend.wasm._free(pSelectedScores);\n    const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n    const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n    return [selectedIndicesTensor, validOutputsTensor];\n}\nexport const nonMaxSuppressionV4Config = {\n    kernelName: NonMaxSuppressionV4,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: nonMaxSuppressionV4,\n};\n//# sourceMappingURL=NonMaxSuppressionV4.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nimport { parseResultStruct } from './NonMaxSuppression_util';\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap(NonMaxSuppressionV5, 'number', // Result*\n    [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction kernelFunc(args) {\n    const { backend, inputs, attrs } = args;\n    const { iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma } = attrs;\n    const { boxes, scores } = inputs;\n    const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n    const scoresId = backend.dataIdMap.get(scores.dataId).id;\n    const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    const { pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs } = parseResultStruct(backend, resOffset);\n    // Since we are not using validOutputs for V5, we have to delete it from the\n    // heap.\n    backend.wasm._free(pValidOutputs);\n    const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n    const selectedScoresTensor = backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n    return [selectedIndicesTensor, selectedScoresTensor];\n}\nexport const nonMaxSuppressionV5Config = {\n    kernelName: NonMaxSuppressionV5,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: kernelFunc,\n};\n//# sourceMappingURL=NonMaxSuppressionV5.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NotEqual } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig = createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n//# sourceMappingURL=NotEqual.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot } from '@tensorflow/tfjs-core';\nlet wasmOneHot;\nfunction setup(backend) {\n    wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction oneHot(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices } = inputs;\n    const { depth, onValue, offValue } = attrs;\n    const out = backend.makeOutput([...indices.shape, depth], 'int32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    wasmOneHot(indicesId, depth, onValue, offValue, outId);\n    return out;\n}\nexport const oneHotConfig = {\n    kernelName: OneHot,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: oneHot,\n};\n//# sourceMappingURL=OneHot.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OnesLike } from '@tensorflow/tfjs-core';\nfunction onesLike(args) {\n    const { inputs: { x }, backend } = args;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.fill(1);\n    return out;\n}\nexport const onesLikeConfig = {\n    kernelName: OnesLike,\n    backendName: 'wasm',\n    kernelFunc: onesLike,\n};\n//# sourceMappingURL=OnesLike.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    if (inputs.length === 1) {\n        return expandDims({ inputs: { input: inputs[0] }, backend, attrs: { dim: axis } });\n    }\n    const shape = inputs[0].shape;\n    const dtype = inputs[0].dtype;\n    inputs.forEach(t => {\n        util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n    });\n    const intermediateTensorInfos = [];\n    const expandedTensors = inputs.map(t => {\n        const expandedT = expandDims({ inputs: { input: t }, backend, attrs: { dim: axis } });\n        intermediateTensorInfos.push(expandedT);\n        return expandedT;\n    });\n    const result = concat({ inputs: expandedTensors, backend, attrs: { axis } });\n    intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n    return result;\n}\nexport const packConfig = {\n    kernelName: Pack,\n    backendName: 'wasm',\n    kernelFunc: pack\n};\n//# sourceMappingURL=Pack.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { PadV2 } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmPadV2;\nfunction setup(backend) {\n    wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'array',\n        'array',\n        'number',\n        'number',\n    ]);\n}\nfunction pad(args) {\n    const { inputs: { x }, backend, attrs: { paddings, constantValue } } = args;\n    const outShape = paddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(outShape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n    const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n    const prePaddingsBytes = new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n    const postPaddingsBytes = new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n    wasmPadV2(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes, postPaddingsBytes, constantValue, outId);\n    return out;\n}\nexport const padV2Config = {\n    kernelName: PadV2,\n    backendName: 'wasm',\n    kernelFunc: pad,\n    setupFunc: setup\n};\n//# sourceMappingURL=PadV2.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pow } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig = createBinaryKernelConfig(Pow, supportsFullBroadcast);\n//# sourceMappingURL=Pow.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prelu } from '@tensorflow/tfjs-core';\nlet wasmPrelu;\nfunction setup(backend) {\n    wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction prelu(args) {\n    const { inputs, backend } = args;\n    const { x, alpha } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n    const out = backend.makeOutput(x.shape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmPrelu(xId, weightsId, outId);\n    return out;\n}\nexport const preluConfig = {\n    kernelName: Prelu,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: prelu\n};\n//# sourceMappingURL=Prelu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Prod, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nimport { CppDType } from './types';\nlet wasmProd;\nfunction setup(backend) {\n    wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number'\n    ]);\n}\nfunction prod(args) {\n    const { backend, inputs, attrs } = args;\n    const { axis, keepDims } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, originalAxes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    let reductionAxes = axes;\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        if (transposedId !== xId) {\n            // transpose was not a no-op. We will need to dispose of this\n            // once we are done.\n            input = transposed;\n            inputId = transposedId;\n            reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, input.shape.length);\n        }\n    }\n    backend_util.assertAxesAreInnerMostDims('prod', reductionAxes, input.shape.length);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, input.dtype);\n    if (util.sizeFromShape(input.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n    }\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    if (keepDims) {\n        // reshape\n        const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n        out.shape = newShape;\n    }\n    return out;\n}\nexport const prodConfig = {\n    kernelName: Prod,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: prod\n};\n//# sourceMappingURL=Prod.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImplCPU } from '../kernel_utils/shared';\nexport const range = (args) => {\n    const { backend, attrs } = args;\n    const { start, stop, step, dtype } = attrs;\n    const values = rangeImplCPU(start, stop, step, dtype);\n    const out = backend.makeOutput([values.length], dtype);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.set(values);\n    return out;\n};\nexport const rangeConfig = {\n    kernelName: Range,\n    backendName: 'wasm',\n    kernelFunc: range\n};\n//# sourceMappingURL=Range.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function rangeImpl(start, stop, step, dtype) {\n    const sameStartStop = start === stop;\n    const increasingRangeNegativeStep = start < stop && step < 0;\n    const decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return util.makeZerosTypedArray(0, dtype);\n    }\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\n    const values = util.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=Range_impl.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const realDivConfig = createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n//# sourceMappingURL=RealDiv.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const reluConfig = createUnaryKernelConfig(Relu);\n//# sourceMappingURL=Relu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu6 } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const relu6Config = createUnaryKernelConfig(Relu6);\n//# sourceMappingURL=Relu6.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinear, util } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nlet wasmResizeBilinear;\nfunction setup(backend) {\n    wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // outId\n    ]);\n}\nfunction resizeBilinear(args) {\n    const { backend, inputs, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    const [newHeight, newWidth] = size;\n    const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n    const outShape = [batch, newHeight, newWidth, numChannels];\n    let xData = backend.dataIdMap.get(images.dataId);\n    let castedData;\n    if (xData.dtype !== 'float32') {\n        castedData =\n            cast({ backend, inputs: { x: images }, attrs: { dtype: 'float32' } });\n        xData = backend.dataIdMap.get(castedData.dataId);\n    }\n    const xId = xData.id;\n    const out = backend.makeOutput(outShape, 'float32');\n    if (util.sizeFromShape(images.shape) === 0) {\n        return out;\n    }\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmResizeBilinear(xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth, alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n    if (castedData != null) {\n        backend.disposeData(castedData.dataId);\n    }\n    return out;\n}\nexport const resizeBilinearConfig = {\n    kernelName: ResizeBilinear,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: resizeBilinear\n};\n//# sourceMappingURL=ResizeBilinear.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reverse, util } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape';\nlet wasmReverse;\nfunction setup(backend) {\n    wasmReverse = backend.wasm.cwrap(Reverse, null, [\n        'number',\n        'array',\n        'number',\n        'array',\n        'number',\n        'number' // out_id\n    ]);\n}\nexport function reverse(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dims } = attrs;\n    const axes = util.parseAxisParam(dims, x.shape);\n    if (x.shape.length === 0) {\n        return identity({ inputs: { x }, backend });\n    }\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n    const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    wasmReverse(xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n    const reshaped = reshape({ inputs: { x: out }, attrs: { shape: x.shape }, backend });\n    backend.disposeData(out.dataId);\n    return reshaped;\n}\nexport const reverseConfig = {\n    kernelName: Reverse,\n    backendName: 'wasm',\n    kernelFunc: reverse,\n    setupFunc: setup\n};\n//# sourceMappingURL=Reverse.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nlet wasmRotate;\nfunction setup(backend) {\n    wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n    ]);\n}\nexport function rotateWithOffset(args) {\n    const { inputs, backend, attrs } = args;\n    const { image } = inputs;\n    const { radians, fillValue, center } = attrs;\n    const out = backend.makeOutput(image.shape, image.dtype);\n    const imageId = backend.dataIdMap.get(image.dataId).id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    const [centerX, centerY] = backend_util.getImageCenter(center, imageHeight, imageWidth);\n    const fillIsBlack = fillValue === 0;\n    const fullOpacityValue = 255;\n    const fillValues = typeof fillValue === 'number' ?\n        [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n        [...fillValue, fullOpacityValue];\n    const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n    wasmRotate(imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX, centerY, fillBytes, fillValues.length, outId);\n    return out;\n}\nexport const rotateWithOffsetConfig = {\n    kernelName: RotateWithOffset,\n    backendName: 'wasm',\n    kernelFunc: rotateWithOffset,\n    setupFunc: setup\n};\n//# sourceMappingURL=RotateWithOffset.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const roundConfig = createUnaryKernelConfig(Round);\n//# sourceMappingURL=Round.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const rsqrtConfig = createUnaryKernelConfig(Rsqrt);\n//# sourceMappingURL=Rsqrt.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { scatter_util, ScatterNd, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmScatterNd;\nfunction setup(backend) {\n    wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number' // outId\n    ]);\n}\nfunction scatterNd(args) {\n    const { backend, inputs, attrs } = args;\n    const { indices, updates } = inputs;\n    const { shape } = attrs;\n    const out = backend.makeOutput(shape, updates.dtype);\n    if (util.sizeFromShape(shape) === 0) {\n        return out;\n    }\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = scatter_util.calculateShapes(updates, indices, shape);\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    const updatesData = backend.dataIdMap.get(updates.dataId);\n    const updatesId = updatesData.id;\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmScatterNd(indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates, sliceSize, stridesBytes, outputSize, outId);\n    return out;\n}\nexport const scatterNdConfig = {\n    kernelName: ScatterNd,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: scatterNd\n};\n//# sourceMappingURL=ScatterNd.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, util } from '@tensorflow/tfjs-core';\nlet wasmSelect;\nfunction setup(backend) {\n    wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction select(args) {\n    const { inputs, backend } = args;\n    const { condition, t, e } = inputs;\n    const conditionId = backend.dataIdMap.get(condition.dataId).id;\n    const tId = backend.dataIdMap.get(t.dataId).id;\n    const eId = backend.dataIdMap.get(e.dataId).id;\n    const out = backend.makeOutput(t.shape, t.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const cRank = condition.shape.length;\n    const tRank = t.shape.length;\n    const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n        1 :\n        util.sizeFromShape(t.shape.slice(1));\n    wasmSelect(conditionId, tId, eId, offset, outId);\n    return out;\n}\nexport const selectConfig = {\n    kernelName: Select,\n    backendName: 'wasm',\n    kernelFunc: select,\n    setupFunc: setup\n};\n//# sourceMappingURL=Select.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid, util } from '@tensorflow/tfjs-core';\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\nfunction sigmoid(args) {\n    const { backend, inputs: { x } } = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n        return out;\n    }\n    wasmFunc(xId, outId);\n    return out;\n}\nexport const sigmoidConfig = {\n    kernelName: 'Sigmoid',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: sigmoid\n};\n//# sourceMappingURL=Sigmoid.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sin } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const sinConfig = createUnaryKernelConfig(Sin);\n//# sourceMappingURL=Sin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function sliceImpl(vals, begin, size, shape, dtype) {\n    const isContinous = slice_util.isSliceContinous(shape, begin, size);\n    const length = util.sizeFromShape(size);\n    const xStrides = util.computeStrides(shape);\n    if (isContinous) {\n        const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n        if (dtype === 'string') {\n            return vals.slice(flatOffset, flatOffset + length);\n        }\n        return vals.subarray(flatOffset, flatOffset + length);\n    }\n    const decodedData = dtype === 'string' ?\n        backend_util.fromUint8ToStringArray(vals) :\n        vals;\n    const inBuf = buffer(shape, dtype, decodedData);\n    const outBuf = buffer(size, dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\n    }\n    if (dtype === 'string') {\n        return backend_util.fromStringArrayToUint8(outBuf.values);\n    }\n    return outBuf.values;\n}\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    assertNotComplex(x, 'slice');\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    const vals = backend.data.get(x.dataId).values;\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'cpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { sliceImplCPU } from '../kernel_utils/shared';\nexport function slice(args) {\n    const { inputs: { x }, attrs: { begin, size }, backend } = args;\n    const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n    const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n    const xVals = backend.readSync(x.dataId);\n    const out = backend.makeOutput(size_, x.dtype);\n    const xStrides = util.computeStrides(x.shape);\n    const outData = backend.dataIdMap.get(out.dataId);\n    if (isContinous) {\n        const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n        if (x.dtype === 'string') {\n            outData.stringBytes =\n                xVals\n                    .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n        }\n        else {\n            const outVals = backend.typedArrayFromHeap(out);\n            outVals.set(xVals\n                .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n        }\n        return out;\n    }\n    if (x.dtype === 'string') {\n        const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n        outData.stringBytes = res;\n        return out;\n    }\n    const outVals = backend.typedArrayFromHeap(out);\n    const rank = x.shape.length;\n    if (rank === 2) {\n        slice2d(xVals, xStrides[0], outVals, begin_, size_);\n    }\n    else if (rank === 3) {\n        slice3d(xVals, xStrides[0], xStrides[1], outVals, begin_, size_);\n    }\n    else if (rank === 4) {\n        slice4d(xVals, xStrides[0], xStrides[1], xStrides[2], outVals, begin_, size_);\n    }\n    else {\n        const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n        outVals.set(res);\n    }\n    return out;\n}\nfunction slice2d(xVals, xStride, outVals, begin, size) {\n    let outOffset = 0;\n    const beginI = begin[0];\n    const beginJ = begin[1];\n    const endI = beginI + size[0];\n    for (let i = beginI; i < endI; i++) {\n        const xOffset = i * xStride + beginJ;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n        outOffset += size[1];\n    }\n}\nfunction slice3d(xVals, xStride1, xStride2, outVals, begin, size) {\n    let outOffset = 0;\n    const beginI = begin[0];\n    const beginJ = begin[1];\n    const beginK = begin[2];\n    const endI = beginI + size[0];\n    const endJ = beginJ + size[1];\n    for (let i = beginI; i < endI; i++) {\n        for (let j = beginJ; j < endJ; j++) {\n            const xOffset = i * xStride1 + j * xStride2 + beginK;\n            outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n            outOffset += size[2];\n        }\n    }\n}\nfunction slice4d(xVals, xStride1, xStride2, xStride3, outVals, begin, size) {\n    let outOffset = 0;\n    const beginI = begin[0];\n    const beginJ = begin[1];\n    const beginK = begin[2];\n    const endI = beginI + size[0];\n    const endJ = beginJ + size[1];\n    const endK = beginK + size[2];\n    const beginL = begin[3];\n    for (let i = beginI; i < endI; i++) {\n        for (let j = beginJ; j < endJ; j++) {\n            for (let k = beginK; k < endK; k++) {\n                const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n                outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n                outOffset += size[3];\n            }\n        }\n    }\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'wasm',\n    kernelFunc: slice,\n};\n//# sourceMappingURL=Slice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softmax, util } from '@tensorflow/tfjs-core';\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number' // batch\n    ]);\n}\nfunction softmax(args) {\n    const { backend, inputs: { logits }, attrs: { dim } } = args;\n    const xId = backend.dataIdMap.get(logits.dataId).id;\n    const out = backend.makeOutput(logits.shape, logits.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const channels = logits.shape[dim];\n    const batch = util.sizeFromShape(logits.shape) / channels;\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n        return out;\n    }\n    wasmFunc(xId, outId, channels, batch);\n    return out;\n}\nexport const softmaxConfig = {\n    kernelName: Softmax,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: softmax\n};\n//# sourceMappingURL=Softmax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nlet wasmStep;\nfunction setup(backend) {\n    wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction step(args) {\n    const { backend, inputs, attrs } = args;\n    const { alpha } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmStep(xId, alpha, outId);\n    return out;\n}\nexport const stepConfig = {\n    kernelName: Step,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: step\n};\n//# sourceMappingURL=Step.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, StridedSlice, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nlet wasmStridedSlice;\nfunction setup(backend) {\n    wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n        'number',\n        'array',\n        'number',\n        'array',\n        'array',\n        'array',\n        'array',\n        'array',\n        'number',\n        'number',\n    ]);\n}\nexport function stridedSlice(args) {\n    const { backend, inputs, attrs } = args;\n    const { x } = inputs;\n    let { begin, end, strides } = attrs;\n    if (strides == null) {\n        strides = new Array(begin.length);\n    }\n    const { beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask } = attrs;\n    const ellipsisAxes = backend_util.slice_util.maskToAxes(ellipsisMask);\n    if (ellipsisAxes.length > 1) {\n        throw new Error('Multiple ellipses in slice is not allowed.');\n    }\n    if (ellipsisMask !== 0 && newAxisMask !== 0) {\n        throw new Error('Using both ellipsisMask and newAxisMask is not yet supported.');\n    }\n    if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\n        throw new Error('Using both ellipsisMask and shrinkAxisMask is not yet supported.');\n    }\n    const numInterpolatedAxes = x.shape.length - begin.length;\n    // Expand the dims of x based on the newAxisMask.\n    const expandAxes = backend_util.slice_util.maskToAxes(newAxisMask);\n    const newShape = x.shape.slice();\n    expandAxes.forEach(axis => {\n        begin[axis] = 0;\n        end[axis] = 1;\n        newShape.splice(axis, 0, 1);\n    });\n    const xReshaped = reshape({ inputs: { x }, attrs: { shape: newShape }, backend });\n    const { begin: normalizedBegin, end: normalizedEnd, strides: normalizedStrides } = backend_util.slice_util.getNormalizedAxes(xReshaped.shape, ellipsisAxes, numInterpolatedAxes, begin, end, strides, beginMask, endMask, ellipsisMask);\n    begin = normalizedBegin;\n    end = normalizedEnd;\n    strides = normalizedStrides;\n    const shrinkAxes = backend_util.slice_util.maskToAxes(shrinkAxisMask);\n    // Adjust the ends based on the shrink mask.\n    shrinkAxes.forEach(axis => {\n        end[axis] = begin[axis] + 1;\n        strides[axis] = 1;\n    });\n    // Figure out the output shape.\n    const size = backend_util.slice_util.computeOutShape(begin, end, strides);\n    // Remove the axes based on shrinkMask.\n    const outShape = size.filter((_, axis) => shrinkAxes.indexOf(axis) === -1);\n    const nonStrided = strides.every(v => v === 1);\n    if (nonStrided) {\n        const xSliced = slice({ inputs: { x: xReshaped }, attrs: { begin, size }, backend });\n        backend.disposeData(xReshaped.dataId);\n        const reshaped = reshape({ inputs: { x: xSliced }, attrs: { shape: outShape }, backend });\n        backend.disposeData(xSliced.dataId);\n        return reshaped;\n    }\n    const out = backend.makeOutput(outShape, 'float32');\n    if (!outShape.some(axis => axis === 0)) {\n        const xId = backend.dataIdMap.get(xReshaped.dataId).id;\n        const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(xReshaped.shape)).buffer);\n        const beginBytes = new Uint8Array(new Int32Array(begin).buffer);\n        const endBytes = new Uint8Array(new Int32Array(end).buffer);\n        const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n        const outputShapeBytes = new Uint8Array(new Int32Array(outShape).buffer);\n        const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmStridedSlice(xId, xStridesBytes, xReshaped.shape.length, beginBytes, endBytes, stridesBytes, outputShapeBytes, outStridesBytes, outShape.length, outId);\n    }\n    backend.disposeData(xReshaped.dataId);\n    const reshaped = reshape({ inputs: { x: out }, attrs: { shape: outShape }, backend });\n    backend.disposeData(out.dataId);\n    return reshaped;\n}\nexport const stridedSliceConfig = {\n    kernelName: StridedSlice,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: stridedSlice\n};\n//# sourceMappingURL=StridedSlice.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Sum, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmSum;\nfunction setup(backend) {\n    wasmSum = backend.wasm.cwrap(Sum, null /*void*/, ['number, number, number']);\n}\nfunction sum(args) {\n    const { backend, inputs, attrs } = args;\n    const { axis, keepDims } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, originalAxes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    let reductionAxes = axes;\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        if (transposedId !== xId) {\n            // transpose was not a no-op. We will need to dispose of this\n            // once we are done.\n            input = transposed;\n            inputId = transposedId;\n            reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, input.shape.length);\n        }\n    }\n    backend_util.assertAxesAreInnerMostDims('sum', reductionAxes, input.shape.length);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, input.dtype);\n    if (util.sizeFromShape(input.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmSum(inputId, reduceSize, outId);\n    }\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    if (keepDims) {\n        // reshape\n        const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n        out.shape = newShape;\n    }\n    return out;\n}\nexport const sumConfig = {\n    kernelName: Sum,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: sum\n};\n//# sourceMappingURL=Sum.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tile } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmTile;\nfunction setup(backend) {\n    wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n        'number',\n        'array',\n        'number',\n        'array',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction tile(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const { reps } = attrs;\n    const newShape = new Array(x.shape.length);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[i] * reps[i];\n    }\n    const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n    const out = backend.makeOutput(newShape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmTile(xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length, CppDType[out.dtype], outId);\n    return out;\n}\nexport const tileConfig = {\n    kernelName: Tile,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: tile\n};\n//# sourceMappingURL=Tile.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmTopK;\nfunction setup(backend) {\n    wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'bool',\n        'number',\n        'number',\n    ]);\n}\nexport const topk = ({ inputs, backend, attrs }) => {\n    const { x } = inputs;\n    const { k, sorted } = attrs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    const outputShape = x.shape.slice();\n    outputShape[outputShape.length - 1] = k;\n    const outValues = backend.makeOutput(outputShape, x.dtype);\n    const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n    const outIndices = backend.makeOutput(outputShape, 'int32');\n    const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n    wasmTopK(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted, outValuesId, outIndicesId);\n    return [outValues, outIndices];\n};\nexport const topKConfig = {\n    kernelName: TopK,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: topk,\n};\n//# sourceMappingURL=TopK.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform, util } from '@tensorflow/tfjs-core';\nlet wasmTransform;\nfunction setup(backend) {\n    wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\n        'number',\n        'number',\n        'bool',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // outId\n    ]);\n}\nfunction transform(args) {\n    const { backend, inputs, attrs } = args;\n    const { image, transforms } = inputs;\n    const { interpolation, fillMode, fillValue, outputShape } = attrs;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    const [outHeight, outWidth] = outputShape != null ? outputShape : [imageHeight, imageWidth];\n    const outShape = [batch, outHeight, outWidth,\n        numChannels];\n    const strides = new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n    const out = backend.makeOutput(outShape, image.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const imageData = backend.dataIdMap.get(image.dataId);\n    const imageId = imageData.id;\n    const transformsData = backend.dataIdMap.get(transforms.dataId);\n    const transformsId = transformsData.id;\n    const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n    let fillModeId;\n    switch (fillMode) {\n        case 'constant':\n            fillModeId = 1;\n            break;\n        case 'reflect':\n            fillModeId = 2;\n            break;\n        case 'wrap':\n            fillModeId = 3;\n            break;\n        case 'nearest':\n            fillModeId = 4;\n            break;\n        default:\n            fillModeId = 1;\n            break;\n    }\n    wasmTransform(imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight, outWidth, numChannels, imageWidth, imageHeight, strides, image.shape.length - 1, interpolationModeId, fillModeId, fillValue, outId);\n    return out;\n}\nexport const transformConfig = {\n    kernelName: Transform,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: transform\n};\n//# sourceMappingURL=Transform.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nfunction zerosLike(args) {\n    const { inputs: { x }, backend } = args;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.fill(0);\n    return out;\n}\nexport const zerosLikeConfig = {\n    kernelName: ZerosLike,\n    backendName: 'wasm',\n    kernelFunc: zerosLike,\n};\n//# sourceMappingURL=ZerosLike.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { addConfig } from './kernels/Add';\nimport { addNConfig } from './kernels/AddN';\nimport { allConfig } from './kernels/All';\nimport { anyConfig } from './kernels/Any';\nimport { argMaxConfig } from './kernels/ArgMax';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipByValueConfig } from './kernels/ClipByValue';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { cosConfig } from './kernels/Cos';\nimport { cropAndResizeConfig } from './kernels/CropAndResize';\nimport { cumsumConfig } from './kernels/Cumsum';\nimport { depthToSpaceConfig } from './kernels/DepthToSpace';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { equalConfig } from './kernels/Equal';\nimport { expConfig } from './kernels/Exp';\nimport { expandDimsConfig } from './kernels/ExpandDims';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { floorDivConfig } from './kernels/FloorDiv';\nimport { fusedBatchNormConfig } from './kernels/FusedBatchNorm';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { gatherNdConfig } from './kernels/GatherNd';\nimport { gatherV2Config } from './kernels/GatherV2';\nimport { greaterConfig } from './kernels/Greater';\nimport { greaterEqualConfig } from './kernels/GreaterEqual';\nimport { identityConfig } from './kernels/Identity';\nimport { leakyReluConfig } from './kernels/LeakyRelu';\nimport { lessConfig } from './kernels/Less';\nimport { lessEqualConfig } from './kernels/LessEqual';\nimport { logConfig } from './kernels/Log';\nimport { logicalAndConfig } from './kernels/LogicalAnd';\nimport { maxConfig } from './kernels/Max';\nimport { maximumConfig } from './kernels/Maximum';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { meanConfig } from './kernels/Mean';\nimport { minConfig } from './kernels/Min';\nimport { minimumConfig } from './kernels/Minimum';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { negConfig } from './kernels/Neg';\nimport { nonMaxSuppressionV3Config } from './kernels/NonMaxSuppressionV3';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { oneHotConfig } from './kernels/OneHot';\nimport { onesLikeConfig } from './kernels/OnesLike';\nimport { packConfig } from './kernels/Pack';\nimport { padV2Config } from './kernels/PadV2';\nimport { powConfig } from './kernels/Pow';\nimport { preluConfig } from './kernels/Prelu';\nimport { prodConfig } from './kernels/Prod';\nimport { rangeConfig } from './kernels/Range';\nimport { realDivConfig } from './kernels/RealDiv';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { resizeBilinearConfig } from './kernels/ResizeBilinear';\nimport { reverseConfig } from './kernels/Reverse';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { scatterNdConfig } from './kernels/ScatterNd';\nimport { selectConfig } from './kernels/Select';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { sinConfig } from './kernels/Sin';\nimport { sliceConfig } from './kernels/Slice';\nimport { softmaxConfig } from './kernels/Softmax';\nimport { splitVConfig } from './kernels/SplitV';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { stridedSliceConfig } from './kernels/StridedSlice';\nimport { subConfig } from './kernels/Sub';\nimport { sumConfig } from './kernels/Sum';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { tileConfig } from './kernels/Tile';\nimport { topKConfig } from './kernels/TopK';\nimport { transformConfig } from './kernels/Transform';\nimport { transposeConfig } from './kernels/Transpose';\nimport { unpackConfig } from './kernels/Unpack';\nimport { zerosLikeConfig } from './kernels/ZerosLike';\n// List all kernel configs here\nconst kernelConfigs = [\n    absConfig,\n    addConfig,\n    addNConfig,\n    allConfig,\n    anyConfig,\n    argMaxConfig,\n    avgPoolConfig,\n    batchMatMulConfig,\n    castConfig,\n    ceilConfig,\n    clipByValueConfig,\n    concatConfig,\n    conv2DConfig,\n    conv2DBackpropInputConfig,\n    cosConfig,\n    cropAndResizeConfig,\n    cumsumConfig,\n    depthToSpaceConfig,\n    depthwiseConv2dNativeConfig,\n    equalConfig,\n    expConfig,\n    expandDimsConfig,\n    fillConfig,\n    flipLeftRightConfig,\n    floorConfig,\n    floorDivConfig,\n    fusedMatMulConfig,\n    fusedBatchNormConfig,\n    fusedConv2DConfig,\n    fusedDepthwiseConv2DConfig,\n    gatherNdConfig,\n    gatherV2Config,\n    greaterConfig,\n    greaterEqualConfig,\n    identityConfig,\n    leakyReluConfig,\n    lessConfig,\n    lessEqualConfig,\n    logConfig,\n    logicalAndConfig,\n    maxConfig,\n    maximumConfig,\n    maxPoolConfig,\n    meanConfig,\n    minConfig,\n    minimumConfig,\n    mirrorPadConfig,\n    multiplyConfig,\n    negConfig,\n    nonMaxSuppressionV3Config,\n    nonMaxSuppressionV4Config,\n    nonMaxSuppressionV5Config,\n    notEqualConfig,\n    oneHotConfig,\n    onesLikeConfig,\n    packConfig,\n    padV2Config,\n    powConfig,\n    preluConfig,\n    prodConfig,\n    rangeConfig,\n    realDivConfig,\n    reluConfig,\n    relu6Config,\n    reshapeConfig,\n    resizeBilinearConfig,\n    reverseConfig,\n    rotateWithOffsetConfig,\n    rsqrtConfig,\n    roundConfig,\n    scatterNdConfig,\n    selectConfig,\n    sigmoidConfig,\n    sinConfig,\n    sliceConfig,\n    softmaxConfig,\n    splitVConfig,\n    sqrtConfig,\n    squareConfig,\n    squaredDifferenceConfig,\n    stepConfig,\n    stridedSliceConfig,\n    subConfig,\n    sumConfig,\n    tanConfig,\n    tanhConfig,\n    tileConfig,\n    topKConfig,\n    transformConfig,\n    transposeConfig,\n    unpackConfig,\n    zerosLikeConfig\n];\nfor (const kernelConfig of kernelConfigs) {\n    registerKernel(kernelConfig);\n}\n//# sourceMappingURL=register_all_kernels.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SplitV, util } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n    const { inputs, attrs, backend } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = util.parseAxisParam(axis, x.shape)[0];\n    const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n    const begin = new Array(x.shape.length).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const xSliceSize = [...size];\n        xSliceSize[$axis] = s;\n        const xSlice = slice({ inputs: { x }, attrs: { begin, size: xSliceSize }, backend });\n        begin[$axis] += s;\n        return xSlice;\n    });\n}\nexport const splitVConfig = {\n    kernelName: SplitV,\n    backendName: 'wasm',\n    kernelFunc: splitV\n};\n//# sourceMappingURL=SplitV.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sqrt } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const sqrtConfig = createUnaryKernelConfig(Sqrt);\n//# sourceMappingURL=Sqrt.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const squareConfig = createUnaryKernelConfig(Square);\n//# sourceMappingURL=Square.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig = createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n//# sourceMappingURL=SquaredDifference.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig = createBinaryKernelConfig(Sub, supportsFullBroadcast);\n//# sourceMappingURL=Sub.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tan } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const tanConfig = createUnaryKernelConfig(Tan);\n//# sourceMappingURL=Tan.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tanh } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const tanhConfig = createUnaryKernelConfig(Tanh);\n//# sourceMappingURL=Tanh.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nfunction unpack(args) {\n    const { inputs, backend, attrs } = args;\n    const { value } = inputs;\n    let { axis } = attrs;\n    if (axis < 0) {\n        axis += value.shape.length;\n    }\n    const numOutputs = value.shape[axis];\n    const rank = value.shape.length;\n    const outShape = new Array(rank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < rank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = value.shape[i];\n        }\n    }\n    const outs = new Array(numOutputs);\n    const begin = new Array(rank).fill(0);\n    const size = value.shape.slice();\n    size[axis] = 1;\n    for (let i = 0; i < outs.length; i++) {\n        begin[axis] = i;\n        outs[i] = slice({ inputs: { x: value }, attrs: { begin, size }, backend });\n    }\n    return outs.map(({ dataId, dtype }) => ({ dataId, dtype, shape: outShape }));\n}\nexport const unpackConfig = {\n    kernelName: Unpack,\n    backendName: 'wasm',\n    kernelFunc: unpack,\n};\n//# sourceMappingURL=Unpack.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nconst ENV = env();\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n// This typed array passed in to WebAssembly.validate is WebAssembly binary\n// code. In this case it is a small program that contains SIMD\n// instructions.\n'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3,\n    2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n])));\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n    // TODO(annxingyuan): Enable node support once this is resolved:\n    // https://github.com/tensorflow/tfjs/issues/3830\n    if (ENV.get('IS_NODE')) {\n        return false;\n    }\n    try {\n        // Test for transferability of SABs (needed for Firefox)\n        // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n        new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n        // This typed array is a WebAssembly program containing threaded\n        // instructions.\n        return WebAssembly.validate(new Uint8Array([\n            0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5,\n            4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11\n        ]));\n    }\n    catch (e) {\n        return false;\n    }\n});\n//# sourceMappingURL=flags_wasm.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\nimport { DataStorage, deprecationWarn, engine, env, KernelBackend, util } from '@tensorflow/tfjs-core';\nimport wasmFactoryThreadedSimd from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport { wasmWorkerContents } from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\nexport class BackendWasm extends KernelBackend {\n    constructor(wasm) {\n        super();\n        this.wasm = wasm;\n        // 0 is reserved for null data ids.\n        this.dataIdNextNumber = 1;\n        this.wasm.tfjs.init();\n        this.dataIdMap = new DataStorage(this, engine());\n    }\n    write(values, shape, dtype) {\n        const dataId = { id: this.dataIdNextNumber++ };\n        this.move(dataId, values, shape, dtype, 1);\n        return dataId;\n    }\n    numDataIds() {\n        return this.dataIdMap.numDataIds();\n    }\n    async time(f) {\n        const start = util.now();\n        f();\n        const kernelMs = util.now() - start;\n        return { kernelMs };\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        const id = this.dataIdNextNumber++;\n        if (dtype === 'string') {\n            const stringBytes = values;\n            this.dataIdMap.set(dataId, { id, stringBytes, shape, dtype, memoryOffset: null, refCount });\n            return;\n        }\n        const size = util.sizeFromShape(shape);\n        const numBytes = size * util.bytesPerElement(dtype);\n        const memoryOffset = this.wasm._malloc(numBytes);\n        this.dataIdMap.set(dataId, { id, memoryOffset, shape, dtype, refCount });\n        this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n        if (values != null) {\n            this.wasm.HEAPU8.set(new Uint8Array(values.buffer, values.byteOffset, numBytes), memoryOffset);\n        }\n    }\n    async read(dataId) {\n        return this.readSync(dataId);\n    }\n    readSync(dataId) {\n        const { memoryOffset, dtype, shape, stringBytes } = this.dataIdMap.get(dataId);\n        if (dtype === 'string') {\n            return stringBytes;\n        }\n        const bytes = this.wasm.HEAPU8.slice(memoryOffset, memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n        return typedArrayFromBuffer(bytes.buffer, dtype);\n    }\n    /**\n     * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n     * is released, false otherwise.\n     * @param dataId\n     * @oaram force Optional, remove the data regardless of refCount\n     */\n    disposeData(dataId, force = false) {\n        if (this.dataIdMap.has(dataId)) {\n            const data = this.dataIdMap.get(dataId);\n            data.refCount--;\n            if (!force && data.refCount > 0) {\n                return false;\n            }\n            this.wasm._free(data.memoryOffset);\n            this.wasm.tfjs.disposeData(data.id);\n            this.dataIdMap.delete(dataId);\n        }\n        return true;\n    }\n    /** Return refCount of a `TensorData`. */\n    refCount(dataId) {\n        if (this.dataIdMap.has(dataId)) {\n            const tensorData = this.dataIdMap.get(dataId);\n            return tensorData.refCount;\n        }\n        return 0;\n    }\n    incRef(dataId) {\n        const data = this.dataIdMap.get(dataId);\n        if (data != null) {\n            data.refCount++;\n        }\n    }\n    floatPrecision() {\n        return 32;\n    }\n    // Returns the memory offset of a tensor. Useful for debugging and unit\n    // testing.\n    getMemoryOffset(dataId) {\n        return this.dataIdMap.get(dataId).memoryOffset;\n    }\n    dispose() {\n        this.wasm.tfjs.dispose();\n        if ('PThread' in this.wasm) {\n            this.wasm.PThread.terminateAllThreads();\n        }\n        this.wasm = null;\n    }\n    memory() {\n        return { unreliable: false };\n    }\n    /**\n     * Make a tensor info for the output of an op. If `memoryOffset` is not\n     * present, this method allocates memory on the WASM heap. If `memoryOffset`\n     * is present, the memory was allocated elsewhere (in c++) and we just record\n     * the pointer where that memory lives.\n     */\n    makeOutput(shape, dtype, memoryOffset) {\n        let dataId;\n        if (memoryOffset == null) {\n            dataId = this.write(null /* values */, shape, dtype);\n        }\n        else {\n            const id = this.dataIdNextNumber++;\n            dataId = { id };\n            this.dataIdMap.set(dataId, { id, memoryOffset, shape, dtype, refCount: 1 });\n            const size = util.sizeFromShape(shape);\n            this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n        }\n        return { dataId, shape, dtype };\n    }\n    typedArrayFromHeap({ shape, dtype, dataId }) {\n        const buffer = this.wasm.HEAPU8.buffer;\n        const { memoryOffset } = this.dataIdMap.get(dataId);\n        const size = util.sizeFromShape(shape);\n        switch (dtype) {\n            case 'float32':\n                return new Float32Array(buffer, memoryOffset, size);\n            case 'int32':\n                return new Int32Array(buffer, memoryOffset, size);\n            case 'bool':\n                return new Uint8Array(buffer, memoryOffset, size);\n            default:\n                throw new Error(`Unknown dtype ${dtype}`);\n        }\n    }\n}\nfunction createInstantiateWasmFunc(path) {\n    // this will be replace by rollup plugin patchWechatWebAssembly in \n    // minprogram's output.\n    // tslint:disable-next-line:no-any\n    return (imports, callback) => {\n        util.fetch(path, { credentials: 'same-origin' }).then((response) => {\n            if (!response['ok']) {\n                imports.env.a(`failed to load wasm binary file at '${path}'`);\n            }\n            response.arrayBuffer().then(binary => {\n                WebAssembly.instantiate(binary, imports).then(output => {\n                    callback(output.instance, output.module);\n                });\n            });\n        });\n        return {};\n    };\n}\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(simdSupported, threadsSupported, wasmModuleFolder) {\n    if (wasmPath != null) {\n        // If wasmPath is defined, the user has supplied a full path to\n        // the vanilla .wasm binary.\n        return wasmPath;\n    }\n    let path = 'tfjs-backend-wasm.wasm';\n    if (simdSupported && threadsSupported) {\n        path = 'tfjs-backend-wasm-threaded-simd.wasm';\n    }\n    else if (simdSupported) {\n        path = 'tfjs-backend-wasm-simd.wasm';\n    }\n    if (wasmFileMap != null) {\n        if (wasmFileMap[path] != null) {\n            return wasmFileMap[path];\n        }\n    }\n    return wasmModuleFolder + path;\n}\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init() {\n    const [simdSupported, threadsSupported] = await Promise.all([\n        env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n        env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n    ]);\n    return new Promise((resolve, reject) => {\n        const factoryConfig = {};\n        /**\n         * This function overrides the Emscripten module locateFile utility.\n         * @param path The relative path to the file that needs to be loaded.\n         * @param prefix The path to the main JavaScript file's directory.\n         */\n        factoryConfig.locateFile = (path, prefix) => {\n            if (path.endsWith('.worker.js')) {\n                const response = wasmWorkerContents;\n                const blob = new Blob([response], { type: 'application/javascript' });\n                return URL.createObjectURL(blob);\n            }\n            if (path.endsWith('.wasm')) {\n                return getPathToWasmBinary(simdSupported, threadsSupported, wasmPathPrefix != null ? wasmPathPrefix : prefix);\n            }\n            return prefix + path;\n        };\n        // Use the instantiateWasm override when system fetch is not available.\n        // Reference:\n        // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n        if (customFetch) {\n            factoryConfig.instantiateWasm =\n                createInstantiateWasmFunc(getPathToWasmBinary(simdSupported, threadsSupported, wasmPathPrefix != null ? wasmPathPrefix : ''));\n        }\n        let initialized = false;\n        factoryConfig.onAbort = () => {\n            if (initialized) {\n                // Emscripten already called console.warn so no need to double log.\n                return;\n            }\n            if (initAborted) {\n                // Emscripten calls `onAbort` twice, resulting in double error\n                // messages.\n                return;\n            }\n            initAborted = true;\n            const rejectMsg = 'Make sure the server can serve the `.wasm` file relative to the ' +\n                'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n            reject({ message: rejectMsg });\n        };\n        let wasm;\n        // If `wasmPath` has been defined we must initialize the vanilla module.\n        if (threadsSupported && simdSupported && wasmPath == null) {\n            factoryConfig.mainScriptUrlOrBlob = new Blob([`var WasmBackendModuleThreadedSimd = ` +\n                    wasmFactoryThreadedSimd.toString()], { type: 'text/javascript' });\n            wasm = wasmFactoryThreadedSimd(factoryConfig);\n        }\n        else {\n            // The wasmFactory works for both vanilla and SIMD binaries.\n            wasm = wasmFactory(factoryConfig);\n        }\n        // The WASM module has been successfully created by the factory.\n        // Any error will be caught by the onAbort callback defined above.\n        wasm.then((module) => {\n            initialized = true;\n            initAborted = false;\n            const voidReturnType = null;\n            // Using the tfjs namespace to avoid conflict with emscripten's API.\n            module.tfjs = {\n                init: module.cwrap('init', null, []),\n                registerTensor: module.cwrap('register_tensor', null, [\n                    'number',\n                    'number',\n                    'number',\n                ]),\n                disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\n                dispose: module.cwrap('dispose', voidReturnType, []),\n            };\n            resolve({ wasm: module });\n        });\n    });\n}\nfunction typedArrayFromBuffer(buffer, dtype) {\n    switch (dtype) {\n        case 'float32':\n            return new Float32Array(buffer);\n        case 'int32':\n            return new Int32Array(buffer);\n        case 'bool':\n            return new Uint8Array(buffer);\n        default:\n            throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\nconst wasmBinaryNames = [\n    'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n    'tfjs-backend-wasm-threaded-simd.wasm'\n];\nlet wasmPath = null;\nlet wasmPathPrefix = null;\nlet wasmFileMap = {};\nlet initAborted = false;\nlet customFetch = false;\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path, usePlatformFetch = false) {\n    deprecationWarn('setWasmPath has been deprecated in favor of setWasmPaths and' +\n        ' will be removed in a future release.');\n    if (initAborted) {\n        throw new Error('The WASM backend was already initialized. Make sure you call ' +\n            '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n    }\n    wasmPath = path;\n    customFetch = usePlatformFetch;\n}\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(prefixOrFileMap, usePlatformFetch = false) {\n    if (initAborted) {\n        throw new Error('The WASM backend was already initialized. Make sure you call ' +\n            '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n            '`tf.ready()`');\n    }\n    if (typeof prefixOrFileMap === 'string') {\n        wasmPathPrefix = prefixOrFileMap;\n    }\n    else {\n        wasmFileMap = prefixOrFileMap;\n        const missingPaths = wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n        if (missingPaths.length > 0) {\n            throw new Error(`There were no entries found for the following binaries: ` +\n                `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n                `map providing a path for each binary, or with a string indicating ` +\n                `the directory where all the binaries can be found.`);\n        }\n    }\n    customFetch = usePlatformFetch;\n}\n/** Used in unit tests. */\nexport function resetWasmPath() {\n    wasmPath = null;\n    wasmPathPrefix = null;\n    wasmFileMap = {};\n    customFetch = false;\n    initAborted = false;\n}\n//# sourceMappingURL=backend_wasm.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\nimport { registerBackend } from '@tensorflow/tfjs-core';\nimport { BackendWasm, init } from './backend_wasm';\nexport { BackendWasm, setWasmPath, setWasmPaths } from './backend_wasm';\nexport { version as version_wasm } from './version';\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n    const { wasm } = await init();\n    return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n//# sourceMappingURL=base.js.map","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default index;\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n"],"sourceRoot":""}